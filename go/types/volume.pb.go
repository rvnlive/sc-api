// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types/volume.proto

package types

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// What is the level of mute support that the speaker provides
type MuteSupport int32

const (
	// The speaker natively supports mute
	MuteSupport_MUTE_NATIVE MuteSupport = 0
	// Muting is emulated, typically by setting the gain to 0
	MuteSupport_MUTE_EMULATED MuteSupport = 1
)

var MuteSupport_name = map[int32]string{
	0: "MUTE_NATIVE",
	1: "MUTE_EMULATED",
}

var MuteSupport_value = map[string]int32{
	"MUTE_NATIVE":   0,
	"MUTE_EMULATED": 1,
}

func (x MuteSupport) String() string {
	return proto.EnumName(MuteSupport_name, int32(x))
}

func (MuteSupport) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9299a1c2c391d828, []int{0}
}

// A change to the volume state
type VolumeChange struct {
	// The name of the device that is the source of the change
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// When the change was applied
	ChangeTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=change_time,json=changeTime,proto3" json:"change_time,omitempty"`
	// The new state for the change
	Volume               *Volume  `protobuf:"bytes,3,opt,name=volume,proto3" json:"volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VolumeChange) Reset()         { *m = VolumeChange{} }
func (m *VolumeChange) String() string { return proto.CompactTextString(m) }
func (*VolumeChange) ProtoMessage()    {}
func (*VolumeChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_9299a1c2c391d828, []int{0}
}

func (m *VolumeChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VolumeChange.Unmarshal(m, b)
}
func (m *VolumeChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VolumeChange.Marshal(b, m, deterministic)
}
func (m *VolumeChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VolumeChange.Merge(m, src)
}
func (m *VolumeChange) XXX_Size() int {
	return xxx_messageInfo_VolumeChange.Size(m)
}
func (m *VolumeChange) XXX_DiscardUnknown() {
	xxx_messageInfo_VolumeChange.DiscardUnknown(m)
}

var xxx_messageInfo_VolumeChange proto.InternalMessageInfo

func (m *VolumeChange) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VolumeChange) GetChangeTime() *timestamp.Timestamp {
	if m != nil {
		return m.ChangeTime
	}
	return nil
}

func (m *VolumeChange) GetVolume() *Volume {
	if m != nil {
		return m.Volume
	}
	return nil
}

func init() {
	proto.RegisterEnum("smartcore.api.types.MuteSupport", MuteSupport_name, MuteSupport_value)
	proto.RegisterType((*VolumeChange)(nil), "smartcore.api.types.VolumeChange")
}

func init() { proto.RegisterFile("types/volume.proto", fileDescriptor_9299a1c2c391d828) }

var fileDescriptor_9299a1c2c391d828 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0xb1, 0x4e, 0xc3, 0x30,
	0x18, 0x84, 0x71, 0x41, 0x95, 0x70, 0x40, 0x04, 0x77, 0x20, 0x0a, 0x03, 0x15, 0x53, 0x41, 0xe2,
	0xb7, 0xa0, 0x23, 0x53, 0x0a, 0x19, 0x90, 0x08, 0xaa, 0xd2, 0xb4, 0x03, 0x4b, 0xe5, 0x06, 0x13,
	0x2c, 0x9a, 0xd8, 0x4a, 0xec, 0x48, 0xbc, 0x07, 0x4f, 0xc1, 0x53, 0xa2, 0xd8, 0x6d, 0xa7, 0x6e,
	0xd6, 0xf9, 0xee, 0xbb, 0xfb, 0x31, 0xd1, 0x3f, 0x8a, 0x37, 0xb4, 0x95, 0x6b, 0x53, 0x72, 0x50,
	0xb5, 0xd4, 0x92, 0x0c, 0x9a, 0x92, 0xd5, 0x3a, 0x97, 0x35, 0x07, 0xa6, 0x04, 0x58, 0x47, 0x78,
	0x55, 0x48, 0x59, 0xac, 0x39, 0xb5, 0x96, 0x95, 0xf9, 0xa4, 0x5a, 0x94, 0xbc, 0xd1, 0xac, 0x54,
	0x2e, 0x15, 0xfa, 0x8e, 0x64, 0x2a, 0xa1, 0x9d, 0x72, 0xfd, 0x8b, 0xf0, 0xc9, 0xc2, 0x82, 0x9f,
	0xbe, 0x58, 0x55, 0x70, 0x42, 0xf0, 0x51, 0xc5, 0x4a, 0x1e, 0xa0, 0x21, 0x1a, 0x1d, 0xa7, 0xf6,
	0x4d, 0x1e, 0xb1, 0x97, 0xdb, 0xdf, 0x65, 0x07, 0x0c, 0x7a, 0x43, 0x34, 0xf2, 0x1e, 0x42, 0x70,
	0x6d, 0xb0, 0x6d, 0x83, 0x6c, 0xdb, 0x96, 0x62, 0x67, 0xef, 0x04, 0x32, 0xc6, 0x7d, 0xb7, 0x3c,
	0x38, 0xb4, 0xb9, 0x4b, 0xd8, 0x33, 0x1d, 0xdc, 0x86, 0x74, 0x63, 0xbd, 0xbd, 0xc7, 0x5e, 0x62,
	0x34, 0x9f, 0x19, 0xa5, 0x64, 0xad, 0xc9, 0x19, 0xf6, 0x92, 0x79, 0x16, 0x2f, 0xdf, 0xa2, 0xec,
	0x65, 0x11, 0xfb, 0x07, 0xe4, 0x1c, 0x9f, 0x5a, 0x21, 0x4e, 0xe6, 0xaf, 0x51, 0x16, 0x3f, 0xfb,
	0x68, 0x22, 0xf0, 0xc5, 0x07, 0x6f, 0xf7, 0xc1, 0x27, 0x9e, 0xa3, 0x4f, 0xbb, 0xa1, 0x53, 0xf4,
	0x7e, 0x53, 0x08, 0x0d, 0x2d, 0xab, 0xb4, 0x80, 0x5c, 0x82, 0xf9, 0xa6, 0xbb, 0x0c, 0x6d, 0xf2,
	0x3b, 0xa6, 0x04, 0x2d, 0x24, 0xb5, 0xc9, 0xbf, 0xde, 0x60, 0xb6, 0xe3, 0x45, 0x4a, 0x40, 0xd6,
	0xa9, 0xab, 0xbe, 0x3d, 0x79, 0xfc, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x9e, 0xe6, 0x44, 0x99,
	0x01, 0x00, 0x00,
}
