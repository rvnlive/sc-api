// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types/tween.proto

package types

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Denote different types of tween support. Clients may use this to control performance sensitive areas by enabling or
// disabling tweening when support is not native, for example
type TweenSupport int32

const (
	// The device doesn't not support tweening
	TweenSupport_NO_SUPPORT TweenSupport = 0
	// The device natively supports tweening. Natively typically means with minimal performance impact (i.e. no network)
	TweenSupport_NATIVE TweenSupport = 1
	// The device supports tweening via emulation. Typically tweening is implemented by the Smart Core driver or a
	// supervisor node and not the device itself.
	TweenSupport_EMULATED TweenSupport = 2
	// The device tweens values, but the duration or rate is fixed and cannot be adjusted. For example a motor might only
	// have one speed when operating an adjustable desk
	TweenSupport_FIXED TweenSupport = 3
)

var TweenSupport_name = map[int32]string{
	0: "NO_SUPPORT",
	1: "NATIVE",
	2: "EMULATED",
	3: "FIXED",
}

var TweenSupport_value = map[string]int32{
	"NO_SUPPORT": 0,
	"NATIVE":     1,
	"EMULATED":   2,
	"FIXED":      3,
}

func (x TweenSupport) String() string {
	return proto.EnumName(TweenSupport_name, int32(x))
}

func (TweenSupport) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2f36539f4b85a144, []int{0}
}

// An in-progress transition between two values. The values themselves should be defined in an enclosing message.
type Tween struct {
	// 0-100, how far along the transition (in time) are we.
	Progress float32 `protobuf:"fixed32,1,opt,name=progress,proto3" json:"progress,omitempty"`
	// how long the transition will last in total
	TotalDuration        *duration.Duration `protobuf:"bytes,2,opt,name=total_duration,json=totalDuration,proto3" json:"total_duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Tween) Reset()         { *m = Tween{} }
func (m *Tween) String() string { return proto.CompactTextString(m) }
func (*Tween) ProtoMessage()    {}
func (*Tween) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f36539f4b85a144, []int{0}
}

func (m *Tween) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tween.Unmarshal(m, b)
}
func (m *Tween) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tween.Marshal(b, m, deterministic)
}
func (m *Tween) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tween.Merge(m, src)
}
func (m *Tween) XXX_Size() int {
	return xxx_messageInfo_Tween.Size(m)
}
func (m *Tween) XXX_DiscardUnknown() {
	xxx_messageInfo_Tween.DiscardUnknown(m)
}

var xxx_messageInfo_Tween proto.InternalMessageInfo

func (m *Tween) GetProgress() float32 {
	if m != nil {
		return m.Progress
	}
	return 0
}

func (m *Tween) GetTotalDuration() *duration.Duration {
	if m != nil {
		return m.TotalDuration
	}
	return nil
}

func init() {
	proto.RegisterEnum("smartcore.api.types.TweenSupport", TweenSupport_name, TweenSupport_value)
	proto.RegisterType((*Tween)(nil), "smartcore.api.types.Tween")
}

func init() { proto.RegisterFile("types/tween.proto", fileDescriptor_2f36539f4b85a144) }

var fileDescriptor_2f36539f4b85a144 = []byte{
	// 279 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0xd1, 0x4e, 0xf2, 0x30,
	0x18, 0x86, 0xff, 0xed, 0x0f, 0x04, 0x3f, 0x91, 0xcc, 0x72, 0x20, 0x72, 0x60, 0x88, 0x47, 0x68,
	0x62, 0x9b, 0xe8, 0x0d, 0x38, 0xdc, 0x4c, 0x48, 0x14, 0x96, 0x6d, 0x18, 0xe3, 0x09, 0x29, 0xa3,
	0xce, 0x46, 0xe4, 0x6b, 0xba, 0x0e, 0xe3, 0x2d, 0x79, 0x95, 0x66, 0x95, 0xed, 0xc8, 0xc3, 0xb7,
	0x79, 0x9f, 0xa7, 0xdf, 0x0b, 0xc7, 0xe6, 0x4b, 0x89, 0x82, 0x99, 0x4f, 0x21, 0xb6, 0x54, 0x69,
	0x34, 0x48, 0xfa, 0xc5, 0x07, 0xd7, 0x26, 0x43, 0x2d, 0x28, 0x57, 0x92, 0xda, 0xc2, 0xf0, 0x2c,
	0x47, 0xcc, 0x37, 0x82, 0xd9, 0xca, 0xaa, 0x7c, 0x65, 0xeb, 0x52, 0x73, 0x23, 0x71, 0x0f, 0x9d,
	0x0b, 0x68, 0xa5, 0x95, 0x83, 0x0c, 0xa1, 0xa3, 0x34, 0xe6, 0x5a, 0x14, 0xc5, 0xc0, 0x19, 0x39,
	0x63, 0x37, 0x6e, 0x32, 0xb9, 0x85, 0x9e, 0x41, 0xc3, 0x37, 0xcb, 0x1a, 0x1e, 0xb8, 0x23, 0x67,
	0x7c, 0x78, 0x7d, 0x4a, 0x7f, 0xed, 0xb4, 0xb6, 0xd3, 0x60, 0x5f, 0x88, 0x8f, 0x2c, 0x50, 0xc7,
	0xcb, 0x3b, 0xe8, 0xda, 0x6f, 0x92, 0x52, 0x29, 0xd4, 0x86, 0xf4, 0x00, 0x66, 0xf3, 0x65, 0xb2,
	0x88, 0xa2, 0x79, 0x9c, 0x7a, 0xff, 0x08, 0x40, 0x7b, 0xe6, 0xa7, 0xd3, 0xa7, 0xd0, 0x73, 0x48,
	0x17, 0x3a, 0xe1, 0xe3, 0xe2, 0xc1, 0x4f, 0xc3, 0xc0, 0x73, 0xc9, 0x01, 0xb4, 0xee, 0xa7, 0xcf,
	0x61, 0xe0, 0xfd, 0x9f, 0xbc, 0xc1, 0xc9, 0x5a, 0xec, 0xe8, 0x1f, 0x33, 0x27, 0x60, 0xed, 0x51,
	0x75, 0x46, 0xe4, 0xbc, 0x5c, 0xe4, 0xd2, 0xd0, 0x1d, 0xdf, 0x1a, 0x49, 0x33, 0xa4, 0xe5, 0x3b,
	0x6b, 0x10, 0x56, 0x64, 0x57, 0x5c, 0x49, 0x96, 0x23, 0xb3, 0xe0, 0xb7, 0xdb, 0x4f, 0x1a, 0x9d,
	0xaf, 0x24, 0x4d, 0xab, 0xd7, 0x55, 0xdb, 0x0e, 0xba, 0xf9, 0x09, 0x00, 0x00, 0xff, 0xff, 0xfd,
	0x72, 0x13, 0xf6, 0x66, 0x01, 0x00, 0x00,
}
