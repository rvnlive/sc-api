// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device/traits/on_off.proto

package traits

import (
	context "context"
	fmt "fmt"
	types "git.vanti.co.uk/smartcore/sc-api/go/types"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A change to the state
type OnOffChange struct {
	// name for the device that issued the change
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// when the change occurred
	CreateTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// the new state for the device
	State                types.OnOffState `protobuf:"varint,3,opt,name=state,proto3,enum=smartcore.api.types.OnOffState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *OnOffChange) Reset()         { *m = OnOffChange{} }
func (m *OnOffChange) String() string { return proto.CompactTextString(m) }
func (*OnOffChange) ProtoMessage()    {}
func (*OnOffChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee49b93115aaa9ee, []int{0}
}

func (m *OnOffChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnOffChange.Unmarshal(m, b)
}
func (m *OnOffChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnOffChange.Marshal(b, m, deterministic)
}
func (m *OnOffChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnOffChange.Merge(m, src)
}
func (m *OnOffChange) XXX_Size() int {
	return xxx_messageInfo_OnOffChange.Size(m)
}
func (m *OnOffChange) XXX_DiscardUnknown() {
	xxx_messageInfo_OnOffChange.DiscardUnknown(m)
}

var xxx_messageInfo_OnOffChange proto.InternalMessageInfo

func (m *OnOffChange) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OnOffChange) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *OnOffChange) GetState() types.OnOffState {
	if m != nil {
		return m.State
	}
	return types.OnOffState_UNKNOWN
}

type OnRequest struct {
	// Required. The name of the device that should be controlled
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnRequest) Reset()         { *m = OnRequest{} }
func (m *OnRequest) String() string { return proto.CompactTextString(m) }
func (*OnRequest) ProtoMessage()    {}
func (*OnRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee49b93115aaa9ee, []int{1}
}

func (m *OnRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnRequest.Unmarshal(m, b)
}
func (m *OnRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnRequest.Marshal(b, m, deterministic)
}
func (m *OnRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnRequest.Merge(m, src)
}
func (m *OnRequest) XXX_Size() int {
	return xxx_messageInfo_OnRequest.Size(m)
}
func (m *OnRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OnRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OnRequest proto.InternalMessageInfo

func (m *OnRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OnReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnReply) Reset()         { *m = OnReply{} }
func (m *OnReply) String() string { return proto.CompactTextString(m) }
func (*OnReply) ProtoMessage()    {}
func (*OnReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee49b93115aaa9ee, []int{2}
}

func (m *OnReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnReply.Unmarshal(m, b)
}
func (m *OnReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnReply.Marshal(b, m, deterministic)
}
func (m *OnReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnReply.Merge(m, src)
}
func (m *OnReply) XXX_Size() int {
	return xxx_messageInfo_OnReply.Size(m)
}
func (m *OnReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OnReply.DiscardUnknown(m)
}

var xxx_messageInfo_OnReply proto.InternalMessageInfo

type OffRequest struct {
	// Required. The name of the device that should be controlled
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OffRequest) Reset()         { *m = OffRequest{} }
func (m *OffRequest) String() string { return proto.CompactTextString(m) }
func (*OffRequest) ProtoMessage()    {}
func (*OffRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee49b93115aaa9ee, []int{3}
}

func (m *OffRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OffRequest.Unmarshal(m, b)
}
func (m *OffRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OffRequest.Marshal(b, m, deterministic)
}
func (m *OffRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OffRequest.Merge(m, src)
}
func (m *OffRequest) XXX_Size() int {
	return xxx_messageInfo_OffRequest.Size(m)
}
func (m *OffRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OffRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OffRequest proto.InternalMessageInfo

func (m *OffRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OffReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OffReply) Reset()         { *m = OffReply{} }
func (m *OffReply) String() string { return proto.CompactTextString(m) }
func (*OffReply) ProtoMessage()    {}
func (*OffReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee49b93115aaa9ee, []int{4}
}

func (m *OffReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OffReply.Unmarshal(m, b)
}
func (m *OffReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OffReply.Marshal(b, m, deterministic)
}
func (m *OffReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OffReply.Merge(m, src)
}
func (m *OffReply) XXX_Size() int {
	return xxx_messageInfo_OffReply.Size(m)
}
func (m *OffReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OffReply.DiscardUnknown(m)
}

var xxx_messageInfo_OffReply proto.InternalMessageInfo

type GetOnOffStateRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOnOffStateRequest) Reset()         { *m = GetOnOffStateRequest{} }
func (m *GetOnOffStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetOnOffStateRequest) ProtoMessage()    {}
func (*GetOnOffStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee49b93115aaa9ee, []int{5}
}

func (m *GetOnOffStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOnOffStateRequest.Unmarshal(m, b)
}
func (m *GetOnOffStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOnOffStateRequest.Marshal(b, m, deterministic)
}
func (m *GetOnOffStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOnOffStateRequest.Merge(m, src)
}
func (m *GetOnOffStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetOnOffStateRequest.Size(m)
}
func (m *GetOnOffStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOnOffStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOnOffStateRequest proto.InternalMessageInfo

func (m *GetOnOffStateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GetOnOffStateResponse struct {
	State                types.OnOffState `protobuf:"varint,1,opt,name=state,proto3,enum=smartcore.api.types.OnOffState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetOnOffStateResponse) Reset()         { *m = GetOnOffStateResponse{} }
func (m *GetOnOffStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetOnOffStateResponse) ProtoMessage()    {}
func (*GetOnOffStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee49b93115aaa9ee, []int{6}
}

func (m *GetOnOffStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOnOffStateResponse.Unmarshal(m, b)
}
func (m *GetOnOffStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOnOffStateResponse.Marshal(b, m, deterministic)
}
func (m *GetOnOffStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOnOffStateResponse.Merge(m, src)
}
func (m *GetOnOffStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetOnOffStateResponse.Size(m)
}
func (m *GetOnOffStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOnOffStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetOnOffStateResponse proto.InternalMessageInfo

func (m *GetOnOffStateResponse) GetState() types.OnOffState {
	if m != nil {
		return m.State
	}
	return types.OnOffState_UNKNOWN
}

// A request to monitor the state of a device
type OnOffPullRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OnOffPullRequest) Reset()         { *m = OnOffPullRequest{} }
func (m *OnOffPullRequest) String() string { return proto.CompactTextString(m) }
func (*OnOffPullRequest) ProtoMessage()    {}
func (*OnOffPullRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee49b93115aaa9ee, []int{7}
}

func (m *OnOffPullRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnOffPullRequest.Unmarshal(m, b)
}
func (m *OnOffPullRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnOffPullRequest.Marshal(b, m, deterministic)
}
func (m *OnOffPullRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnOffPullRequest.Merge(m, src)
}
func (m *OnOffPullRequest) XXX_Size() int {
	return xxx_messageInfo_OnOffPullRequest.Size(m)
}
func (m *OnOffPullRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OnOffPullRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OnOffPullRequest proto.InternalMessageInfo

func (m *OnOffPullRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Response to a Pull request for OnOffState changes
type OnOffPullResponse struct {
	// Changes that have occurred since the last event
	Changes              []*OnOffChange `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *OnOffPullResponse) Reset()         { *m = OnOffPullResponse{} }
func (m *OnOffPullResponse) String() string { return proto.CompactTextString(m) }
func (*OnOffPullResponse) ProtoMessage()    {}
func (*OnOffPullResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee49b93115aaa9ee, []int{8}
}

func (m *OnOffPullResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OnOffPullResponse.Unmarshal(m, b)
}
func (m *OnOffPullResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OnOffPullResponse.Marshal(b, m, deterministic)
}
func (m *OnOffPullResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OnOffPullResponse.Merge(m, src)
}
func (m *OnOffPullResponse) XXX_Size() int {
	return xxx_messageInfo_OnOffPullResponse.Size(m)
}
func (m *OnOffPullResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OnOffPullResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OnOffPullResponse proto.InternalMessageInfo

func (m *OnOffPullResponse) GetChanges() []*OnOffChange {
	if m != nil {
		return m.Changes
	}
	return nil
}

func init() {
	proto.RegisterType((*OnOffChange)(nil), "smartcore.api.device.traits.OnOffChange")
	proto.RegisterType((*OnRequest)(nil), "smartcore.api.device.traits.OnRequest")
	proto.RegisterType((*OnReply)(nil), "smartcore.api.device.traits.OnReply")
	proto.RegisterType((*OffRequest)(nil), "smartcore.api.device.traits.OffRequest")
	proto.RegisterType((*OffReply)(nil), "smartcore.api.device.traits.OffReply")
	proto.RegisterType((*GetOnOffStateRequest)(nil), "smartcore.api.device.traits.GetOnOffStateRequest")
	proto.RegisterType((*GetOnOffStateResponse)(nil), "smartcore.api.device.traits.GetOnOffStateResponse")
	proto.RegisterType((*OnOffPullRequest)(nil), "smartcore.api.device.traits.OnOffPullRequest")
	proto.RegisterType((*OnOffPullResponse)(nil), "smartcore.api.device.traits.OnOffPullResponse")
}

func init() { proto.RegisterFile("device/traits/on_off.proto", fileDescriptor_ee49b93115aaa9ee) }

var fileDescriptor_ee49b93115aaa9ee = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x94, 0xd1, 0x8a, 0xd3, 0x40,
	0x18, 0x85, 0x99, 0x76, 0xd7, 0xb5, 0x7f, 0x51, 0x74, 0x50, 0x28, 0xd9, 0x8b, 0x86, 0xa2, 0x6b,
	0x10, 0x76, 0xe2, 0x46, 0xbc, 0xf2, 0x6a, 0xab, 0xe0, 0x9d, 0x59, 0xb2, 0x2b, 0x82, 0x14, 0x96,
	0xd9, 0xec, 0x24, 0x0e, 0xa6, 0x33, 0x63, 0x66, 0x5a, 0xe8, 0x73, 0x88, 0xb7, 0x3e, 0x80, 0x8f,
	0xe2, 0x53, 0xc9, 0xcc, 0xb4, 0x25, 0x95, 0x25, 0xb1, 0x77, 0x25, 0xff, 0x77, 0xce, 0xf9, 0x27,
	0xa7, 0x13, 0x08, 0x6e, 0xd9, 0x92, 0xe7, 0x2c, 0x36, 0x35, 0xe5, 0x46, 0xc7, 0x52, 0x5c, 0xcb,
	0xa2, 0x20, 0xaa, 0x96, 0x46, 0xe2, 0x63, 0x3d, 0xa7, 0xb5, 0xc9, 0x65, 0xcd, 0x08, 0x55, 0x9c,
	0x78, 0x92, 0x78, 0x32, 0x18, 0x97, 0x52, 0x96, 0x15, 0x8b, 0x1d, 0x7a, 0xb3, 0x28, 0x62, 0xc3,
	0xe7, 0x4c, 0x1b, 0x3a, 0x57, 0x5e, 0x1d, 0x60, 0xb3, 0x52, 0x6c, 0xd7, 0x71, 0xf2, 0x13, 0xc1,
	0x30, 0x15, 0x69, 0x51, 0xbc, 0xfb, 0x4a, 0x45, 0xc9, 0x30, 0x86, 0x03, 0x41, 0xe7, 0x6c, 0x84,
	0x42, 0x14, 0x0d, 0x32, 0xf7, 0x1b, 0xbf, 0x85, 0x61, 0x5e, 0x33, 0x6a, 0xd8, 0xb5, 0x75, 0x1c,
	0xf5, 0x42, 0x14, 0x0d, 0x93, 0x80, 0xf8, 0x38, 0xb2, 0x89, 0x23, 0x57, 0x9b, 0xb8, 0x0c, 0x3c,
	0x6e, 0x1f, 0xe0, 0x37, 0x70, 0xa8, 0x0d, 0x35, 0x6c, 0xd4, 0x0f, 0x51, 0xf4, 0x30, 0x19, 0x93,
	0xdd, 0x23, 0xb8, 0x95, 0x88, 0xdb, 0xe0, 0xd2, 0x62, 0x99, 0xa7, 0x27, 0x63, 0x18, 0xa4, 0x22,
	0x63, 0xdf, 0x17, 0x4c, 0x9b, 0xbb, 0x96, 0x9a, 0x0c, 0xe0, 0xc8, 0x02, 0xaa, 0x5a, 0x4d, 0x42,
	0x80, 0xb4, 0x28, 0xda, 0x60, 0x80, 0xfb, 0x8e, 0xb0, 0xf4, 0x4b, 0x78, 0xf2, 0x81, 0x99, 0x46,
	0x62, 0x8b, 0xee, 0x23, 0x3c, 0xfd, 0x87, 0xd5, 0x4a, 0x0a, 0xdd, 0x38, 0x15, 0xda, 0xeb, 0x54,
	0x27, 0xf0, 0xc8, 0x3d, 0xbc, 0x58, 0x54, 0x55, 0x5b, 0xee, 0x67, 0x78, 0xdc, 0xe0, 0xd6, 0x99,
	0x53, 0x38, 0xca, 0x5d, 0x49, 0x7a, 0x84, 0xc2, 0x7e, 0x34, 0x4c, 0x22, 0xd2, 0xf2, 0x77, 0x20,
	0x8d, 0x56, 0xb3, 0x8d, 0x30, 0xf9, 0xd1, 0x87, 0x43, 0x37, 0xc0, 0x19, 0xf4, 0x52, 0x81, 0x4f,
	0x3a, 0x2c, 0xd6, 0x4b, 0x06, 0xcf, 0x3a, 0x39, 0x55, 0xad, 0xf0, 0x27, 0xe8, 0x5b, 0xeb, 0x17,
	0xed, 0xf0, 0xb6, 0xaa, 0xe0, 0x79, 0x37, 0x68, 0x6d, 0x97, 0xf0, 0x60, 0xa7, 0x05, 0x7c, 0xd6,
	0xaa, 0xbb, 0xab, 0xdd, 0x20, 0xd9, 0x47, 0xb2, 0x7e, 0xe1, 0x25, 0x1c, 0xd8, 0x02, 0xf0, 0x69,
	0xf7, 0x7b, 0x6e, 0x14, 0x1a, 0x90, 0xff, 0xc5, 0x7d, 0xcc, 0x2b, 0x34, 0xfd, 0x85, 0x60, 0x7c,
	0xcb, 0x96, 0x6d, 0xba, 0x29, 0x78, 0xa1, 0xbd, 0x6c, 0x17, 0xe8, 0xcb, 0x59, 0xc9, 0x0d, 0x59,
	0x52, 0x61, 0x38, 0xc9, 0x25, 0x59, 0x7c, 0x8b, 0xb7, 0xd2, 0x58, 0xe7, 0xa7, 0x54, 0xf1, 0xb8,
	0x94, 0xf1, 0xce, 0x87, 0xe4, 0x77, 0xef, 0xf8, 0x72, 0x6b, 0x7f, 0xae, 0x38, 0x79, 0xef, 0xed,
	0xaf, 0xdc, 0xf4, 0x4f, 0x63, 0x3a, 0x3b, 0x57, 0x7c, 0xe6, 0xa7, 0x33, 0x3f, 0xbd, 0xb9, 0xe7,
	0x2e, 0xf9, 0xeb, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf5, 0xbb, 0x07, 0x6b, 0x9c, 0x04, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OnOffClient is the client API for OnOff service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OnOffClient interface {
	// Turn on the device associated with this service or the name specified by the request.
	On(ctx context.Context, in *OnRequest, opts ...grpc.CallOption) (*OnReply, error)
	// Turn off the device associated with this service or the name specified by the request.
	Off(ctx context.Context, in *OffRequest, opts ...grpc.CallOption) (*OffReply, error)
	// get the current state of the device
	GetOnOffState(ctx context.Context, in *GetOnOffStateRequest, opts ...grpc.CallOption) (*GetOnOffStateResponse, error)
	// Get notified of changes to the OnOffState of a device
	Pull(ctx context.Context, in *OnOffPullRequest, opts ...grpc.CallOption) (OnOff_PullClient, error)
}

type onOffClient struct {
	cc *grpc.ClientConn
}

func NewOnOffClient(cc *grpc.ClientConn) OnOffClient {
	return &onOffClient{cc}
}

func (c *onOffClient) On(ctx context.Context, in *OnRequest, opts ...grpc.CallOption) (*OnReply, error) {
	out := new(OnReply)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.OnOff/On", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onOffClient) Off(ctx context.Context, in *OffRequest, opts ...grpc.CallOption) (*OffReply, error) {
	out := new(OffReply)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.OnOff/Off", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onOffClient) GetOnOffState(ctx context.Context, in *GetOnOffStateRequest, opts ...grpc.CallOption) (*GetOnOffStateResponse, error) {
	out := new(GetOnOffStateResponse)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.OnOff/GetOnOffState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *onOffClient) Pull(ctx context.Context, in *OnOffPullRequest, opts ...grpc.CallOption) (OnOff_PullClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OnOff_serviceDesc.Streams[0], "/smartcore.api.device.traits.OnOff/Pull", opts...)
	if err != nil {
		return nil, err
	}
	x := &onOffPullClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type OnOff_PullClient interface {
	Recv() (*OnOffPullResponse, error)
	grpc.ClientStream
}

type onOffPullClient struct {
	grpc.ClientStream
}

func (x *onOffPullClient) Recv() (*OnOffPullResponse, error) {
	m := new(OnOffPullResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// OnOffServer is the server API for OnOff service.
type OnOffServer interface {
	// Turn on the device associated with this service or the name specified by the request.
	On(context.Context, *OnRequest) (*OnReply, error)
	// Turn off the device associated with this service or the name specified by the request.
	Off(context.Context, *OffRequest) (*OffReply, error)
	// get the current state of the device
	GetOnOffState(context.Context, *GetOnOffStateRequest) (*GetOnOffStateResponse, error)
	// Get notified of changes to the OnOffState of a device
	Pull(*OnOffPullRequest, OnOff_PullServer) error
}

// UnimplementedOnOffServer can be embedded to have forward compatible implementations.
type UnimplementedOnOffServer struct {
}

func (*UnimplementedOnOffServer) On(ctx context.Context, req *OnRequest) (*OnReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method On not implemented")
}
func (*UnimplementedOnOffServer) Off(ctx context.Context, req *OffRequest) (*OffReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Off not implemented")
}
func (*UnimplementedOnOffServer) GetOnOffState(ctx context.Context, req *GetOnOffStateRequest) (*GetOnOffStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOnOffState not implemented")
}
func (*UnimplementedOnOffServer) Pull(req *OnOffPullRequest, srv OnOff_PullServer) error {
	return status.Errorf(codes.Unimplemented, "method Pull not implemented")
}

func RegisterOnOffServer(s *grpc.Server, srv OnOffServer) {
	s.RegisterService(&_OnOff_serviceDesc, srv)
}

func _OnOff_On_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnOffServer).On(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.OnOff/On",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnOffServer).On(ctx, req.(*OnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnOff_Off_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OffRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnOffServer).Off(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.OnOff/Off",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnOffServer).Off(ctx, req.(*OffRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnOff_GetOnOffState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOnOffStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OnOffServer).GetOnOffState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.OnOff/GetOnOffState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OnOffServer).GetOnOffState(ctx, req.(*GetOnOffStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OnOff_Pull_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(OnOffPullRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OnOffServer).Pull(m, &onOffPullServer{stream})
}

type OnOff_PullServer interface {
	Send(*OnOffPullResponse) error
	grpc.ServerStream
}

type onOffPullServer struct {
	grpc.ServerStream
}

func (x *onOffPullServer) Send(m *OnOffPullResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _OnOff_serviceDesc = grpc.ServiceDesc{
	ServiceName: "smartcore.api.device.traits.OnOff",
	HandlerType: (*OnOffServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "On",
			Handler:    _OnOff_On_Handler,
		},
		{
			MethodName: "Off",
			Handler:    _OnOff_Off_Handler,
		},
		{
			MethodName: "GetOnOffState",
			Handler:    _OnOff_GetOnOffState_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Pull",
			Handler:       _OnOff_Pull_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "device/traits/on_off.proto",
}
