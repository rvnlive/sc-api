// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device/traits/brightness.proto

package traits

import (
	context "context"
	fmt "fmt"
	types "git.vanti.co.uk/smartcore/sc-api/go/types"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Trait.attribute for brightness capabilities
type BrightnessAttributes struct {
	// control how the brightness can be controlled. The range of these attributes is fixed at 0-100 as a percentage
	BrightnessAttributes *types.Int32Attributes `protobuf:"bytes,1,opt,name=brightness_attributes,json=brightnessAttributes,proto3" json:"brightness_attributes,omitempty"`
	// A description of the supported presets, none means no presets
	Presets              []*BrightnessPreset `protobuf:"bytes,2,rep,name=presets,proto3" json:"presets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BrightnessAttributes) Reset()         { *m = BrightnessAttributes{} }
func (m *BrightnessAttributes) String() string { return proto.CompactTextString(m) }
func (*BrightnessAttributes) ProtoMessage()    {}
func (*BrightnessAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_88a650d378655e16, []int{0}
}

func (m *BrightnessAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrightnessAttributes.Unmarshal(m, b)
}
func (m *BrightnessAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrightnessAttributes.Marshal(b, m, deterministic)
}
func (m *BrightnessAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrightnessAttributes.Merge(m, src)
}
func (m *BrightnessAttributes) XXX_Size() int {
	return xxx_messageInfo_BrightnessAttributes.Size(m)
}
func (m *BrightnessAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_BrightnessAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_BrightnessAttributes proto.InternalMessageInfo

func (m *BrightnessAttributes) GetBrightnessAttributes() *types.Int32Attributes {
	if m != nil {
		return m.BrightnessAttributes
	}
	return nil
}

func (m *BrightnessAttributes) GetPresets() []*BrightnessPreset {
	if m != nil {
		return m.Presets
	}
	return nil
}

type Brightness struct {
	// A level that the device is set to.
	Level *types.Int32Var `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	// A preset that the device is using
	Preset               *BrightnessPreset `protobuf:"bytes,2,opt,name=preset,proto3" json:"preset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Brightness) Reset()         { *m = Brightness{} }
func (m *Brightness) String() string { return proto.CompactTextString(m) }
func (*Brightness) ProtoMessage()    {}
func (*Brightness) Descriptor() ([]byte, []int) {
	return fileDescriptor_88a650d378655e16, []int{1}
}

func (m *Brightness) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Brightness.Unmarshal(m, b)
}
func (m *Brightness) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Brightness.Marshal(b, m, deterministic)
}
func (m *Brightness) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Brightness.Merge(m, src)
}
func (m *Brightness) XXX_Size() int {
	return xxx_messageInfo_Brightness.Size(m)
}
func (m *Brightness) XXX_DiscardUnknown() {
	xxx_messageInfo_Brightness.DiscardUnknown(m)
}

var xxx_messageInfo_Brightness proto.InternalMessageInfo

func (m *Brightness) GetLevel() *types.Int32Var {
	if m != nil {
		return m.Level
	}
	return nil
}

func (m *Brightness) GetPreset() *BrightnessPreset {
	if m != nil {
		return m.Preset
	}
	return nil
}

type BrightnessPreset struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrightnessPreset) Reset()         { *m = BrightnessPreset{} }
func (m *BrightnessPreset) String() string { return proto.CompactTextString(m) }
func (*BrightnessPreset) ProtoMessage()    {}
func (*BrightnessPreset) Descriptor() ([]byte, []int) {
	return fileDescriptor_88a650d378655e16, []int{2}
}

func (m *BrightnessPreset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrightnessPreset.Unmarshal(m, b)
}
func (m *BrightnessPreset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrightnessPreset.Marshal(b, m, deterministic)
}
func (m *BrightnessPreset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrightnessPreset.Merge(m, src)
}
func (m *BrightnessPreset) XXX_Size() int {
	return xxx_messageInfo_BrightnessPreset.Size(m)
}
func (m *BrightnessPreset) XXX_DiscardUnknown() {
	xxx_messageInfo_BrightnessPreset.DiscardUnknown(m)
}

var xxx_messageInfo_BrightnessPreset proto.InternalMessageInfo

func (m *BrightnessPreset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BrightnessPreset) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// A request to update the value of a brightness
type UpdateBrightnessRequest struct {
	// The name of the device to update
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The new value for the brightness. Supply ramp to transition
	Brightness *Brightness `protobuf:"bytes,2,opt,name=brightness,proto3" json:"brightness,omitempty"`
	// if true, then the values in the brightness represent deltas from the current value and not absolute values
	Delta                bool     `protobuf:"varint,3,opt,name=delta,proto3" json:"delta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBrightnessRequest) Reset()         { *m = UpdateBrightnessRequest{} }
func (m *UpdateBrightnessRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBrightnessRequest) ProtoMessage()    {}
func (*UpdateBrightnessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_88a650d378655e16, []int{3}
}

func (m *UpdateBrightnessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBrightnessRequest.Unmarshal(m, b)
}
func (m *UpdateBrightnessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBrightnessRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBrightnessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBrightnessRequest.Merge(m, src)
}
func (m *UpdateBrightnessRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBrightnessRequest.Size(m)
}
func (m *UpdateBrightnessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBrightnessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBrightnessRequest proto.InternalMessageInfo

func (m *UpdateBrightnessRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateBrightnessRequest) GetBrightness() *Brightness {
	if m != nil {
		return m.Brightness
	}
	return nil
}

func (m *UpdateBrightnessRequest) GetDelta() bool {
	if m != nil {
		return m.Delta
	}
	return false
}

// A request to get the current value of a brightness
type GetBrightnessRequest struct {
	// The name of the device to get the value for
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBrightnessRequest) Reset()         { *m = GetBrightnessRequest{} }
func (m *GetBrightnessRequest) String() string { return proto.CompactTextString(m) }
func (*GetBrightnessRequest) ProtoMessage()    {}
func (*GetBrightnessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_88a650d378655e16, []int{4}
}

func (m *GetBrightnessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBrightnessRequest.Unmarshal(m, b)
}
func (m *GetBrightnessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBrightnessRequest.Marshal(b, m, deterministic)
}
func (m *GetBrightnessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBrightnessRequest.Merge(m, src)
}
func (m *GetBrightnessRequest) XXX_Size() int {
	return xxx_messageInfo_GetBrightnessRequest.Size(m)
}
func (m *GetBrightnessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBrightnessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBrightnessRequest proto.InternalMessageInfo

func (m *GetBrightnessRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request to begin a subscription for brightness values
type PullBrightnessRequest struct {
	// The name of the device we want events from
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Indicate whether we want to be notified of values while ramping or not. The device may ignore this depending on
	// capabilities
	ExcludeRamping       bool     `protobuf:"varint,2,opt,name=exclude_ramping,json=excludeRamping,proto3" json:"exclude_ramping,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullBrightnessRequest) Reset()         { *m = PullBrightnessRequest{} }
func (m *PullBrightnessRequest) String() string { return proto.CompactTextString(m) }
func (*PullBrightnessRequest) ProtoMessage()    {}
func (*PullBrightnessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_88a650d378655e16, []int{5}
}

func (m *PullBrightnessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullBrightnessRequest.Unmarshal(m, b)
}
func (m *PullBrightnessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullBrightnessRequest.Marshal(b, m, deterministic)
}
func (m *PullBrightnessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullBrightnessRequest.Merge(m, src)
}
func (m *PullBrightnessRequest) XXX_Size() int {
	return xxx_messageInfo_PullBrightnessRequest.Size(m)
}
func (m *PullBrightnessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullBrightnessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullBrightnessRequest proto.InternalMessageInfo

func (m *PullBrightnessRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PullBrightnessRequest) GetExcludeRamping() bool {
	if m != nil {
		return m.ExcludeRamping
	}
	return false
}

// A response as part of the stream of changes to the brightness value
type PullBrightnessResponse struct {
	// The list of changes
	Changes              []*BrightnessChange `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PullBrightnessResponse) Reset()         { *m = PullBrightnessResponse{} }
func (m *PullBrightnessResponse) String() string { return proto.CompactTextString(m) }
func (*PullBrightnessResponse) ProtoMessage()    {}
func (*PullBrightnessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_88a650d378655e16, []int{6}
}

func (m *PullBrightnessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullBrightnessResponse.Unmarshal(m, b)
}
func (m *PullBrightnessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullBrightnessResponse.Marshal(b, m, deterministic)
}
func (m *PullBrightnessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullBrightnessResponse.Merge(m, src)
}
func (m *PullBrightnessResponse) XXX_Size() int {
	return xxx_messageInfo_PullBrightnessResponse.Size(m)
}
func (m *PullBrightnessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PullBrightnessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PullBrightnessResponse proto.InternalMessageInfo

func (m *PullBrightnessResponse) GetChanges() []*BrightnessChange {
	if m != nil {
		return m.Changes
	}
	return nil
}

// A change to a single devices brightness value
type BrightnessChange struct {
	// name for the device that issued the change
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// when the change occurred
	CreateTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The new value for the brightness
	Brightness           *Brightness `protobuf:"bytes,3,opt,name=brightness,proto3" json:"brightness,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BrightnessChange) Reset()         { *m = BrightnessChange{} }
func (m *BrightnessChange) String() string { return proto.CompactTextString(m) }
func (*BrightnessChange) ProtoMessage()    {}
func (*BrightnessChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_88a650d378655e16, []int{7}
}

func (m *BrightnessChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrightnessChange.Unmarshal(m, b)
}
func (m *BrightnessChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrightnessChange.Marshal(b, m, deterministic)
}
func (m *BrightnessChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrightnessChange.Merge(m, src)
}
func (m *BrightnessChange) XXX_Size() int {
	return xxx_messageInfo_BrightnessChange.Size(m)
}
func (m *BrightnessChange) XXX_DiscardUnknown() {
	xxx_messageInfo_BrightnessChange.DiscardUnknown(m)
}

var xxx_messageInfo_BrightnessChange proto.InternalMessageInfo

func (m *BrightnessChange) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BrightnessChange) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *BrightnessChange) GetBrightness() *Brightness {
	if m != nil {
		return m.Brightness
	}
	return nil
}

func init() {
	proto.RegisterType((*BrightnessAttributes)(nil), "smartcore.api.device.traits.BrightnessAttributes")
	proto.RegisterType((*Brightness)(nil), "smartcore.api.device.traits.Brightness")
	proto.RegisterType((*BrightnessPreset)(nil), "smartcore.api.device.traits.BrightnessPreset")
	proto.RegisterType((*UpdateBrightnessRequest)(nil), "smartcore.api.device.traits.UpdateBrightnessRequest")
	proto.RegisterType((*GetBrightnessRequest)(nil), "smartcore.api.device.traits.GetBrightnessRequest")
	proto.RegisterType((*PullBrightnessRequest)(nil), "smartcore.api.device.traits.PullBrightnessRequest")
	proto.RegisterType((*PullBrightnessResponse)(nil), "smartcore.api.device.traits.PullBrightnessResponse")
	proto.RegisterType((*BrightnessChange)(nil), "smartcore.api.device.traits.BrightnessChange")
}

func init() { proto.RegisterFile("device/traits/brightness.proto", fileDescriptor_88a650d378655e16) }

var fileDescriptor_88a650d378655e16 = []byte{
	// 582 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xdf, 0x6a, 0x13, 0x4f,
	0x14, 0x66, 0xd3, 0x5f, 0xff, 0x9d, 0xd2, 0x3f, 0x0c, 0xe9, 0xcf, 0x90, 0xa2, 0x2d, 0x8b, 0xd0,
	0x22, 0x74, 0xd6, 0x26, 0xde, 0xe9, 0x4d, 0xa2, 0x12, 0xbc, 0x0b, 0x63, 0x2c, 0x28, 0x81, 0x30,
	0xbb, 0x39, 0x6e, 0x87, 0xee, 0x9f, 0xe9, 0xce, 0x6c, 0x50, 0x7c, 0x01, 0x2f, 0x7c, 0x0b, 0xef,
	0xc4, 0x27, 0xf0, 0x11, 0x7c, 0x16, 0x1f, 0x42, 0x32, 0x93, 0x64, 0x93, 0x90, 0x86, 0xc4, 0xbb,
	0xec, 0xf9, 0xce, 0xf7, 0x9d, 0x6f, 0x66, 0xbe, 0x13, 0x78, 0xd4, 0xc7, 0x81, 0x08, 0xd0, 0xd3,
	0x19, 0x17, 0x5a, 0x79, 0x7e, 0x26, 0xc2, 0x1b, 0x9d, 0xa0, 0x52, 0x54, 0x66, 0xa9, 0x4e, 0xc9,
	0x89, 0x8a, 0x79, 0xa6, 0x83, 0x34, 0x43, 0xca, 0xa5, 0xa0, 0xb6, 0x9b, 0xda, 0xee, 0xea, 0x69,
	0x98, 0xa6, 0x61, 0x84, 0x9e, 0x69, 0xf5, 0xf3, 0x8f, 0x9e, 0x16, 0x31, 0x2a, 0xcd, 0x63, 0x69,
	0xd9, 0x55, 0xa2, 0x3f, 0x4b, 0x54, 0x5e, 0x92, 0xc7, 0x3e, 0x66, 0xb6, 0xe6, 0xfe, 0x72, 0xa0,
	0xdc, 0x9c, 0x8c, 0x69, 0x68, 0x9d, 0x09, 0x3f, 0xd7, 0xa8, 0xc8, 0x7b, 0x38, 0x2e, 0xc6, 0xf7,
	0xf8, 0x04, 0xa8, 0x38, 0x67, 0xce, 0xc5, 0x5e, 0xed, 0x31, 0x9d, 0xb5, 0x62, 0xa4, 0xe9, 0x9b,
	0x44, 0xd7, 0x6b, 0x85, 0x08, 0x2b, 0xfb, 0x8b, 0xa4, 0x5b, 0xb0, 0x2d, 0x33, 0x54, 0xa8, 0x55,
	0xa5, 0x74, 0xb6, 0x71, 0xb1, 0x57, 0xbb, 0xa4, 0x4b, 0xce, 0x45, 0x0b, 0x7b, 0x6d, 0xc3, 0x62,
	0x63, 0xb6, 0xfb, 0xd5, 0x01, 0x28, 0x50, 0x52, 0x87, 0xcd, 0x08, 0x07, 0x18, 0x8d, 0x2c, 0x3e,
	0xbc, 0xdf, 0xe2, 0x35, 0xcf, 0x98, 0xed, 0x25, 0xaf, 0x61, 0xcb, 0xca, 0x55, 0x4a, 0x86, 0xb5,
	0xa6, 0x97, 0x11, 0xd9, 0x7d, 0x01, 0x47, 0xf3, 0x18, 0x21, 0xf0, 0x5f, 0xc2, 0x63, 0x34, 0x76,
	0x76, 0x99, 0xf9, 0x4d, 0xca, 0xb0, 0xa9, 0x85, 0x8e, 0xd0, 0x4c, 0xdb, 0x65, 0xf6, 0xc3, 0xfd,
	0xe6, 0xc0, 0x83, 0x77, 0xb2, 0xcf, 0x35, 0x16, 0x22, 0x0c, 0xef, 0x72, 0x54, 0x8b, 0x55, 0x5a,
	0x00, 0xc5, 0xcd, 0x8e, 0x8c, 0x9f, 0xaf, 0x68, 0x9c, 0x4d, 0x51, 0x87, 0x76, 0xfa, 0x18, 0x69,
	0x5e, 0xd9, 0x38, 0x73, 0x2e, 0x76, 0x98, 0xfd, 0x70, 0x9f, 0x40, 0xb9, 0x85, 0x7a, 0x25, 0x2b,
	0x6e, 0x07, 0x8e, 0xdb, 0x79, 0x14, 0xad, 0xe6, 0xfb, 0x1c, 0x0e, 0xf1, 0x53, 0x10, 0xe5, 0x7d,
	0xec, 0x65, 0x3c, 0x96, 0x22, 0x09, 0x8d, 0xf9, 0x1d, 0x76, 0x30, 0x2a, 0x33, 0x5b, 0x75, 0x39,
	0xfc, 0x3f, 0xaf, 0xaa, 0x64, 0x9a, 0xa8, 0xe1, 0xd1, 0xb7, 0x83, 0x1b, 0x9e, 0x84, 0x26, 0x89,
	0xeb, 0x84, 0xe7, 0xa5, 0x61, 0xb1, 0x31, 0xdb, 0xfd, 0xe9, 0x4c, 0x3f, 0x99, 0x45, 0x17, 0x9a,
	0x7e, 0x0e, 0x7b, 0x41, 0x86, 0x5c, 0x63, 0x6f, 0xb8, 0x50, 0xa3, 0xdb, 0xae, 0x52, 0xbb, 0x6d,
	0x74, 0xbc, 0x6d, 0xb4, 0x33, 0xde, 0x36, 0x06, 0xb6, 0x7d, 0x58, 0x98, 0x7b, 0xa9, 0x8d, 0x7f,
	0x7e, 0xa9, 0xda, 0x9f, 0x12, 0xec, 0x4f, 0x2d, 0xaa, 0x14, 0xe4, 0x0e, 0x8e, 0x6c, 0x66, 0xd8,
	0xd0, 0xfa, 0x35, 0x8f, 0x72, 0x24, 0xcf, 0x96, 0x4a, 0xdf, 0x13, 0xb1, 0xea, 0xaa, 0x86, 0xc8,
	0x2d, 0xec, 0xcf, 0x04, 0x83, 0x5c, 0x2d, 0x65, 0x2e, 0x0a, 0xd1, 0xea, 0xc3, 0xbe, 0xc0, 0xc1,
	0x6c, 0x06, 0x48, 0x6d, 0x29, 0x75, 0x61, 0x0c, 0xab, 0xf5, 0xb5, 0x38, 0x36, 0x64, 0x4f, 0x9d,
	0xe6, 0x77, 0x07, 0x4e, 0xfb, 0x38, 0x58, 0x46, 0x6e, 0x1e, 0x4e, 0x6f, 0x7c, 0xaa, 0xd3, 0xb6,
	0xf3, 0xe1, 0x2a, 0x14, 0x9a, 0x0e, 0x78, 0xa2, 0x05, 0x0d, 0x52, 0x9a, 0xdf, 0x7a, 0x13, 0xbe,
	0xa7, 0x82, 0x4b, 0x2e, 0x85, 0x17, 0xa6, 0xde, 0xcc, 0x9f, 0xfc, 0x8f, 0xd2, 0xc9, 0xdb, 0xc9,
	0x8c, 0x86, 0x14, 0xf4, 0x95, 0x9d, 0xd1, 0x31, 0xe8, 0xef, 0x29, 0xb4, 0xdb, 0x90, 0xa2, 0x6b,
	0xd1, 0xae, 0x45, 0xfd, 0x2d, 0x93, 0xbe, 0xfa, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf7, 0xe0,
	0x81, 0x41, 0x38, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BrightnessApiClient is the client API for BrightnessApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BrightnessApiClient interface {
	// request that the range value be changes
	UpdateRangeValue(ctx context.Context, in *UpdateBrightnessRequest, opts ...grpc.CallOption) (*Brightness, error)
	// get the current value of the range
	GetBrightness(ctx context.Context, in *GetBrightnessRequest, opts ...grpc.CallOption) (*Brightness, error)
	// request updates to changes in the range value
	PullBrightness(ctx context.Context, in *PullBrightnessRequest, opts ...grpc.CallOption) (BrightnessApi_PullBrightnessClient, error)
}

type brightnessApiClient struct {
	cc *grpc.ClientConn
}

func NewBrightnessApiClient(cc *grpc.ClientConn) BrightnessApiClient {
	return &brightnessApiClient{cc}
}

func (c *brightnessApiClient) UpdateRangeValue(ctx context.Context, in *UpdateBrightnessRequest, opts ...grpc.CallOption) (*Brightness, error) {
	out := new(Brightness)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.BrightnessApi/UpdateRangeValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brightnessApiClient) GetBrightness(ctx context.Context, in *GetBrightnessRequest, opts ...grpc.CallOption) (*Brightness, error) {
	out := new(Brightness)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.BrightnessApi/GetBrightness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brightnessApiClient) PullBrightness(ctx context.Context, in *PullBrightnessRequest, opts ...grpc.CallOption) (BrightnessApi_PullBrightnessClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BrightnessApi_serviceDesc.Streams[0], "/smartcore.api.device.traits.BrightnessApi/PullBrightness", opts...)
	if err != nil {
		return nil, err
	}
	x := &brightnessApiPullBrightnessClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BrightnessApi_PullBrightnessClient interface {
	Recv() (*PullBrightnessResponse, error)
	grpc.ClientStream
}

type brightnessApiPullBrightnessClient struct {
	grpc.ClientStream
}

func (x *brightnessApiPullBrightnessClient) Recv() (*PullBrightnessResponse, error) {
	m := new(PullBrightnessResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BrightnessApiServer is the server API for BrightnessApi service.
type BrightnessApiServer interface {
	// request that the range value be changes
	UpdateRangeValue(context.Context, *UpdateBrightnessRequest) (*Brightness, error)
	// get the current value of the range
	GetBrightness(context.Context, *GetBrightnessRequest) (*Brightness, error)
	// request updates to changes in the range value
	PullBrightness(*PullBrightnessRequest, BrightnessApi_PullBrightnessServer) error
}

// UnimplementedBrightnessApiServer can be embedded to have forward compatible implementations.
type UnimplementedBrightnessApiServer struct {
}

func (*UnimplementedBrightnessApiServer) UpdateRangeValue(ctx context.Context, req *UpdateBrightnessRequest) (*Brightness, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRangeValue not implemented")
}
func (*UnimplementedBrightnessApiServer) GetBrightness(ctx context.Context, req *GetBrightnessRequest) (*Brightness, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBrightness not implemented")
}
func (*UnimplementedBrightnessApiServer) PullBrightness(req *PullBrightnessRequest, srv BrightnessApi_PullBrightnessServer) error {
	return status.Errorf(codes.Unimplemented, "method PullBrightness not implemented")
}

func RegisterBrightnessApiServer(s *grpc.Server, srv BrightnessApiServer) {
	s.RegisterService(&_BrightnessApi_serviceDesc, srv)
}

func _BrightnessApi_UpdateRangeValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBrightnessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrightnessApiServer).UpdateRangeValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.BrightnessApi/UpdateRangeValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrightnessApiServer).UpdateRangeValue(ctx, req.(*UpdateBrightnessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrightnessApi_GetBrightness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBrightnessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrightnessApiServer).GetBrightness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.BrightnessApi/GetBrightness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrightnessApiServer).GetBrightness(ctx, req.(*GetBrightnessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrightnessApi_PullBrightness_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PullBrightnessRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BrightnessApiServer).PullBrightness(m, &brightnessApiPullBrightnessServer{stream})
}

type BrightnessApi_PullBrightnessServer interface {
	Send(*PullBrightnessResponse) error
	grpc.ServerStream
}

type brightnessApiPullBrightnessServer struct {
	grpc.ServerStream
}

func (x *brightnessApiPullBrightnessServer) Send(m *PullBrightnessResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _BrightnessApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "smartcore.api.device.traits.BrightnessApi",
	HandlerType: (*BrightnessApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateRangeValue",
			Handler:    _BrightnessApi_UpdateRangeValue_Handler,
		},
		{
			MethodName: "GetBrightness",
			Handler:    _BrightnessApi_GetBrightness_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PullBrightness",
			Handler:       _BrightnessApi_PullBrightness_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "device/traits/brightness.proto",
}
