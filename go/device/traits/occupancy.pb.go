// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device/traits/occupancy.proto

package traits

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Possible states for occupancy
type OccupancyState int32

const (
	// There are no signals to suggest either an occupied or unoccupied space
	OccupancyState_NO_SIGNALS OccupancyState = 0
	// The space is occupied
	OccupancyState_OCCUPIED OccupancyState = 1
	// The space is unoccupied
	OccupancyState_UNOCCUPIED OccupancyState = 2
	// The space is likely occupied but some signals suggest that no activity is occurring (i.e. people are asleep or not
	// moving for other reasons)
	OccupancyState_IDLE OccupancyState = 3
)

var OccupancyState_name = map[int32]string{
	0: "NO_SIGNALS",
	1: "OCCUPIED",
	2: "UNOCCUPIED",
	3: "IDLE",
}

var OccupancyState_value = map[string]int32{
	"NO_SIGNALS": 0,
	"OCCUPIED":   1,
	"UNOCCUPIED": 2,
	"IDLE":       3,
}

func (x OccupancyState) String() string {
	return proto.EnumName(OccupancyState_name, int32(x))
}

func (OccupancyState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{0}
}

// Trait.attribute for the configuration of the device
type OccupancyAttributes struct {
	// how many people can the occupancy service report. 0 means it won't report people counts. Note: this is _not_ the
	// total capacity for the space, it's the capacity of the sensor
	MaxPeople int32 `protobuf:"varint,1,opt,name=max_people,json=maxPeople,proto3" json:"max_people,omitempty"`
	// does the device support reporting a manual occupancy override, typically used for testing
	SupportsOverride     bool     `protobuf:"varint,2,opt,name=supports_override,json=supportsOverride,proto3" json:"supports_override,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OccupancyAttributes) Reset()         { *m = OccupancyAttributes{} }
func (m *OccupancyAttributes) String() string { return proto.CompactTextString(m) }
func (*OccupancyAttributes) ProtoMessage()    {}
func (*OccupancyAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{0}
}

func (m *OccupancyAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OccupancyAttributes.Unmarshal(m, b)
}
func (m *OccupancyAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OccupancyAttributes.Marshal(b, m, deterministic)
}
func (m *OccupancyAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OccupancyAttributes.Merge(m, src)
}
func (m *OccupancyAttributes) XXX_Size() int {
	return xxx_messageInfo_OccupancyAttributes.Size(m)
}
func (m *OccupancyAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_OccupancyAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_OccupancyAttributes proto.InternalMessageInfo

func (m *OccupancyAttributes) GetMaxPeople() int32 {
	if m != nil {
		return m.MaxPeople
	}
	return 0
}

func (m *OccupancyAttributes) GetSupportsOverride() bool {
	if m != nil {
		return m.SupportsOverride
	}
	return false
}

// The occupancy state the device is reporting and updating
type Occupancy struct {
	// The current occupancy state
	State OccupancyState `protobuf:"varint,1,opt,name=state,proto3,enum=smartcore.api.device.traits.OccupancyState" json:"state,omitempty"`
	// The total number of people the occupancy sensor has detected. Do NOT use this value as an indication of occupancy
	// state, a value of 0 could be reported for a space that is occupied if the device either doesn't support people
	// counts or there is some other undefined issue with the counting part of the sensor suite.
	PeopleCount int32 `protobuf:"varint,2,opt,name=people_count,json=peopleCount,proto3" json:"people_count,omitempty"`
	// When the occupancy state last changed. Does not update when people_count changes unlike the timestamp in
	// OccupancyChange events
	StateChangeTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=state_change_time,json=stateChangeTime,proto3" json:"state_change_time,omitempty"`
	// Optional. List of human readable strings explaining why the device thinks the space is in the current state. For
	// example could say OCCUPIED:["Detected people in space"] or IDLE:["No motion detected for 10 minutes"]. Typically
	// used for debugging or troubleshooting purposes.
	Reasons []string `protobuf:"bytes,4,rep,name=reasons,proto3" json:"reasons,omitempty"`
	// Optional. How confident is the sensor that the current occupancy state is accurate. A value of 0 means that the
	// confidence is unknown
	Confidence           float64  `protobuf:"fixed64,5,opt,name=confidence,proto3" json:"confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Occupancy) Reset()         { *m = Occupancy{} }
func (m *Occupancy) String() string { return proto.CompactTextString(m) }
func (*Occupancy) ProtoMessage()    {}
func (*Occupancy) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{1}
}

func (m *Occupancy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Occupancy.Unmarshal(m, b)
}
func (m *Occupancy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Occupancy.Marshal(b, m, deterministic)
}
func (m *Occupancy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Occupancy.Merge(m, src)
}
func (m *Occupancy) XXX_Size() int {
	return xxx_messageInfo_Occupancy.Size(m)
}
func (m *Occupancy) XXX_DiscardUnknown() {
	xxx_messageInfo_Occupancy.DiscardUnknown(m)
}

var xxx_messageInfo_Occupancy proto.InternalMessageInfo

func (m *Occupancy) GetState() OccupancyState {
	if m != nil {
		return m.State
	}
	return OccupancyState_NO_SIGNALS
}

func (m *Occupancy) GetPeopleCount() int32 {
	if m != nil {
		return m.PeopleCount
	}
	return 0
}

func (m *Occupancy) GetStateChangeTime() *timestamp.Timestamp {
	if m != nil {
		return m.StateChangeTime
	}
	return nil
}

func (m *Occupancy) GetReasons() []string {
	if m != nil {
		return m.Reasons
	}
	return nil
}

func (m *Occupancy) GetConfidence() float64 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

// Describes a manual override signal for an occupancy device
type OccupancyOverride struct {
	// The unique name of the override so it can be updated or removed. Present during read, required for update, one will
	// be created if absent for create
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Manually override the state of the occupancy
	State OccupancyState `protobuf:"varint,2,opt,name=state,proto3,enum=smartcore.api.device.traits.OccupancyState" json:"state,omitempty"`
	// Manually override the number of people reported
	PeopleCount int32 `protobuf:"varint,3,opt,name=people_count,json=peopleCount,proto3" json:"people_count,omitempty"`
	// Automatically begin the manual override at this time. If absent then the override begins immediately.
	BeginTime *timestamp.Timestamp `protobuf:"bytes,4,opt,name=begin_time,json=beginTime,proto3" json:"begin_time,omitempty"`
	// Automatically expire the manual override after this time. If absent then the override does not expire and should be
	// removed manually.
	ExpireTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	// Optional human readable reason to help diagnose this manual override. If the manual override is active then this
	// should be included in the Occupancy reasons list.
	Reason               string   `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OccupancyOverride) Reset()         { *m = OccupancyOverride{} }
func (m *OccupancyOverride) String() string { return proto.CompactTextString(m) }
func (*OccupancyOverride) ProtoMessage()    {}
func (*OccupancyOverride) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{2}
}

func (m *OccupancyOverride) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OccupancyOverride.Unmarshal(m, b)
}
func (m *OccupancyOverride) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OccupancyOverride.Marshal(b, m, deterministic)
}
func (m *OccupancyOverride) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OccupancyOverride.Merge(m, src)
}
func (m *OccupancyOverride) XXX_Size() int {
	return xxx_messageInfo_OccupancyOverride.Size(m)
}
func (m *OccupancyOverride) XXX_DiscardUnknown() {
	xxx_messageInfo_OccupancyOverride.DiscardUnknown(m)
}

var xxx_messageInfo_OccupancyOverride proto.InternalMessageInfo

func (m *OccupancyOverride) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OccupancyOverride) GetState() OccupancyState {
	if m != nil {
		return m.State
	}
	return OccupancyState_NO_SIGNALS
}

func (m *OccupancyOverride) GetPeopleCount() int32 {
	if m != nil {
		return m.PeopleCount
	}
	return 0
}

func (m *OccupancyOverride) GetBeginTime() *timestamp.Timestamp {
	if m != nil {
		return m.BeginTime
	}
	return nil
}

func (m *OccupancyOverride) GetExpireTime() *timestamp.Timestamp {
	if m != nil {
		return m.ExpireTime
	}
	return nil
}

func (m *OccupancyOverride) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

// request to fetch the current state of the device
type GetOccupancyRequest struct {
	// the name for the device to get the occupancy state for
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOccupancyRequest) Reset()         { *m = GetOccupancyRequest{} }
func (m *GetOccupancyRequest) String() string { return proto.CompactTextString(m) }
func (*GetOccupancyRequest) ProtoMessage()    {}
func (*GetOccupancyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{3}
}

func (m *GetOccupancyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOccupancyRequest.Unmarshal(m, b)
}
func (m *GetOccupancyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOccupancyRequest.Marshal(b, m, deterministic)
}
func (m *GetOccupancyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOccupancyRequest.Merge(m, src)
}
func (m *GetOccupancyRequest) XXX_Size() int {
	return xxx_messageInfo_GetOccupancyRequest.Size(m)
}
func (m *GetOccupancyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOccupancyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOccupancyRequest proto.InternalMessageInfo

func (m *GetOccupancyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// request to be notified of changes to the state of the device
type PullOccupancyRequest struct {
	// the name for the device to subscribe to
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullOccupancyRequest) Reset()         { *m = PullOccupancyRequest{} }
func (m *PullOccupancyRequest) String() string { return proto.CompactTextString(m) }
func (*PullOccupancyRequest) ProtoMessage()    {}
func (*PullOccupancyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{4}
}

func (m *PullOccupancyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullOccupancyRequest.Unmarshal(m, b)
}
func (m *PullOccupancyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullOccupancyRequest.Marshal(b, m, deterministic)
}
func (m *PullOccupancyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullOccupancyRequest.Merge(m, src)
}
func (m *PullOccupancyRequest) XXX_Size() int {
	return xxx_messageInfo_PullOccupancyRequest.Size(m)
}
func (m *PullOccupancyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullOccupancyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullOccupancyRequest proto.InternalMessageInfo

func (m *PullOccupancyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// response containing occupancy state changes
type PullOccupancyResponse struct {
	// the list of changes that have occurred since the last event
	Changes              []*OccupancyChange `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PullOccupancyResponse) Reset()         { *m = PullOccupancyResponse{} }
func (m *PullOccupancyResponse) String() string { return proto.CompactTextString(m) }
func (*PullOccupancyResponse) ProtoMessage()    {}
func (*PullOccupancyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{5}
}

func (m *PullOccupancyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullOccupancyResponse.Unmarshal(m, b)
}
func (m *PullOccupancyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullOccupancyResponse.Marshal(b, m, deterministic)
}
func (m *PullOccupancyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullOccupancyResponse.Merge(m, src)
}
func (m *PullOccupancyResponse) XXX_Size() int {
	return xxx_messageInfo_PullOccupancyResponse.Size(m)
}
func (m *PullOccupancyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PullOccupancyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PullOccupancyResponse proto.InternalMessageInfo

func (m *PullOccupancyResponse) GetChanges() []*OccupancyChange {
	if m != nil {
		return m.Changes
	}
	return nil
}

// A change to the occupancy state of the device, including people count
type OccupancyChange struct {
	// name for the device that issued the change
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// when the change occurred
	CreateTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// the new state for the device
	Occupancy            *Occupancy `protobuf:"bytes,3,opt,name=occupancy,proto3" json:"occupancy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *OccupancyChange) Reset()         { *m = OccupancyChange{} }
func (m *OccupancyChange) String() string { return proto.CompactTextString(m) }
func (*OccupancyChange) ProtoMessage()    {}
func (*OccupancyChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{6}
}

func (m *OccupancyChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OccupancyChange.Unmarshal(m, b)
}
func (m *OccupancyChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OccupancyChange.Marshal(b, m, deterministic)
}
func (m *OccupancyChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OccupancyChange.Merge(m, src)
}
func (m *OccupancyChange) XXX_Size() int {
	return xxx_messageInfo_OccupancyChange.Size(m)
}
func (m *OccupancyChange) XXX_DiscardUnknown() {
	xxx_messageInfo_OccupancyChange.DiscardUnknown(m)
}

var xxx_messageInfo_OccupancyChange proto.InternalMessageInfo

func (m *OccupancyChange) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *OccupancyChange) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *OccupancyChange) GetOccupancy() *Occupancy {
	if m != nil {
		return m.Occupancy
	}
	return nil
}

type CreateOccupancyOverrideRequest struct {
	// the device name
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Override             *OccupancyOverride `protobuf:"bytes,2,opt,name=override,proto3" json:"override,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CreateOccupancyOverrideRequest) Reset()         { *m = CreateOccupancyOverrideRequest{} }
func (m *CreateOccupancyOverrideRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOccupancyOverrideRequest) ProtoMessage()    {}
func (*CreateOccupancyOverrideRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{7}
}

func (m *CreateOccupancyOverrideRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOccupancyOverrideRequest.Unmarshal(m, b)
}
func (m *CreateOccupancyOverrideRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOccupancyOverrideRequest.Marshal(b, m, deterministic)
}
func (m *CreateOccupancyOverrideRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOccupancyOverrideRequest.Merge(m, src)
}
func (m *CreateOccupancyOverrideRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOccupancyOverrideRequest.Size(m)
}
func (m *CreateOccupancyOverrideRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOccupancyOverrideRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOccupancyOverrideRequest proto.InternalMessageInfo

func (m *CreateOccupancyOverrideRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateOccupancyOverrideRequest) GetOverride() *OccupancyOverride {
	if m != nil {
		return m.Override
	}
	return nil
}

type UpdateOccupancyOverrideRequest struct {
	// the device name
	Name                 string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Override             *OccupancyOverride    `protobuf:"bytes,2,opt,name=override,proto3" json:"override,omitempty"`
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateOccupancyOverrideRequest) Reset()         { *m = UpdateOccupancyOverrideRequest{} }
func (m *UpdateOccupancyOverrideRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOccupancyOverrideRequest) ProtoMessage()    {}
func (*UpdateOccupancyOverrideRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{8}
}

func (m *UpdateOccupancyOverrideRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOccupancyOverrideRequest.Unmarshal(m, b)
}
func (m *UpdateOccupancyOverrideRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOccupancyOverrideRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOccupancyOverrideRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOccupancyOverrideRequest.Merge(m, src)
}
func (m *UpdateOccupancyOverrideRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOccupancyOverrideRequest.Size(m)
}
func (m *UpdateOccupancyOverrideRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOccupancyOverrideRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOccupancyOverrideRequest proto.InternalMessageInfo

func (m *UpdateOccupancyOverrideRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateOccupancyOverrideRequest) GetOverride() *OccupancyOverride {
	if m != nil {
		return m.Override
	}
	return nil
}

func (m *UpdateOccupancyOverrideRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

type DeleteOccupancyOverrideRequest struct {
	// the device name
	DeviceName           string   `protobuf:"bytes,1,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	OverrideName         string   `protobuf:"bytes,2,opt,name=override_name,json=overrideName,proto3" json:"override_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteOccupancyOverrideRequest) Reset()         { *m = DeleteOccupancyOverrideRequest{} }
func (m *DeleteOccupancyOverrideRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteOccupancyOverrideRequest) ProtoMessage()    {}
func (*DeleteOccupancyOverrideRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{9}
}

func (m *DeleteOccupancyOverrideRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteOccupancyOverrideRequest.Unmarshal(m, b)
}
func (m *DeleteOccupancyOverrideRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteOccupancyOverrideRequest.Marshal(b, m, deterministic)
}
func (m *DeleteOccupancyOverrideRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteOccupancyOverrideRequest.Merge(m, src)
}
func (m *DeleteOccupancyOverrideRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteOccupancyOverrideRequest.Size(m)
}
func (m *DeleteOccupancyOverrideRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteOccupancyOverrideRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteOccupancyOverrideRequest proto.InternalMessageInfo

func (m *DeleteOccupancyOverrideRequest) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *DeleteOccupancyOverrideRequest) GetOverrideName() string {
	if m != nil {
		return m.OverrideName
	}
	return ""
}

type GetOccupancyOverrideRequest struct {
	// the device name
	DeviceName           string   `protobuf:"bytes,1,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	OverrideName         string   `protobuf:"bytes,2,opt,name=override_name,json=overrideName,proto3" json:"override_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOccupancyOverrideRequest) Reset()         { *m = GetOccupancyOverrideRequest{} }
func (m *GetOccupancyOverrideRequest) String() string { return proto.CompactTextString(m) }
func (*GetOccupancyOverrideRequest) ProtoMessage()    {}
func (*GetOccupancyOverrideRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{10}
}

func (m *GetOccupancyOverrideRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOccupancyOverrideRequest.Unmarshal(m, b)
}
func (m *GetOccupancyOverrideRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOccupancyOverrideRequest.Marshal(b, m, deterministic)
}
func (m *GetOccupancyOverrideRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOccupancyOverrideRequest.Merge(m, src)
}
func (m *GetOccupancyOverrideRequest) XXX_Size() int {
	return xxx_messageInfo_GetOccupancyOverrideRequest.Size(m)
}
func (m *GetOccupancyOverrideRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOccupancyOverrideRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOccupancyOverrideRequest proto.InternalMessageInfo

func (m *GetOccupancyOverrideRequest) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *GetOccupancyOverrideRequest) GetOverrideName() string {
	if m != nil {
		return m.OverrideName
	}
	return ""
}

type ListOccupancyOverridesRequest struct {
	// the device name
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOccupancyOverridesRequest) Reset()         { *m = ListOccupancyOverridesRequest{} }
func (m *ListOccupancyOverridesRequest) String() string { return proto.CompactTextString(m) }
func (*ListOccupancyOverridesRequest) ProtoMessage()    {}
func (*ListOccupancyOverridesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{11}
}

func (m *ListOccupancyOverridesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOccupancyOverridesRequest.Unmarshal(m, b)
}
func (m *ListOccupancyOverridesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOccupancyOverridesRequest.Marshal(b, m, deterministic)
}
func (m *ListOccupancyOverridesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOccupancyOverridesRequest.Merge(m, src)
}
func (m *ListOccupancyOverridesRequest) XXX_Size() int {
	return xxx_messageInfo_ListOccupancyOverridesRequest.Size(m)
}
func (m *ListOccupancyOverridesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOccupancyOverridesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOccupancyOverridesRequest proto.InternalMessageInfo

func (m *ListOccupancyOverridesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListOccupancyOverridesResponse struct {
	Overrides            []*OccupancyOverride `protobuf:"bytes,1,rep,name=overrides,proto3" json:"overrides,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListOccupancyOverridesResponse) Reset()         { *m = ListOccupancyOverridesResponse{} }
func (m *ListOccupancyOverridesResponse) String() string { return proto.CompactTextString(m) }
func (*ListOccupancyOverridesResponse) ProtoMessage()    {}
func (*ListOccupancyOverridesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_038d54bb3ff22354, []int{12}
}

func (m *ListOccupancyOverridesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOccupancyOverridesResponse.Unmarshal(m, b)
}
func (m *ListOccupancyOverridesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOccupancyOverridesResponse.Marshal(b, m, deterministic)
}
func (m *ListOccupancyOverridesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOccupancyOverridesResponse.Merge(m, src)
}
func (m *ListOccupancyOverridesResponse) XXX_Size() int {
	return xxx_messageInfo_ListOccupancyOverridesResponse.Size(m)
}
func (m *ListOccupancyOverridesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOccupancyOverridesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOccupancyOverridesResponse proto.InternalMessageInfo

func (m *ListOccupancyOverridesResponse) GetOverrides() []*OccupancyOverride {
	if m != nil {
		return m.Overrides
	}
	return nil
}

func init() {
	proto.RegisterEnum("smartcore.api.device.traits.OccupancyState", OccupancyState_name, OccupancyState_value)
	proto.RegisterType((*OccupancyAttributes)(nil), "smartcore.api.device.traits.OccupancyAttributes")
	proto.RegisterType((*Occupancy)(nil), "smartcore.api.device.traits.Occupancy")
	proto.RegisterType((*OccupancyOverride)(nil), "smartcore.api.device.traits.OccupancyOverride")
	proto.RegisterType((*GetOccupancyRequest)(nil), "smartcore.api.device.traits.GetOccupancyRequest")
	proto.RegisterType((*PullOccupancyRequest)(nil), "smartcore.api.device.traits.PullOccupancyRequest")
	proto.RegisterType((*PullOccupancyResponse)(nil), "smartcore.api.device.traits.PullOccupancyResponse")
	proto.RegisterType((*OccupancyChange)(nil), "smartcore.api.device.traits.OccupancyChange")
	proto.RegisterType((*CreateOccupancyOverrideRequest)(nil), "smartcore.api.device.traits.CreateOccupancyOverrideRequest")
	proto.RegisterType((*UpdateOccupancyOverrideRequest)(nil), "smartcore.api.device.traits.UpdateOccupancyOverrideRequest")
	proto.RegisterType((*DeleteOccupancyOverrideRequest)(nil), "smartcore.api.device.traits.DeleteOccupancyOverrideRequest")
	proto.RegisterType((*GetOccupancyOverrideRequest)(nil), "smartcore.api.device.traits.GetOccupancyOverrideRequest")
	proto.RegisterType((*ListOccupancyOverridesRequest)(nil), "smartcore.api.device.traits.ListOccupancyOverridesRequest")
	proto.RegisterType((*ListOccupancyOverridesResponse)(nil), "smartcore.api.device.traits.ListOccupancyOverridesResponse")
}

func init() { proto.RegisterFile("device/traits/occupancy.proto", fileDescriptor_038d54bb3ff22354) }

var fileDescriptor_038d54bb3ff22354 = []byte{
	// 898 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0xee, 0x4a, 0x96, 0x6d, 0x8d, 0x14, 0xc7, 0xde, 0xa4, 0x8e, 0x40, 0xc3, 0xb2, 0xca, 0x02,
	0x85, 0x9a, 0xb4, 0x64, 0xa2, 0x5c, 0xda, 0xfa, 0xa4, 0x48, 0x76, 0xea, 0xc2, 0xb5, 0x05, 0x3a,
	0xbe, 0x14, 0x06, 0x88, 0x35, 0xb5, 0x56, 0x16, 0x16, 0xc9, 0x2d, 0x77, 0x69, 0xb8, 0xb7, 0x9c,
	0x7a, 0xe9, 0xa9, 0x0f, 0xd0, 0x4b, 0x4f, 0x45, 0xdf, 0xa1, 0x2f, 0xd0, 0xd7, 0xe9, 0x0b, 0x14,
	0xdc, 0x15, 0x29, 0xd9, 0x96, 0x28, 0xb9, 0x3f, 0xc8, 0x4d, 0x3b, 0xf3, 0x7d, 0x3b, 0x33, 0xdf,
	0xce, 0x8c, 0x08, 0xdb, 0x7d, 0x7a, 0xc5, 0x3c, 0x6a, 0xcb, 0x88, 0x30, 0x29, 0xec, 0xd0, 0xf3,
	0x62, 0x4e, 0x02, 0xef, 0x07, 0x8b, 0x47, 0xa1, 0x0c, 0xf1, 0x96, 0xf0, 0x49, 0x24, 0xbd, 0x30,
	0xa2, 0x16, 0xe1, 0xcc, 0xd2, 0x60, 0x4b, 0x83, 0x8d, 0xad, 0x41, 0x18, 0x0e, 0x86, 0xd4, 0x56,
	0xd0, 0xf3, 0xf8, 0xc2, 0xa6, 0x3e, 0x97, 0x23, 0xa6, 0xd1, 0xb8, 0xed, 0xbc, 0x60, 0x74, 0xd8,
	0x77, 0x7d, 0x22, 0x2e, 0x47, 0x88, 0x9d, 0xdb, 0x08, 0xc9, 0x7c, 0x2a, 0x24, 0xf1, 0xb9, 0x06,
	0x98, 0x04, 0x1e, 0x1d, 0xa7, 0xf9, 0xb4, 0xa5, 0x8c, 0xd8, 0x79, 0x2c, 0xa9, 0xc0, 0xdb, 0x00,
	0x3e, 0xb9, 0x76, 0x39, 0x0d, 0xf9, 0x90, 0xd6, 0x50, 0x03, 0x35, 0x4b, 0x4e, 0xd9, 0x27, 0xd7,
	0x3d, 0x65, 0xc0, 0xcf, 0x60, 0x43, 0xc4, 0x9c, 0x87, 0x91, 0x14, 0x6e, 0x78, 0x45, 0xa3, 0x88,
	0xf5, 0x69, 0xad, 0xd0, 0x40, 0xcd, 0x55, 0x67, 0x3d, 0x75, 0x1c, 0x8f, 0xec, 0xe6, 0x5f, 0x08,
	0xca, 0x59, 0x0c, 0xdc, 0x86, 0x92, 0x90, 0x44, 0xea, 0x4b, 0xd7, 0x5a, 0xcf, 0xac, 0x9c, 0xea,
	0xad, 0x8c, 0x76, 0x92, 0x50, 0x1c, 0xcd, 0xc4, 0x1f, 0x41, 0x55, 0x27, 0xe6, 0x7a, 0x61, 0x1c,
	0x48, 0x15, 0xb8, 0xe4, 0x54, 0xb4, 0xad, 0x93, 0x98, 0xf0, 0x3e, 0x6c, 0x28, 0xac, 0xeb, 0xbd,
	0x25, 0xc1, 0x80, 0xba, 0x49, 0xd9, 0xb5, 0x62, 0x03, 0x35, 0x2b, 0x2d, 0xc3, 0xd2, 0x9a, 0x58,
	0xa9, 0x26, 0xd6, 0x9b, 0x54, 0x13, 0xe7, 0xa1, 0x22, 0x75, 0x14, 0x27, 0xb1, 0xe2, 0x1a, 0xac,
	0x44, 0x94, 0x88, 0x30, 0x10, 0xb5, 0xa5, 0x46, 0xb1, 0x59, 0x76, 0xd2, 0x23, 0xae, 0x03, 0x78,
	0x61, 0x70, 0xc1, 0xfa, 0x34, 0xf0, 0x68, 0xad, 0xd4, 0x40, 0x4d, 0xe4, 0x4c, 0x58, 0xcc, 0x5f,
	0x0a, 0xb0, 0x91, 0xa5, 0x9f, 0x6a, 0x81, 0x31, 0x2c, 0x05, 0xc4, 0xd7, 0xc5, 0x97, 0x1d, 0xf5,
	0x7b, 0xac, 0x48, 0xe1, 0x3f, 0x53, 0xa4, 0x78, 0x57, 0x91, 0x2f, 0x01, 0xce, 0xe9, 0x80, 0x05,
	0x5a, 0x8a, 0xa5, 0xb9, 0x52, 0x94, 0x15, 0x5a, 0x89, 0xb0, 0x0b, 0x15, 0x7a, 0xcd, 0x59, 0x34,
	0x92, 0xb1, 0x34, 0x97, 0x0b, 0x1a, 0xae, 0xc8, 0x9b, 0xb0, 0xac, 0x25, 0xab, 0x2d, 0xab, 0x9a,
	0x47, 0x27, 0xf3, 0x53, 0x78, 0xf4, 0x9a, 0xca, 0xac, 0x1c, 0x87, 0x7e, 0x1f, 0x53, 0x21, 0xa7,
	0x09, 0x64, 0x3e, 0x85, 0xc7, 0xbd, 0x78, 0x38, 0x5c, 0x08, 0xeb, 0xc2, 0x87, 0xb7, 0xb0, 0x82,
	0x87, 0x81, 0xa0, 0x78, 0x1f, 0x56, 0x74, 0x2f, 0x88, 0x1a, 0x6a, 0x14, 0x9b, 0x95, 0xd6, 0x67,
	0x8b, 0xe9, 0xac, 0x9b, 0xc1, 0x49, 0xc9, 0xe6, 0x6f, 0x08, 0x1e, 0xde, 0x72, 0x4e, 0x7d, 0xd5,
	0x5d, 0xa8, 0x78, 0x11, 0x4d, 0x5a, 0x50, 0x89, 0x56, 0x98, 0x2f, 0x9a, 0x86, 0x2b, 0xd1, 0xba,
	0x50, 0xce, 0xb6, 0xc4, 0xa8, 0x6d, 0x3f, 0x59, 0x2c, 0x5d, 0x67, 0x4c, 0x34, 0xdf, 0x21, 0xa8,
	0x77, 0xd4, 0xa5, 0x77, 0x1a, 0x31, 0x47, 0x42, 0xfc, 0x0d, 0xac, 0xde, 0x98, 0xe9, 0x4a, 0xcb,
	0x5a, 0x2c, 0x76, 0x76, 0x79, 0xc6, 0x37, 0xff, 0x40, 0x50, 0x3f, 0xe5, 0xfd, 0xf7, 0x98, 0x42,
	0xf2, 0x10, 0xb1, 0xca, 0x40, 0xed, 0xc5, 0x99, 0x4b, 0x60, 0x3f, 0x59, 0x9d, 0xdf, 0x12, 0x71,
	0xe9, 0x80, 0x86, 0x27, 0xbf, 0xcd, 0x0b, 0xa8, 0x77, 0xe9, 0x90, 0xe6, 0xa4, 0xbf, 0x03, 0x15,
	0x9d, 0x8b, 0x3b, 0x51, 0x05, 0x68, 0xd3, 0x51, 0x52, 0xcb, 0xc7, 0xf0, 0x20, 0xcd, 0x45, 0x43,
	0x0a, 0x0a, 0x52, 0x4d, 0x8d, 0x09, 0xc8, 0xf4, 0x60, 0x6b, 0x72, 0x1a, 0xfe, 0x9f, 0x20, 0x2f,
	0x61, 0xfb, 0x90, 0x89, 0xbb, 0x51, 0x44, 0xde, 0x40, 0x05, 0x50, 0x9f, 0x45, 0x1a, 0x4d, 0xd6,
	0x21, 0x94, 0xd3, 0x30, 0xe9, 0x6c, 0xdd, 0xf7, 0xb5, 0xc6, 0x17, 0x3c, 0xfd, 0x1a, 0xd6, 0x6e,
	0xee, 0x38, 0xbc, 0x06, 0x70, 0x74, 0xec, 0x9e, 0x1c, 0xbc, 0x3e, 0x6a, 0x1f, 0x9e, 0xac, 0x7f,
	0x80, 0xab, 0xb0, 0x7a, 0xdc, 0xe9, 0x9c, 0xf6, 0x0e, 0xf6, 0xba, 0xeb, 0x28, 0xf1, 0x9e, 0x1e,
	0x65, 0xe7, 0x02, 0x5e, 0x85, 0xa5, 0x83, 0xee, 0xe1, 0xde, 0x7a, 0xb1, 0xf5, 0xd3, 0x0a, 0x54,
	0xc7, 0xff, 0x6d, 0x9c, 0xe1, 0xb7, 0x50, 0x9d, 0x14, 0x19, 0x3f, 0xcf, 0xcd, 0x72, 0xca, 0x76,
	0x32, 0x16, 0x1c, 0x42, 0x7c, 0x0d, 0x0f, 0x6e, 0x6c, 0x21, 0xfc, 0x22, 0x97, 0x38, 0x6d, 0xbb,
	0x19, 0xad, 0xfb, 0x50, 0xf4, 0x53, 0x3c, 0x47, 0xf8, 0x47, 0x04, 0x4f, 0x66, 0xcc, 0x3c, 0xde,
	0xcd, 0xbd, 0x31, 0x7f, 0x53, 0x18, 0xf7, 0x7c, 0x52, 0x95, 0xc8, 0x8c, 0xc9, 0x9f, 0x93, 0x48,
	0xfe, 0xbe, 0xb8, 0x77, 0x22, 0x01, 0x3c, 0x99, 0x31, 0xc2, 0x73, 0xf2, 0xc8, 0x1f, 0x7c, 0x63,
	0xf3, 0xce, 0x0a, 0xd9, 0x4b, 0x3e, 0xcd, 0xf0, 0x3b, 0x04, 0x8f, 0xa7, 0xcd, 0x32, 0xfe, 0x62,
	0xe1, 0x76, 0xfb, 0xb7, 0x25, 0xff, 0x8c, 0x60, 0x73, 0xfa, 0xd0, 0xe2, 0xaf, 0x72, 0xaf, 0xca,
	0x5d, 0x0f, 0xc6, 0xee, 0x3f, 0xe2, 0xea, 0xd6, 0x7c, 0xf5, 0x2b, 0x82, 0x9d, 0x3e, 0xbd, 0xca,
	0xbb, 0xe2, 0xd5, 0x78, 0xf2, 0x7b, 0x89, 0xa6, 0x3d, 0xf4, 0xdd, 0x8b, 0x01, 0x93, 0xd6, 0x15,
	0x09, 0x24, 0xb3, 0xbc, 0xd0, 0x8a, 0x2f, 0xed, 0x8c, 0x6e, 0x0b, 0xef, 0x73, 0xc2, 0x99, 0x3d,
	0x08, 0xed, 0x1b, 0x9f, 0xd7, 0xbf, 0x17, 0xb6, 0x4e, 0xb2, 0x10, 0x6d, 0xce, 0xac, 0xae, 0x0e,
	0xf1, 0x46, 0x79, 0xff, 0x9c, 0xf0, 0x9e, 0xb5, 0x39, 0x3b, 0xd3, 0xde, 0x33, 0xed, 0x3d, 0x5f,
	0x56, 0x6f, 0xf9, 0xf2, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x38, 0x1b, 0x33, 0xf0, 0xb2, 0x0b,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// OccupancyApiClient is the client API for OccupancyApi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OccupancyApiClient interface {
	// Get the current motion state for the device.
	GetOccupancy(ctx context.Context, in *GetOccupancyRequest, opts ...grpc.CallOption) (*Occupancy, error)
	// subscribe to changes in the motion state for the device.
	PullOccupancy(ctx context.Context, in *PullOccupancyRequest, opts ...grpc.CallOption) (OccupancyApi_PullOccupancyClient, error)
	// Create a new override for the occupancy
	CreateOccupancyOverride(ctx context.Context, in *CreateOccupancyOverrideRequest, opts ...grpc.CallOption) (*OccupancyOverride, error)
	// Update an existing override
	UpdateOccupancyOverride(ctx context.Context, in *UpdateOccupancyOverrideRequest, opts ...grpc.CallOption) (*OccupancyOverride, error)
	// Delete an override
	DeleteOccupancyOverride(ctx context.Context, in *DeleteOccupancyOverrideRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Get an existing override
	GetOccupancyOverride(ctx context.Context, in *GetOccupancyOverrideRequest, opts ...grpc.CallOption) (*OccupancyOverride, error)
	// List all overrides. The device may discard overrides that have expired.
	ListOccupancyOverrides(ctx context.Context, in *ListOccupancyOverridesRequest, opts ...grpc.CallOption) (*ListOccupancyOverridesResponse, error)
}

type occupancyApiClient struct {
	cc *grpc.ClientConn
}

func NewOccupancyApiClient(cc *grpc.ClientConn) OccupancyApiClient {
	return &occupancyApiClient{cc}
}

func (c *occupancyApiClient) GetOccupancy(ctx context.Context, in *GetOccupancyRequest, opts ...grpc.CallOption) (*Occupancy, error) {
	out := new(Occupancy)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.OccupancyApi/GetOccupancy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *occupancyApiClient) PullOccupancy(ctx context.Context, in *PullOccupancyRequest, opts ...grpc.CallOption) (OccupancyApi_PullOccupancyClient, error) {
	stream, err := c.cc.NewStream(ctx, &_OccupancyApi_serviceDesc.Streams[0], "/smartcore.api.device.traits.OccupancyApi/PullOccupancy", opts...)
	if err != nil {
		return nil, err
	}
	x := &occupancyApiPullOccupancyClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type OccupancyApi_PullOccupancyClient interface {
	Recv() (*PullOccupancyResponse, error)
	grpc.ClientStream
}

type occupancyApiPullOccupancyClient struct {
	grpc.ClientStream
}

func (x *occupancyApiPullOccupancyClient) Recv() (*PullOccupancyResponse, error) {
	m := new(PullOccupancyResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *occupancyApiClient) CreateOccupancyOverride(ctx context.Context, in *CreateOccupancyOverrideRequest, opts ...grpc.CallOption) (*OccupancyOverride, error) {
	out := new(OccupancyOverride)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.OccupancyApi/CreateOccupancyOverride", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *occupancyApiClient) UpdateOccupancyOverride(ctx context.Context, in *UpdateOccupancyOverrideRequest, opts ...grpc.CallOption) (*OccupancyOverride, error) {
	out := new(OccupancyOverride)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.OccupancyApi/UpdateOccupancyOverride", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *occupancyApiClient) DeleteOccupancyOverride(ctx context.Context, in *DeleteOccupancyOverrideRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.OccupancyApi/DeleteOccupancyOverride", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *occupancyApiClient) GetOccupancyOverride(ctx context.Context, in *GetOccupancyOverrideRequest, opts ...grpc.CallOption) (*OccupancyOverride, error) {
	out := new(OccupancyOverride)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.OccupancyApi/GetOccupancyOverride", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *occupancyApiClient) ListOccupancyOverrides(ctx context.Context, in *ListOccupancyOverridesRequest, opts ...grpc.CallOption) (*ListOccupancyOverridesResponse, error) {
	out := new(ListOccupancyOverridesResponse)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.OccupancyApi/ListOccupancyOverrides", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OccupancyApiServer is the server API for OccupancyApi service.
type OccupancyApiServer interface {
	// Get the current motion state for the device.
	GetOccupancy(context.Context, *GetOccupancyRequest) (*Occupancy, error)
	// subscribe to changes in the motion state for the device.
	PullOccupancy(*PullOccupancyRequest, OccupancyApi_PullOccupancyServer) error
	// Create a new override for the occupancy
	CreateOccupancyOverride(context.Context, *CreateOccupancyOverrideRequest) (*OccupancyOverride, error)
	// Update an existing override
	UpdateOccupancyOverride(context.Context, *UpdateOccupancyOverrideRequest) (*OccupancyOverride, error)
	// Delete an override
	DeleteOccupancyOverride(context.Context, *DeleteOccupancyOverrideRequest) (*empty.Empty, error)
	// Get an existing override
	GetOccupancyOverride(context.Context, *GetOccupancyOverrideRequest) (*OccupancyOverride, error)
	// List all overrides. The device may discard overrides that have expired.
	ListOccupancyOverrides(context.Context, *ListOccupancyOverridesRequest) (*ListOccupancyOverridesResponse, error)
}

// UnimplementedOccupancyApiServer can be embedded to have forward compatible implementations.
type UnimplementedOccupancyApiServer struct {
}

func (*UnimplementedOccupancyApiServer) GetOccupancy(ctx context.Context, req *GetOccupancyRequest) (*Occupancy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOccupancy not implemented")
}
func (*UnimplementedOccupancyApiServer) PullOccupancy(req *PullOccupancyRequest, srv OccupancyApi_PullOccupancyServer) error {
	return status.Errorf(codes.Unimplemented, "method PullOccupancy not implemented")
}
func (*UnimplementedOccupancyApiServer) CreateOccupancyOverride(ctx context.Context, req *CreateOccupancyOverrideRequest) (*OccupancyOverride, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOccupancyOverride not implemented")
}
func (*UnimplementedOccupancyApiServer) UpdateOccupancyOverride(ctx context.Context, req *UpdateOccupancyOverrideRequest) (*OccupancyOverride, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOccupancyOverride not implemented")
}
func (*UnimplementedOccupancyApiServer) DeleteOccupancyOverride(ctx context.Context, req *DeleteOccupancyOverrideRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOccupancyOverride not implemented")
}
func (*UnimplementedOccupancyApiServer) GetOccupancyOverride(ctx context.Context, req *GetOccupancyOverrideRequest) (*OccupancyOverride, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOccupancyOverride not implemented")
}
func (*UnimplementedOccupancyApiServer) ListOccupancyOverrides(ctx context.Context, req *ListOccupancyOverridesRequest) (*ListOccupancyOverridesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOccupancyOverrides not implemented")
}

func RegisterOccupancyApiServer(s *grpc.Server, srv OccupancyApiServer) {
	s.RegisterService(&_OccupancyApi_serviceDesc, srv)
}

func _OccupancyApi_GetOccupancy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOccupancyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OccupancyApiServer).GetOccupancy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.OccupancyApi/GetOccupancy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OccupancyApiServer).GetOccupancy(ctx, req.(*GetOccupancyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OccupancyApi_PullOccupancy_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PullOccupancyRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(OccupancyApiServer).PullOccupancy(m, &occupancyApiPullOccupancyServer{stream})
}

type OccupancyApi_PullOccupancyServer interface {
	Send(*PullOccupancyResponse) error
	grpc.ServerStream
}

type occupancyApiPullOccupancyServer struct {
	grpc.ServerStream
}

func (x *occupancyApiPullOccupancyServer) Send(m *PullOccupancyResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _OccupancyApi_CreateOccupancyOverride_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOccupancyOverrideRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OccupancyApiServer).CreateOccupancyOverride(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.OccupancyApi/CreateOccupancyOverride",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OccupancyApiServer).CreateOccupancyOverride(ctx, req.(*CreateOccupancyOverrideRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OccupancyApi_UpdateOccupancyOverride_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOccupancyOverrideRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OccupancyApiServer).UpdateOccupancyOverride(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.OccupancyApi/UpdateOccupancyOverride",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OccupancyApiServer).UpdateOccupancyOverride(ctx, req.(*UpdateOccupancyOverrideRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OccupancyApi_DeleteOccupancyOverride_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOccupancyOverrideRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OccupancyApiServer).DeleteOccupancyOverride(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.OccupancyApi/DeleteOccupancyOverride",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OccupancyApiServer).DeleteOccupancyOverride(ctx, req.(*DeleteOccupancyOverrideRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OccupancyApi_GetOccupancyOverride_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOccupancyOverrideRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OccupancyApiServer).GetOccupancyOverride(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.OccupancyApi/GetOccupancyOverride",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OccupancyApiServer).GetOccupancyOverride(ctx, req.(*GetOccupancyOverrideRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OccupancyApi_ListOccupancyOverrides_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOccupancyOverridesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OccupancyApiServer).ListOccupancyOverrides(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.OccupancyApi/ListOccupancyOverrides",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OccupancyApiServer).ListOccupancyOverrides(ctx, req.(*ListOccupancyOverridesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OccupancyApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "smartcore.api.device.traits.OccupancyApi",
	HandlerType: (*OccupancyApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOccupancy",
			Handler:    _OccupancyApi_GetOccupancy_Handler,
		},
		{
			MethodName: "CreateOccupancyOverride",
			Handler:    _OccupancyApi_CreateOccupancyOverride_Handler,
		},
		{
			MethodName: "UpdateOccupancyOverride",
			Handler:    _OccupancyApi_UpdateOccupancyOverride_Handler,
		},
		{
			MethodName: "DeleteOccupancyOverride",
			Handler:    _OccupancyApi_DeleteOccupancyOverride_Handler,
		},
		{
			MethodName: "GetOccupancyOverride",
			Handler:    _OccupancyApi_GetOccupancyOverride_Handler,
		},
		{
			MethodName: "ListOccupancyOverrides",
			Handler:    _OccupancyApi_ListOccupancyOverrides_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PullOccupancy",
			Handler:       _OccupancyApi_PullOccupancy_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "device/traits/occupancy.proto",
}
