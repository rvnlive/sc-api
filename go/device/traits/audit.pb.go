// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device/traits/audit.proto

package traits

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Trait.attribute for the audit api
type AuditAttributes struct {
	Retention *AuditRetention `protobuf:"bytes,1,opt,name=retention,proto3" json:"retention,omitempty"`
	// possible priorities that audit records can have
	Priorities []*Priority `protobuf:"bytes,2,rep,name=priorities,proto3" json:"priorities,omitempty"`
	// possible severities that audit records can have
	Severities           []*Severity `protobuf:"bytes,3,rep,name=severities,proto3" json:"severities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AuditAttributes) Reset()         { *m = AuditAttributes{} }
func (m *AuditAttributes) String() string { return proto.CompactTextString(m) }
func (*AuditAttributes) ProtoMessage()    {}
func (*AuditAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f1cdf72f01c9f6, []int{0}
}

func (m *AuditAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditAttributes.Unmarshal(m, b)
}
func (m *AuditAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditAttributes.Marshal(b, m, deterministic)
}
func (m *AuditAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditAttributes.Merge(m, src)
}
func (m *AuditAttributes) XXX_Size() int {
	return xxx_messageInfo_AuditAttributes.Size(m)
}
func (m *AuditAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_AuditAttributes proto.InternalMessageInfo

func (m *AuditAttributes) GetRetention() *AuditRetention {
	if m != nil {
		return m.Retention
	}
	return nil
}

func (m *AuditAttributes) GetPriorities() []*Priority {
	if m != nil {
		return m.Priorities
	}
	return nil
}

func (m *AuditAttributes) GetSeverities() []*Severity {
	if m != nil {
		return m.Severities
	}
	return nil
}

// How are audit records retained on the device.
type AuditRetention struct {
	// how many total records will the device remember. 0 means no memory.
	MaxRecords int32 `protobuf:"varint,1,opt,name=max_records,json=maxRecords,proto3" json:"max_records,omitempty"`
	// What is the maximum age for records kept on the device. Absent means age does not affect retention
	MaxAge *duration.Duration `protobuf:"bytes,2,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	// if true then device restarts do not affect audit retention on the device
	Persistent           bool     `protobuf:"varint,3,opt,name=persistent,proto3" json:"persistent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuditRetention) Reset()         { *m = AuditRetention{} }
func (m *AuditRetention) String() string { return proto.CompactTextString(m) }
func (*AuditRetention) ProtoMessage()    {}
func (*AuditRetention) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f1cdf72f01c9f6, []int{1}
}

func (m *AuditRetention) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditRetention.Unmarshal(m, b)
}
func (m *AuditRetention) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditRetention.Marshal(b, m, deterministic)
}
func (m *AuditRetention) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditRetention.Merge(m, src)
}
func (m *AuditRetention) XXX_Size() int {
	return xxx_messageInfo_AuditRetention.Size(m)
}
func (m *AuditRetention) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditRetention.DiscardUnknown(m)
}

var xxx_messageInfo_AuditRetention proto.InternalMessageInfo

func (m *AuditRetention) GetMaxRecords() int32 {
	if m != nil {
		return m.MaxRecords
	}
	return 0
}

func (m *AuditRetention) GetMaxAge() *duration.Duration {
	if m != nil {
		return m.MaxAge
	}
	return nil
}

func (m *AuditRetention) GetPersistent() bool {
	if m != nil {
		return m.Persistent
	}
	return false
}

// represents humidity for a space
type AuditRecord struct {
	EventTime   *timestamp.Timestamp `protobuf:"bytes,1,opt,name=event_time,json=eventTime,proto3" json:"event_time,omitempty"`
	Title       string               `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// 1 = highest priority. when dealing with audit records, indicates how this record should be scheduled vs other
	// records
	PriorityLevel int32 `protobuf:"varint,4,opt,name=priority_level,json=priorityLevel,proto3" json:"priority_level,omitempty"`
	// 1 = highest severity. An indication of how important or impactful this record is.
	SeverityLevel        int32             `protobuf:"varint,5,opt,name=severity_level,json=severityLevel,proto3" json:"severity_level,omitempty"`
	Labels               map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AuditRecord) Reset()         { *m = AuditRecord{} }
func (m *AuditRecord) String() string { return proto.CompactTextString(m) }
func (*AuditRecord) ProtoMessage()    {}
func (*AuditRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f1cdf72f01c9f6, []int{2}
}

func (m *AuditRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditRecord.Unmarshal(m, b)
}
func (m *AuditRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditRecord.Marshal(b, m, deterministic)
}
func (m *AuditRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditRecord.Merge(m, src)
}
func (m *AuditRecord) XXX_Size() int {
	return xxx_messageInfo_AuditRecord.Size(m)
}
func (m *AuditRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditRecord.DiscardUnknown(m)
}

var xxx_messageInfo_AuditRecord proto.InternalMessageInfo

func (m *AuditRecord) GetEventTime() *timestamp.Timestamp {
	if m != nil {
		return m.EventTime
	}
	return nil
}

func (m *AuditRecord) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AuditRecord) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AuditRecord) GetPriorityLevel() int32 {
	if m != nil {
		return m.PriorityLevel
	}
	return 0
}

func (m *AuditRecord) GetSeverityLevel() int32 {
	if m != nil {
		return m.SeverityLevel
	}
	return 0
}

func (m *AuditRecord) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// defines a category description
type Category struct {
	// unique name for the category
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// An official string for the category, for example "user action" or "security"
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Category) Reset()         { *m = Category{} }
func (m *Category) String() string { return proto.CompactTextString(m) }
func (*Category) ProtoMessage()    {}
func (*Category) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f1cdf72f01c9f6, []int{3}
}

func (m *Category) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Category.Unmarshal(m, b)
}
func (m *Category) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Category.Marshal(b, m, deterministic)
}
func (m *Category) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Category.Merge(m, src)
}
func (m *Category) XXX_Size() int {
	return xxx_messageInfo_Category.Size(m)
}
func (m *Category) XXX_DiscardUnknown() {
	xxx_messageInfo_Category.DiscardUnknown(m)
}

var xxx_messageInfo_Category proto.InternalMessageInfo

func (m *Category) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Category) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Category) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// defines a priority description
type Priority struct {
	// The level value for the priority. Priority 1 should be the highest priority.
	Level int32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	// An official string for the priority, for example "high" or "critical"
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Priority) Reset()         { *m = Priority{} }
func (m *Priority) String() string { return proto.CompactTextString(m) }
func (*Priority) ProtoMessage()    {}
func (*Priority) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f1cdf72f01c9f6, []int{4}
}

func (m *Priority) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Priority.Unmarshal(m, b)
}
func (m *Priority) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Priority.Marshal(b, m, deterministic)
}
func (m *Priority) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Priority.Merge(m, src)
}
func (m *Priority) XXX_Size() int {
	return xxx_messageInfo_Priority.Size(m)
}
func (m *Priority) XXX_DiscardUnknown() {
	xxx_messageInfo_Priority.DiscardUnknown(m)
}

var xxx_messageInfo_Priority proto.InternalMessageInfo

func (m *Priority) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Priority) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Priority) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// defines a severity description
type Severity struct {
	// The level value for the severity. Severity 1 should be the highest impact.
	Level int32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	// An official string for the severity, for example "high" or "critical"
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Severity) Reset()         { *m = Severity{} }
func (m *Severity) String() string { return proto.CompactTextString(m) }
func (*Severity) ProtoMessage()    {}
func (*Severity) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f1cdf72f01c9f6, []int{5}
}

func (m *Severity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Severity.Unmarshal(m, b)
}
func (m *Severity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Severity.Marshal(b, m, deterministic)
}
func (m *Severity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Severity.Merge(m, src)
}
func (m *Severity) XXX_Size() int {
	return xxx_messageInfo_Severity.Size(m)
}
func (m *Severity) XXX_DiscardUnknown() {
	xxx_messageInfo_Severity.DiscardUnknown(m)
}

var xxx_messageInfo_Severity proto.InternalMessageInfo

func (m *Severity) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Severity) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Severity) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// List request arguments
type ListAuditRecordsRequest struct {
	// the name of the device to get the state for
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// How many items should be returned. Default is 10, max is 100.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The next_page_token from the previous response
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAuditRecordsRequest) Reset()         { *m = ListAuditRecordsRequest{} }
func (m *ListAuditRecordsRequest) String() string { return proto.CompactTextString(m) }
func (*ListAuditRecordsRequest) ProtoMessage()    {}
func (*ListAuditRecordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f1cdf72f01c9f6, []int{6}
}

func (m *ListAuditRecordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAuditRecordsRequest.Unmarshal(m, b)
}
func (m *ListAuditRecordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAuditRecordsRequest.Marshal(b, m, deterministic)
}
func (m *ListAuditRecordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAuditRecordsRequest.Merge(m, src)
}
func (m *ListAuditRecordsRequest) XXX_Size() int {
	return xxx_messageInfo_ListAuditRecordsRequest.Size(m)
}
func (m *ListAuditRecordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAuditRecordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAuditRecordsRequest proto.InternalMessageInfo

func (m *ListAuditRecordsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListAuditRecordsRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAuditRecordsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// List response body
type ListAuditRecordsResponse struct {
	// The current page of records to satisfy the request
	AuditRecords []*AuditRecord `protobuf:"bytes,1,rep,name=audit_records,json=auditRecords,proto3" json:"audit_records,omitempty"`
	// Use in page_token to retrieve the next page
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Total number of items that would be returned if not splitting the response into pages.
	TotalSize            int32    `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAuditRecordsResponse) Reset()         { *m = ListAuditRecordsResponse{} }
func (m *ListAuditRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*ListAuditRecordsResponse) ProtoMessage()    {}
func (*ListAuditRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f1cdf72f01c9f6, []int{7}
}

func (m *ListAuditRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAuditRecordsResponse.Unmarshal(m, b)
}
func (m *ListAuditRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAuditRecordsResponse.Marshal(b, m, deterministic)
}
func (m *ListAuditRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAuditRecordsResponse.Merge(m, src)
}
func (m *ListAuditRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_ListAuditRecordsResponse.Size(m)
}
func (m *ListAuditRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAuditRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAuditRecordsResponse proto.InternalMessageInfo

func (m *ListAuditRecordsResponse) GetAuditRecords() []*AuditRecord {
	if m != nil {
		return m.AuditRecords
	}
	return nil
}

func (m *ListAuditRecordsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListAuditRecordsResponse) GetTotalSize() int32 {
	if m != nil {
		return m.TotalSize
	}
	return 0
}

// Request to create an audit record
type CreateAuditRecordRequest struct {
	// the name of the device to add the record to
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	AuditRecord          *AuditRecord `protobuf:"bytes,2,opt,name=audit_record,json=auditRecord,proto3" json:"audit_record,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateAuditRecordRequest) Reset()         { *m = CreateAuditRecordRequest{} }
func (m *CreateAuditRecordRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAuditRecordRequest) ProtoMessage()    {}
func (*CreateAuditRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f1cdf72f01c9f6, []int{8}
}

func (m *CreateAuditRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAuditRecordRequest.Unmarshal(m, b)
}
func (m *CreateAuditRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAuditRecordRequest.Marshal(b, m, deterministic)
}
func (m *CreateAuditRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAuditRecordRequest.Merge(m, src)
}
func (m *CreateAuditRecordRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAuditRecordRequest.Size(m)
}
func (m *CreateAuditRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAuditRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAuditRecordRequest proto.InternalMessageInfo

func (m *CreateAuditRecordRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateAuditRecordRequest) GetAuditRecord() *AuditRecord {
	if m != nil {
		return m.AuditRecord
	}
	return nil
}

type PullAuditRecordsRequest struct {
	// the name of the device to subscribe to
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullAuditRecordsRequest) Reset()         { *m = PullAuditRecordsRequest{} }
func (m *PullAuditRecordsRequest) String() string { return proto.CompactTextString(m) }
func (*PullAuditRecordsRequest) ProtoMessage()    {}
func (*PullAuditRecordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f1cdf72f01c9f6, []int{9}
}

func (m *PullAuditRecordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullAuditRecordsRequest.Unmarshal(m, b)
}
func (m *PullAuditRecordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullAuditRecordsRequest.Marshal(b, m, deterministic)
}
func (m *PullAuditRecordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullAuditRecordsRequest.Merge(m, src)
}
func (m *PullAuditRecordsRequest) XXX_Size() int {
	return xxx_messageInfo_PullAuditRecordsRequest.Size(m)
}
func (m *PullAuditRecordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullAuditRecordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullAuditRecordsRequest proto.InternalMessageInfo

func (m *PullAuditRecordsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// response containing new audit records
type PullAuditRecordsResponse struct {
	// the list of changes that have occurred since the last event
	Changes              []*AuditRecordChange `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PullAuditRecordsResponse) Reset()         { *m = PullAuditRecordsResponse{} }
func (m *PullAuditRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*PullAuditRecordsResponse) ProtoMessage()    {}
func (*PullAuditRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f1cdf72f01c9f6, []int{10}
}

func (m *PullAuditRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullAuditRecordsResponse.Unmarshal(m, b)
}
func (m *PullAuditRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullAuditRecordsResponse.Marshal(b, m, deterministic)
}
func (m *PullAuditRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullAuditRecordsResponse.Merge(m, src)
}
func (m *PullAuditRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_PullAuditRecordsResponse.Size(m)
}
func (m *PullAuditRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PullAuditRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PullAuditRecordsResponse proto.InternalMessageInfo

func (m *PullAuditRecordsResponse) GetChanges() []*AuditRecordChange {
	if m != nil {
		return m.Changes
	}
	return nil
}

// A change to the humidity reading of the device
type AuditRecordChange struct {
	// name for the device that issued the change
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// when the change occurred
	CreateTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// the new audit record
	Humidity             *AuditRecord `protobuf:"bytes,3,opt,name=humidity,proto3" json:"humidity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *AuditRecordChange) Reset()         { *m = AuditRecordChange{} }
func (m *AuditRecordChange) String() string { return proto.CompactTextString(m) }
func (*AuditRecordChange) ProtoMessage()    {}
func (*AuditRecordChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_18f1cdf72f01c9f6, []int{11}
}

func (m *AuditRecordChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuditRecordChange.Unmarshal(m, b)
}
func (m *AuditRecordChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuditRecordChange.Marshal(b, m, deterministic)
}
func (m *AuditRecordChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuditRecordChange.Merge(m, src)
}
func (m *AuditRecordChange) XXX_Size() int {
	return xxx_messageInfo_AuditRecordChange.Size(m)
}
func (m *AuditRecordChange) XXX_DiscardUnknown() {
	xxx_messageInfo_AuditRecordChange.DiscardUnknown(m)
}

var xxx_messageInfo_AuditRecordChange proto.InternalMessageInfo

func (m *AuditRecordChange) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AuditRecordChange) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *AuditRecordChange) GetHumidity() *AuditRecord {
	if m != nil {
		return m.Humidity
	}
	return nil
}

func init() {
	proto.RegisterType((*AuditAttributes)(nil), "smartcore.api.device.traits.AuditAttributes")
	proto.RegisterType((*AuditRetention)(nil), "smartcore.api.device.traits.AuditRetention")
	proto.RegisterType((*AuditRecord)(nil), "smartcore.api.device.traits.AuditRecord")
	proto.RegisterMapType((map[string]string)(nil), "smartcore.api.device.traits.AuditRecord.LabelsEntry")
	proto.RegisterType((*Category)(nil), "smartcore.api.device.traits.Category")
	proto.RegisterType((*Priority)(nil), "smartcore.api.device.traits.Priority")
	proto.RegisterType((*Severity)(nil), "smartcore.api.device.traits.Severity")
	proto.RegisterType((*ListAuditRecordsRequest)(nil), "smartcore.api.device.traits.ListAuditRecordsRequest")
	proto.RegisterType((*ListAuditRecordsResponse)(nil), "smartcore.api.device.traits.ListAuditRecordsResponse")
	proto.RegisterType((*CreateAuditRecordRequest)(nil), "smartcore.api.device.traits.CreateAuditRecordRequest")
	proto.RegisterType((*PullAuditRecordsRequest)(nil), "smartcore.api.device.traits.PullAuditRecordsRequest")
	proto.RegisterType((*PullAuditRecordsResponse)(nil), "smartcore.api.device.traits.PullAuditRecordsResponse")
	proto.RegisterType((*AuditRecordChange)(nil), "smartcore.api.device.traits.AuditRecordChange")
}

func init() { proto.RegisterFile("device/traits/audit.proto", fileDescriptor_18f1cdf72f01c9f6) }

var fileDescriptor_18f1cdf72f01c9f6 = []byte{
	// 834 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0x96, 0x93, 0x66, 0x9b, 0x1c, 0x77, 0xdb, 0xed, 0x08, 0xa9, 0x6e, 0x56, 0x74, 0x57, 0x96,
	0x8a, 0x56, 0x42, 0xb5, 0x21, 0x80, 0x44, 0xe1, 0x2a, 0xdd, 0xad, 0x04, 0x22, 0x48, 0xd1, 0xec,
	0x0a, 0x21, 0xb4, 0x52, 0x34, 0xb1, 0x0f, 0xee, 0x68, 0x1d, 0xdb, 0xcc, 0x8c, 0xa3, 0xa4, 0x5c,
	0x20, 0x90, 0x78, 0x0d, 0x1e, 0xa0, 0x57, 0x3c, 0x07, 0x2f, 0xc0, 0x3b, 0xf0, 0x14, 0x68, 0x66,
	0xec, 0xe0, 0x6e, 0x9a, 0x6c, 0x0a, 0xdc, 0x65, 0xce, 0xf9, 0xce, 0xcf, 0xf7, 0xcd, 0xe7, 0x51,
	0xe0, 0x61, 0x8c, 0x73, 0x1e, 0x61, 0xa8, 0x04, 0xe3, 0x4a, 0x86, 0xac, 0x8c, 0xb9, 0x0a, 0x0a,
	0x91, 0xab, 0x9c, 0x1c, 0xca, 0x19, 0x13, 0x2a, 0xca, 0x05, 0x06, 0xac, 0xe0, 0x81, 0x05, 0x06,
	0x16, 0xd8, 0x3f, 0x4a, 0xf2, 0x3c, 0x49, 0x31, 0x34, 0xd0, 0x69, 0xf9, 0x7d, 0xa8, 0xf8, 0x0c,
	0xa5, 0x62, 0xb3, 0xc2, 0x56, 0xf7, 0x1f, 0x5d, 0x07, 0xc4, 0xa5, 0x60, 0x8a, 0xe7, 0x99, 0xcd,
	0xfb, 0x7f, 0x39, 0x70, 0x6f, 0xa8, 0xa7, 0x0d, 0x95, 0x12, 0x7c, 0x5a, 0x2a, 0x94, 0xe4, 0x4b,
	0xe8, 0x09, 0x54, 0x98, 0x69, 0x98, 0xe7, 0x1c, 0x3b, 0x27, 0xee, 0xe0, 0xfd, 0x60, 0xcb, 0x16,
	0x81, 0x69, 0x40, 0xeb, 0x12, 0xfa, 0x4f, 0x35, 0x79, 0x0e, 0x50, 0x08, 0x9e, 0x0b, 0xae, 0x38,
	0x4a, 0xaf, 0x75, 0xdc, 0x3e, 0x71, 0x07, 0x8f, 0xb7, 0xf6, 0x1a, 0x5b, 0xf8, 0x92, 0x36, 0x0a,
	0x75, 0x1b, 0x89, 0x73, 0xac, 0xda, 0xb4, 0x77, 0x68, 0x73, 0x6e, 0xe1, 0x4b, 0xda, 0x28, 0xf4,
	0x7f, 0x75, 0xe0, 0xee, 0xeb, 0xbb, 0x92, 0x23, 0x70, 0x67, 0x6c, 0x31, 0x11, 0x18, 0xe5, 0x22,
	0x96, 0x86, 0x6d, 0x87, 0xc2, 0x8c, 0x2d, 0xa8, 0x8d, 0x90, 0x01, 0xdc, 0xd6, 0x00, 0x96, 0xa0,
	0xd7, 0x32, 0x52, 0x3c, 0x0c, 0xac, 0xa4, 0x41, 0x2d, 0x69, 0x70, 0x56, 0x49, 0x4a, 0xf7, 0x66,
	0x6c, 0x31, 0x4c, 0x90, 0x3c, 0x02, 0x28, 0x50, 0x48, 0x2e, 0xf5, 0x14, 0xaf, 0x7d, 0xec, 0x9c,
	0x74, 0x69, 0x23, 0xe2, 0xff, 0xd9, 0x02, 0xb7, 0xda, 0x43, 0x0f, 0x21, 0x4f, 0x01, 0x70, 0x8e,
	0x99, 0x9a, 0xe8, 0xdb, 0xab, 0x14, 0xef, 0xaf, 0x8d, 0xb9, 0xa8, 0xaf, 0x96, 0xf6, 0x0c, 0x5a,
	0x9f, 0xc9, 0x3b, 0xd0, 0x51, 0x5c, 0xa5, 0x76, 0xb9, 0x1e, 0xb5, 0x07, 0x72, 0x0c, 0x6e, 0x8c,
	0x32, 0x12, 0xbc, 0x30, 0x77, 0xd8, 0x36, 0xb9, 0x66, 0x88, 0x3c, 0x86, 0xbb, 0x95, 0xbe, 0xcb,
	0x49, 0x8a, 0x73, 0x4c, 0xbd, 0x5b, 0x86, 0xfa, 0x7e, 0x1d, 0x1d, 0xe9, 0xa0, 0x86, 0x55, 0xfa,
	0xd5, 0xb0, 0x8e, 0x85, 0xd5, 0x51, 0x0b, 0x1b, 0xc1, 0x5e, 0xca, 0xa6, 0x98, 0x4a, 0xaf, 0x6b,
	0xee, 0xe6, 0xe3, 0x5d, 0xec, 0xa2, 0xa9, 0x07, 0x23, 0x53, 0xf6, 0x3c, 0x53, 0x62, 0x49, 0xab,
	0x1e, 0xfd, 0xa7, 0xe0, 0x36, 0xc2, 0xe4, 0x00, 0xda, 0x57, 0xb8, 0x34, 0xb2, 0xf4, 0xa8, 0xfe,
	0xa9, 0x49, 0xcf, 0x59, 0x5a, 0xae, 0x48, 0x9b, 0xc3, 0x67, 0xad, 0x4f, 0x1d, 0xff, 0x1b, 0xe8,
	0x9e, 0x32, 0x85, 0x49, 0x2e, 0x96, 0x84, 0xc0, 0xad, 0x8c, 0x55, 0x7a, 0xf6, 0xa8, 0xf9, 0xfd,
	0x6f, 0xe5, 0xf2, 0xbf, 0x85, 0x6e, 0x6d, 0x4c, 0xdd, 0xc3, 0x4a, 0x61, 0xcd, 0x62, 0x0f, 0xff,
	0xa5, 0x73, 0xed, 0xd5, 0xff, 0xb9, 0x33, 0x87, 0x07, 0x23, 0x2e, 0x55, 0x43, 0x6d, 0x49, 0xf1,
	0x87, 0x12, 0xa5, 0x7a, 0xa3, 0x34, 0x87, 0xd0, 0x2b, 0x58, 0x82, 0x13, 0xc9, 0x5f, 0xda, 0x51,
	0x1d, 0xda, 0xd5, 0x81, 0x73, 0xfe, 0x12, 0xc9, 0xbb, 0x00, 0x26, 0xa9, 0xf2, 0x2b, 0xac, 0x87,
	0x19, 0xf8, 0x85, 0x0e, 0xf8, 0xbf, 0x3b, 0xe0, 0xad, 0xcf, 0x92, 0x45, 0x9e, 0x49, 0x24, 0x5f,
	0xc3, 0xbe, 0x79, 0xcf, 0x1a, 0x1f, 0x99, 0xf6, 0xc8, 0xc9, 0xae, 0x1e, 0xa1, 0x77, 0x58, 0xa3,
	0x2d, 0x79, 0x0f, 0xee, 0x65, 0xb8, 0x50, 0x93, 0xc6, 0x3e, 0x56, 0x98, 0x7d, 0x1d, 0x1e, 0xd7,
	0x3b, 0xe9, 0x95, 0x55, 0xae, 0x58, 0x6a, 0x09, 0xb5, 0x0d, 0xa1, 0x9e, 0x89, 0x68, 0x46, 0xfe,
	0x8f, 0xe0, 0x9d, 0x0a, 0x64, 0x0a, 0x9b, 0x93, 0xb6, 0xc8, 0xf3, 0x15, 0xdc, 0x69, 0xb2, 0xa8,
	0x1e, 0x83, 0xdd, 0x49, 0xb8, 0x0d, 0x12, 0xfe, 0x13, 0x78, 0x30, 0x2e, 0xd3, 0x74, 0xc7, 0xab,
	0xf1, 0x63, 0xf0, 0xd6, 0xe1, 0x95, 0xba, 0x5f, 0xc0, 0xed, 0xe8, 0x05, 0xcb, 0x12, 0xac, 0x75,
	0x0d, 0x76, 0x5d, 0xe9, 0xd4, 0x94, 0xd1, 0xba, 0xdc, 0x7f, 0xe5, 0xc0, 0xfd, 0xb5, 0xf4, 0x1b,
	0xb5, 0xf8, 0x1c, 0xdc, 0xc8, 0x68, 0x67, 0x1f, 0xac, 0xd6, 0x8d, 0x0f, 0x16, 0x58, 0xb8, 0x79,
	0xb1, 0xce, 0xa0, 0xfb, 0xa2, 0x9c, 0xf1, 0x98, 0xab, 0xa5, 0xb9, 0x95, 0xb7, 0x11, 0x71, 0x55,
	0x39, 0xf8, 0xa5, 0x0d, 0x1d, 0x93, 0x21, 0x3f, 0xc1, 0xc1, 0x75, 0xeb, 0x91, 0xed, 0xef, 0xcf,
	0x86, 0xaf, 0xa2, 0xff, 0xc9, 0x5b, 0x56, 0x55, 0x37, 0xa0, 0xe0, 0xfe, 0x9a, 0x93, 0xc8, 0xf6,
	0x5e, 0x9b, 0x9c, 0xd7, 0xdf, 0x59, 0x0a, 0xf2, 0xb3, 0x03, 0x07, 0xd7, 0x4d, 0x71, 0x03, 0xef,
	0x0d, 0x96, 0xbb, 0x81, 0xf7, 0x26, 0xe7, 0x7d, 0xe0, 0x3c, 0xfb, 0xcd, 0x81, 0xa3, 0x18, 0xe7,
	0xdb, 0xca, 0x9f, 0x81, 0xa9, 0x1d, 0x6b, 0x4f, 0x8c, 0x9d, 0xef, 0x3e, 0x4c, 0xb8, 0x0a, 0xe6,
	0x2c, 0x53, 0x3c, 0x88, 0xf2, 0xa0, 0xbc, 0x0a, 0x57, 0xa5, 0xa1, 0x8c, 0x9e, 0xb0, 0x82, 0x87,
	0x49, 0x1e, 0xbe, 0xf6, 0x5f, 0xe8, 0x55, 0xeb, 0xf0, 0x7c, 0xd5, 0x7e, 0x58, 0xf0, 0xe0, 0xcc,
	0xb6, 0xbf, 0x30, 0xd9, 0x3f, 0x1a, 0xd9, 0xcb, 0x61, 0xc1, 0x2f, 0x6d, 0xf6, 0xd2, 0x66, 0xa7,
	0x7b, 0xc6, 0x8b, 0x1f, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xdf, 0x5a, 0x0b, 0x5f, 0x09,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuditClient is the client API for Audit service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuditClient interface {
	// List the known audit records the device has
	ListAuditRecords(ctx context.Context, in *ListAuditRecordsRequest, opts ...grpc.CallOption) (*ListAuditRecordsResponse, error)
	// Create a new audit record in this devices record list
	CreateAuditRecord(ctx context.Context, in *CreateAuditRecordRequest, opts ...grpc.CallOption) (*AuditRecord, error)
	// subscribe to new audit records
	PullAuditRecords(ctx context.Context, in *PullAuditRecordsRequest, opts ...grpc.CallOption) (Audit_PullAuditRecordsClient, error)
}

type auditClient struct {
	cc *grpc.ClientConn
}

func NewAuditClient(cc *grpc.ClientConn) AuditClient {
	return &auditClient{cc}
}

func (c *auditClient) ListAuditRecords(ctx context.Context, in *ListAuditRecordsRequest, opts ...grpc.CallOption) (*ListAuditRecordsResponse, error) {
	out := new(ListAuditRecordsResponse)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.Audit/ListAuditRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditClient) CreateAuditRecord(ctx context.Context, in *CreateAuditRecordRequest, opts ...grpc.CallOption) (*AuditRecord, error) {
	out := new(AuditRecord)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.Audit/CreateAuditRecord", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *auditClient) PullAuditRecords(ctx context.Context, in *PullAuditRecordsRequest, opts ...grpc.CallOption) (Audit_PullAuditRecordsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Audit_serviceDesc.Streams[0], "/smartcore.api.device.traits.Audit/PullAuditRecords", opts...)
	if err != nil {
		return nil, err
	}
	x := &auditPullAuditRecordsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Audit_PullAuditRecordsClient interface {
	Recv() (*PullAuditRecordsResponse, error)
	grpc.ClientStream
}

type auditPullAuditRecordsClient struct {
	grpc.ClientStream
}

func (x *auditPullAuditRecordsClient) Recv() (*PullAuditRecordsResponse, error) {
	m := new(PullAuditRecordsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AuditServer is the server API for Audit service.
type AuditServer interface {
	// List the known audit records the device has
	ListAuditRecords(context.Context, *ListAuditRecordsRequest) (*ListAuditRecordsResponse, error)
	// Create a new audit record in this devices record list
	CreateAuditRecord(context.Context, *CreateAuditRecordRequest) (*AuditRecord, error)
	// subscribe to new audit records
	PullAuditRecords(*PullAuditRecordsRequest, Audit_PullAuditRecordsServer) error
}

// UnimplementedAuditServer can be embedded to have forward compatible implementations.
type UnimplementedAuditServer struct {
}

func (*UnimplementedAuditServer) ListAuditRecords(ctx context.Context, req *ListAuditRecordsRequest) (*ListAuditRecordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAuditRecords not implemented")
}
func (*UnimplementedAuditServer) CreateAuditRecord(ctx context.Context, req *CreateAuditRecordRequest) (*AuditRecord, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuditRecord not implemented")
}
func (*UnimplementedAuditServer) PullAuditRecords(req *PullAuditRecordsRequest, srv Audit_PullAuditRecordsServer) error {
	return status.Errorf(codes.Unimplemented, "method PullAuditRecords not implemented")
}

func RegisterAuditServer(s *grpc.Server, srv AuditServer) {
	s.RegisterService(&_Audit_serviceDesc, srv)
}

func _Audit_ListAuditRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAuditRecordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditServer).ListAuditRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.Audit/ListAuditRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditServer).ListAuditRecords(ctx, req.(*ListAuditRecordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audit_CreateAuditRecord_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuditRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuditServer).CreateAuditRecord(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.Audit/CreateAuditRecord",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuditServer).CreateAuditRecord(ctx, req.(*CreateAuditRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Audit_PullAuditRecords_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PullAuditRecordsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AuditServer).PullAuditRecords(m, &auditPullAuditRecordsServer{stream})
}

type Audit_PullAuditRecordsServer interface {
	Send(*PullAuditRecordsResponse) error
	grpc.ServerStream
}

type auditPullAuditRecordsServer struct {
	grpc.ServerStream
}

func (x *auditPullAuditRecordsServer) Send(m *PullAuditRecordsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Audit_serviceDesc = grpc.ServiceDesc{
	ServiceName: "smartcore.api.device.traits.Audit",
	HandlerType: (*AuditServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAuditRecords",
			Handler:    _Audit_ListAuditRecords_Handler,
		},
		{
			MethodName: "CreateAuditRecord",
			Handler:    _Audit_CreateAuditRecord_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PullAuditRecords",
			Handler:       _Audit_PullAuditRecords_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "device/traits/audit.proto",
}
