// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device/traits/range.proto

package traits

import (
	context "context"
	fmt "fmt"
	types "git.vanti.co.uk/smartcore/sc-api/go/types"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Trait.attributes relating to the value for the range
type RangeAttributes struct {
	ValueAttributes      *types.Int32Attributes `protobuf:"bytes,1,opt,name=value_attributes,json=valueAttributes,proto3" json:"value_attributes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *RangeAttributes) Reset()         { *m = RangeAttributes{} }
func (m *RangeAttributes) String() string { return proto.CompactTextString(m) }
func (*RangeAttributes) ProtoMessage()    {}
func (*RangeAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d37307f9d343333, []int{0}
}

func (m *RangeAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeAttributes.Unmarshal(m, b)
}
func (m *RangeAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeAttributes.Marshal(b, m, deterministic)
}
func (m *RangeAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeAttributes.Merge(m, src)
}
func (m *RangeAttributes) XXX_Size() int {
	return xxx_messageInfo_RangeAttributes.Size(m)
}
func (m *RangeAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_RangeAttributes proto.InternalMessageInfo

func (m *RangeAttributes) GetValueAttributes() *types.Int32Attributes {
	if m != nil {
		return m.ValueAttributes
	}
	return nil
}

// A request to update the value of a range
type UpdateRangeValueRequest struct {
	// The name of the device to update
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The new value for the range. Supply ramp to transition
	RangeValue *types.Int32Var `protobuf:"bytes,2,opt,name=range_value,json=rangeValue,proto3" json:"range_value,omitempty"`
	// if true, then the values in the range_value represent deltas from the current value and not absolute values
	Delta                bool     `protobuf:"varint,3,opt,name=delta,proto3" json:"delta,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRangeValueRequest) Reset()         { *m = UpdateRangeValueRequest{} }
func (m *UpdateRangeValueRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRangeValueRequest) ProtoMessage()    {}
func (*UpdateRangeValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d37307f9d343333, []int{1}
}

func (m *UpdateRangeValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRangeValueRequest.Unmarshal(m, b)
}
func (m *UpdateRangeValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRangeValueRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRangeValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRangeValueRequest.Merge(m, src)
}
func (m *UpdateRangeValueRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRangeValueRequest.Size(m)
}
func (m *UpdateRangeValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRangeValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRangeValueRequest proto.InternalMessageInfo

func (m *UpdateRangeValueRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRangeValueRequest) GetRangeValue() *types.Int32Var {
	if m != nil {
		return m.RangeValue
	}
	return nil
}

func (m *UpdateRangeValueRequest) GetDelta() bool {
	if m != nil {
		return m.Delta
	}
	return false
}

// A request to get the current value of a range
type GetRangeValueRequest struct {
	// The name of the device to get the value for
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRangeValueRequest) Reset()         { *m = GetRangeValueRequest{} }
func (m *GetRangeValueRequest) String() string { return proto.CompactTextString(m) }
func (*GetRangeValueRequest) ProtoMessage()    {}
func (*GetRangeValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d37307f9d343333, []int{2}
}

func (m *GetRangeValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRangeValueRequest.Unmarshal(m, b)
}
func (m *GetRangeValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRangeValueRequest.Marshal(b, m, deterministic)
}
func (m *GetRangeValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRangeValueRequest.Merge(m, src)
}
func (m *GetRangeValueRequest) XXX_Size() int {
	return xxx_messageInfo_GetRangeValueRequest.Size(m)
}
func (m *GetRangeValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRangeValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRangeValueRequest proto.InternalMessageInfo

func (m *GetRangeValueRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request to begin a subscription for range values
type PullRangeValueRequest struct {
	// The name of the device we want events from
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Indicate whether we want to be notified of values while ramping or not. The device may ignore this depending on
	// capabilities
	ExcludeRamping       bool     `protobuf:"varint,2,opt,name=exclude_ramping,json=excludeRamping,proto3" json:"exclude_ramping,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullRangeValueRequest) Reset()         { *m = PullRangeValueRequest{} }
func (m *PullRangeValueRequest) String() string { return proto.CompactTextString(m) }
func (*PullRangeValueRequest) ProtoMessage()    {}
func (*PullRangeValueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d37307f9d343333, []int{3}
}

func (m *PullRangeValueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullRangeValueRequest.Unmarshal(m, b)
}
func (m *PullRangeValueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullRangeValueRequest.Marshal(b, m, deterministic)
}
func (m *PullRangeValueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullRangeValueRequest.Merge(m, src)
}
func (m *PullRangeValueRequest) XXX_Size() int {
	return xxx_messageInfo_PullRangeValueRequest.Size(m)
}
func (m *PullRangeValueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullRangeValueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullRangeValueRequest proto.InternalMessageInfo

func (m *PullRangeValueRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PullRangeValueRequest) GetExcludeRamping() bool {
	if m != nil {
		return m.ExcludeRamping
	}
	return false
}

// A response as part of the stream of changes to the range value
type PullRangeValueResponse struct {
	// The list of changes
	Changes              []*RangeValueChange `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PullRangeValueResponse) Reset()         { *m = PullRangeValueResponse{} }
func (m *PullRangeValueResponse) String() string { return proto.CompactTextString(m) }
func (*PullRangeValueResponse) ProtoMessage()    {}
func (*PullRangeValueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d37307f9d343333, []int{4}
}

func (m *PullRangeValueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullRangeValueResponse.Unmarshal(m, b)
}
func (m *PullRangeValueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullRangeValueResponse.Marshal(b, m, deterministic)
}
func (m *PullRangeValueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullRangeValueResponse.Merge(m, src)
}
func (m *PullRangeValueResponse) XXX_Size() int {
	return xxx_messageInfo_PullRangeValueResponse.Size(m)
}
func (m *PullRangeValueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PullRangeValueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PullRangeValueResponse proto.InternalMessageInfo

func (m *PullRangeValueResponse) GetChanges() []*RangeValueChange {
	if m != nil {
		return m.Changes
	}
	return nil
}

// A change to a single devices range value
type RangeValueChange struct {
	// name for the device that issued the change
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// when the change occurred
	CreateTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The new value for the range
	RangeValue           *types.Int32Var `protobuf:"bytes,3,opt,name=range_value,json=rangeValue,proto3" json:"range_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RangeValueChange) Reset()         { *m = RangeValueChange{} }
func (m *RangeValueChange) String() string { return proto.CompactTextString(m) }
func (*RangeValueChange) ProtoMessage()    {}
func (*RangeValueChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d37307f9d343333, []int{5}
}

func (m *RangeValueChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RangeValueChange.Unmarshal(m, b)
}
func (m *RangeValueChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RangeValueChange.Marshal(b, m, deterministic)
}
func (m *RangeValueChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RangeValueChange.Merge(m, src)
}
func (m *RangeValueChange) XXX_Size() int {
	return xxx_messageInfo_RangeValueChange.Size(m)
}
func (m *RangeValueChange) XXX_DiscardUnknown() {
	xxx_messageInfo_RangeValueChange.DiscardUnknown(m)
}

var xxx_messageInfo_RangeValueChange proto.InternalMessageInfo

func (m *RangeValueChange) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RangeValueChange) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *RangeValueChange) GetRangeValue() *types.Int32Var {
	if m != nil {
		return m.RangeValue
	}
	return nil
}

func init() {
	proto.RegisterType((*RangeAttributes)(nil), "smartcore.api.device.traits.RangeAttributes")
	proto.RegisterType((*UpdateRangeValueRequest)(nil), "smartcore.api.device.traits.UpdateRangeValueRequest")
	proto.RegisterType((*GetRangeValueRequest)(nil), "smartcore.api.device.traits.GetRangeValueRequest")
	proto.RegisterType((*PullRangeValueRequest)(nil), "smartcore.api.device.traits.PullRangeValueRequest")
	proto.RegisterType((*PullRangeValueResponse)(nil), "smartcore.api.device.traits.PullRangeValueResponse")
	proto.RegisterType((*RangeValueChange)(nil), "smartcore.api.device.traits.RangeValueChange")
}

func init() { proto.RegisterFile("device/traits/range.proto", fileDescriptor_0d37307f9d343333) }

var fileDescriptor_0d37307f9d343333 = []byte{
	// 504 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0x5d, 0x6b, 0x13, 0x41,
	0x14, 0x65, 0x13, 0xab, 0xf5, 0x06, 0x9b, 0x30, 0x54, 0x8d, 0x5b, 0xa4, 0x65, 0x11, 0x0c, 0x42,
	0x67, 0xed, 0xc6, 0x37, 0x41, 0x48, 0x15, 0x8a, 0x4f, 0x86, 0x31, 0xf6, 0x41, 0x02, 0x61, 0x76,
	0xf7, 0xba, 0x0e, 0xee, 0xc7, 0x38, 0x3b, 0x1b, 0x14, 0x1f, 0xfd, 0x1f, 0xbe, 0xf8, 0xe6, 0x4f,
	0xf1, 0xc9, 0x9f, 0x24, 0x3b, 0xd3, 0x24, 0x26, 0xa4, 0x6b, 0xfb, 0xb6, 0x7b, 0xee, 0x3d, 0xe7,
	0xdc, 0x99, 0x7b, 0x18, 0x78, 0x10, 0xe3, 0x5c, 0x44, 0xe8, 0x6b, 0xc5, 0x85, 0x2e, 0x7d, 0xc5,
	0xf3, 0x04, 0xa9, 0x54, 0x85, 0x2e, 0xc8, 0x41, 0x99, 0x71, 0xa5, 0xa3, 0x42, 0x21, 0xe5, 0x52,
	0x50, 0xdb, 0x48, 0x6d, 0xa3, 0x7b, 0x98, 0x14, 0x45, 0x92, 0xa2, 0x6f, 0x5a, 0xc3, 0xea, 0x83,
	0xaf, 0x45, 0x86, 0xa5, 0xe6, 0x99, 0xb4, 0x6c, 0x97, 0xe8, 0xaf, 0x12, 0x4b, 0x3f, 0xaf, 0xb2,
	0x10, 0x95, 0xc5, 0xbc, 0x10, 0xba, 0xac, 0x36, 0x18, 0x69, 0xad, 0x44, 0x58, 0x69, 0x2c, 0xc9,
	0x1b, 0xe8, 0xcd, 0x79, 0x5a, 0xe1, 0x8c, 0x2f, 0xb1, 0xbe, 0x73, 0xe4, 0x0c, 0x3a, 0xc1, 0x23,
	0xba, 0xee, 0x6f, 0xf4, 0xe8, 0xeb, 0x5c, 0x0f, 0x83, 0x15, 0x9f, 0x75, 0x0d, 0x7b, 0x05, 0x78,
	0xdf, 0x1d, 0xb8, 0xff, 0x4e, 0xc6, 0x5c, 0xa3, 0xb1, 0x3a, 0xaf, 0xcb, 0x0c, 0x3f, 0x57, 0x58,
	0x6a, 0x42, 0xe0, 0x46, 0xce, 0x33, 0x34, 0x06, 0xb7, 0x99, 0xf9, 0x26, 0x2f, 0xa0, 0x63, 0x0e,
	0x3d, 0x33, 0x42, 0xfd, 0x96, 0xf1, 0x7e, 0x78, 0xb9, 0xf7, 0x39, 0x57, 0x0c, 0xd4, 0x52, 0x9a,
	0xec, 0xc3, 0x4e, 0x8c, 0xa9, 0xe6, 0xfd, 0xf6, 0x91, 0x33, 0xd8, 0x65, 0xf6, 0xc7, 0x7b, 0x02,
	0xfb, 0x67, 0xa8, 0xaf, 0x34, 0x81, 0x37, 0x81, 0xbb, 0xe3, 0x2a, 0x4d, 0xaf, 0x36, 0xee, 0x63,
	0xe8, 0xe2, 0x97, 0x28, 0xad, 0x62, 0x9c, 0x29, 0x9e, 0x49, 0x91, 0x27, 0x66, 0xe4, 0x5d, 0xb6,
	0x77, 0x01, 0x33, 0x8b, 0x7a, 0x1c, 0xee, 0x6d, 0xaa, 0x96, 0xb2, 0xc8, 0x4b, 0x24, 0x67, 0x70,
	0x2b, 0xfa, 0x58, 0xc3, 0xf5, 0x4d, 0xb7, 0x07, 0x9d, 0xe0, 0x98, 0x36, 0x6c, 0x9a, 0xae, 0x14,
	0x5e, 0x1a, 0x16, 0x5b, 0xb0, 0xbd, 0x9f, 0x0e, 0xf4, 0x36, 0xab, 0x5b, 0x87, 0x7e, 0x0e, 0x9d,
	0x48, 0x21, 0xd7, 0x38, 0xab, 0x53, 0x72, 0x71, 0xc7, 0x2e, 0xb5, 0x11, 0xa2, 0x8b, 0x08, 0xd1,
	0xc9, 0x22, 0x42, 0x0c, 0x6c, 0x7b, 0x0d, 0x6c, 0x2e, 0xa8, 0x7d, 0xcd, 0x05, 0x05, 0x7f, 0x5a,
	0xb0, 0x63, 0xa6, 0x24, 0x09, 0xf4, 0x36, 0x93, 0x41, 0x9e, 0x35, 0x9e, 0xfd, 0x92, 0x20, 0xb9,
	0xcd, 0xf6, 0x84, 0xc3, 0x9d, 0xb5, 0xed, 0x93, 0x93, 0x46, 0x97, 0x6d, 0x49, 0xf9, 0x9f, 0xc5,
	0x37, 0xd8, 0x5b, 0x5f, 0x2f, 0x09, 0x1a, 0x3d, 0xb6, 0x26, 0xcc, 0x1d, 0x5e, 0x8b, 0x63, 0xf3,
	0xf3, 0xd4, 0x39, 0xfd, 0xe1, 0xc0, 0x61, 0x8c, 0xf3, 0x26, 0xf2, 0x29, 0x18, 0xe6, 0xb8, 0xde,
	0xed, 0xd8, 0x79, 0x7f, 0x92, 0x08, 0x4d, 0xe7, 0x3c, 0xd7, 0x82, 0x46, 0x05, 0xad, 0x3e, 0xf9,
	0x4b, 0xaa, 0x5f, 0x46, 0xc7, 0x5c, 0x0a, 0x3f, 0x29, 0xfc, 0xb5, 0xa7, 0xe8, 0x57, 0xeb, 0xe0,
	0xed, 0x52, 0x7e, 0x24, 0x05, 0x7d, 0x65, 0xe5, 0x27, 0xa6, 0xfa, 0xfb, 0x9f, 0xea, 0x74, 0x24,
	0xc5, 0xd4, 0x56, 0xa7, 0xb6, 0x1a, 0xde, 0x34, 0x99, 0x1a, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0x6a, 0x22, 0xa7, 0x5f, 0xde, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RangeClient is the client API for Range service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RangeClient interface {
	// request that the range value be changes
	UpdateRangeValue(ctx context.Context, in *UpdateRangeValueRequest, opts ...grpc.CallOption) (*types.Int32Var, error)
	// get the current value of the range
	GetRangeValue(ctx context.Context, in *GetRangeValueRequest, opts ...grpc.CallOption) (*types.Int32Var, error)
	// request updates to changes in the range value
	PullRangeValue(ctx context.Context, in *PullRangeValueRequest, opts ...grpc.CallOption) (Range_PullRangeValueClient, error)
}

type rangeClient struct {
	cc *grpc.ClientConn
}

func NewRangeClient(cc *grpc.ClientConn) RangeClient {
	return &rangeClient{cc}
}

func (c *rangeClient) UpdateRangeValue(ctx context.Context, in *UpdateRangeValueRequest, opts ...grpc.CallOption) (*types.Int32Var, error) {
	out := new(types.Int32Var)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.Range/UpdateRangeValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rangeClient) GetRangeValue(ctx context.Context, in *GetRangeValueRequest, opts ...grpc.CallOption) (*types.Int32Var, error) {
	out := new(types.Int32Var)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.Range/GetRangeValue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rangeClient) PullRangeValue(ctx context.Context, in *PullRangeValueRequest, opts ...grpc.CallOption) (Range_PullRangeValueClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Range_serviceDesc.Streams[0], "/smartcore.api.device.traits.Range/PullRangeValue", opts...)
	if err != nil {
		return nil, err
	}
	x := &rangePullRangeValueClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Range_PullRangeValueClient interface {
	Recv() (*PullRangeValueResponse, error)
	grpc.ClientStream
}

type rangePullRangeValueClient struct {
	grpc.ClientStream
}

func (x *rangePullRangeValueClient) Recv() (*PullRangeValueResponse, error) {
	m := new(PullRangeValueResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RangeServer is the server API for Range service.
type RangeServer interface {
	// request that the range value be changes
	UpdateRangeValue(context.Context, *UpdateRangeValueRequest) (*types.Int32Var, error)
	// get the current value of the range
	GetRangeValue(context.Context, *GetRangeValueRequest) (*types.Int32Var, error)
	// request updates to changes in the range value
	PullRangeValue(*PullRangeValueRequest, Range_PullRangeValueServer) error
}

// UnimplementedRangeServer can be embedded to have forward compatible implementations.
type UnimplementedRangeServer struct {
}

func (*UnimplementedRangeServer) UpdateRangeValue(ctx context.Context, req *UpdateRangeValueRequest) (*types.Int32Var, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRangeValue not implemented")
}
func (*UnimplementedRangeServer) GetRangeValue(ctx context.Context, req *GetRangeValueRequest) (*types.Int32Var, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRangeValue not implemented")
}
func (*UnimplementedRangeServer) PullRangeValue(req *PullRangeValueRequest, srv Range_PullRangeValueServer) error {
	return status.Errorf(codes.Unimplemented, "method PullRangeValue not implemented")
}

func RegisterRangeServer(s *grpc.Server, srv RangeServer) {
	s.RegisterService(&_Range_serviceDesc, srv)
}

func _Range_UpdateRangeValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRangeValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RangeServer).UpdateRangeValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.Range/UpdateRangeValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RangeServer).UpdateRangeValue(ctx, req.(*UpdateRangeValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Range_GetRangeValue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRangeValueRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RangeServer).GetRangeValue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.Range/GetRangeValue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RangeServer).GetRangeValue(ctx, req.(*GetRangeValueRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Range_PullRangeValue_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PullRangeValueRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RangeServer).PullRangeValue(m, &rangePullRangeValueServer{stream})
}

type Range_PullRangeValueServer interface {
	Send(*PullRangeValueResponse) error
	grpc.ServerStream
}

type rangePullRangeValueServer struct {
	grpc.ServerStream
}

func (x *rangePullRangeValueServer) Send(m *PullRangeValueResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Range_serviceDesc = grpc.ServiceDesc{
	ServiceName: "smartcore.api.device.traits.Range",
	HandlerType: (*RangeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UpdateRangeValue",
			Handler:    _Range_UpdateRangeValue_Handler,
		},
		{
			MethodName: "GetRangeValue",
			Handler:    _Range_GetRangeValue_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PullRangeValue",
			Handler:       _Range_PullRangeValue_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "device/traits/range.proto",
}
