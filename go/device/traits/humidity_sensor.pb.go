// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device/traits/humidity_sensor.proto

package traits

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Trait.attribute for humidity sensors
type HumiditySensorAttributes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HumiditySensorAttributes) Reset()         { *m = HumiditySensorAttributes{} }
func (m *HumiditySensorAttributes) String() string { return proto.CompactTextString(m) }
func (*HumiditySensorAttributes) ProtoMessage()    {}
func (*HumiditySensorAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ac04785c13fb12b, []int{0}
}

func (m *HumiditySensorAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HumiditySensorAttributes.Unmarshal(m, b)
}
func (m *HumiditySensorAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HumiditySensorAttributes.Marshal(b, m, deterministic)
}
func (m *HumiditySensorAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HumiditySensorAttributes.Merge(m, src)
}
func (m *HumiditySensorAttributes) XXX_Size() int {
	return xxx_messageInfo_HumiditySensorAttributes.Size(m)
}
func (m *HumiditySensorAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_HumiditySensorAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_HumiditySensorAttributes proto.InternalMessageInfo

// represents humidity for a space
type Humidity struct {
	// A percentage: 0 to 100, the relative humidity for the sensor
	RelativeHumidity     float64  `protobuf:"fixed64,1,opt,name=relative_humidity,json=relativeHumidity,proto3" json:"relative_humidity,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Humidity) Reset()         { *m = Humidity{} }
func (m *Humidity) String() string { return proto.CompactTextString(m) }
func (*Humidity) ProtoMessage()    {}
func (*Humidity) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ac04785c13fb12b, []int{1}
}

func (m *Humidity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Humidity.Unmarshal(m, b)
}
func (m *Humidity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Humidity.Marshal(b, m, deterministic)
}
func (m *Humidity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Humidity.Merge(m, src)
}
func (m *Humidity) XXX_Size() int {
	return xxx_messageInfo_Humidity.Size(m)
}
func (m *Humidity) XXX_DiscardUnknown() {
	xxx_messageInfo_Humidity.DiscardUnknown(m)
}

var xxx_messageInfo_Humidity proto.InternalMessageInfo

func (m *Humidity) GetRelativeHumidity() float64 {
	if m != nil {
		return m.RelativeHumidity
	}
	return 0
}

type GetHumidityRequest struct {
	// the name of the device to get the state for
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHumidityRequest) Reset()         { *m = GetHumidityRequest{} }
func (m *GetHumidityRequest) String() string { return proto.CompactTextString(m) }
func (*GetHumidityRequest) ProtoMessage()    {}
func (*GetHumidityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ac04785c13fb12b, []int{2}
}

func (m *GetHumidityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHumidityRequest.Unmarshal(m, b)
}
func (m *GetHumidityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHumidityRequest.Marshal(b, m, deterministic)
}
func (m *GetHumidityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHumidityRequest.Merge(m, src)
}
func (m *GetHumidityRequest) XXX_Size() int {
	return xxx_messageInfo_GetHumidityRequest.Size(m)
}
func (m *GetHumidityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHumidityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHumidityRequest proto.InternalMessageInfo

func (m *GetHumidityRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type PullHumidityRequest struct {
	// the name of the device to get the state for
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullHumidityRequest) Reset()         { *m = PullHumidityRequest{} }
func (m *PullHumidityRequest) String() string { return proto.CompactTextString(m) }
func (*PullHumidityRequest) ProtoMessage()    {}
func (*PullHumidityRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ac04785c13fb12b, []int{3}
}

func (m *PullHumidityRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullHumidityRequest.Unmarshal(m, b)
}
func (m *PullHumidityRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullHumidityRequest.Marshal(b, m, deterministic)
}
func (m *PullHumidityRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullHumidityRequest.Merge(m, src)
}
func (m *PullHumidityRequest) XXX_Size() int {
	return xxx_messageInfo_PullHumidityRequest.Size(m)
}
func (m *PullHumidityRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullHumidityRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullHumidityRequest proto.InternalMessageInfo

func (m *PullHumidityRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// response containing humidity changes
type PullHumidityResponse struct {
	// the list of changes that have occurred since the last event
	Changes              []*HumidityChange `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PullHumidityResponse) Reset()         { *m = PullHumidityResponse{} }
func (m *PullHumidityResponse) String() string { return proto.CompactTextString(m) }
func (*PullHumidityResponse) ProtoMessage()    {}
func (*PullHumidityResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ac04785c13fb12b, []int{4}
}

func (m *PullHumidityResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullHumidityResponse.Unmarshal(m, b)
}
func (m *PullHumidityResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullHumidityResponse.Marshal(b, m, deterministic)
}
func (m *PullHumidityResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullHumidityResponse.Merge(m, src)
}
func (m *PullHumidityResponse) XXX_Size() int {
	return xxx_messageInfo_PullHumidityResponse.Size(m)
}
func (m *PullHumidityResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PullHumidityResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PullHumidityResponse proto.InternalMessageInfo

func (m *PullHumidityResponse) GetChanges() []*HumidityChange {
	if m != nil {
		return m.Changes
	}
	return nil
}

// A change to the humidity reading of the device
type HumidityChange struct {
	// name for the device that issued the change
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// when the change occurred
	CreateTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// the new state for the device
	Humidity             *Humidity `protobuf:"bytes,3,opt,name=humidity,proto3" json:"humidity,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *HumidityChange) Reset()         { *m = HumidityChange{} }
func (m *HumidityChange) String() string { return proto.CompactTextString(m) }
func (*HumidityChange) ProtoMessage()    {}
func (*HumidityChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_7ac04785c13fb12b, []int{5}
}

func (m *HumidityChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HumidityChange.Unmarshal(m, b)
}
func (m *HumidityChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HumidityChange.Marshal(b, m, deterministic)
}
func (m *HumidityChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HumidityChange.Merge(m, src)
}
func (m *HumidityChange) XXX_Size() int {
	return xxx_messageInfo_HumidityChange.Size(m)
}
func (m *HumidityChange) XXX_DiscardUnknown() {
	xxx_messageInfo_HumidityChange.DiscardUnknown(m)
}

var xxx_messageInfo_HumidityChange proto.InternalMessageInfo

func (m *HumidityChange) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HumidityChange) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

func (m *HumidityChange) GetHumidity() *Humidity {
	if m != nil {
		return m.Humidity
	}
	return nil
}

func init() {
	proto.RegisterType((*HumiditySensorAttributes)(nil), "smartcore.api.device.traits.HumiditySensorAttributes")
	proto.RegisterType((*Humidity)(nil), "smartcore.api.device.traits.Humidity")
	proto.RegisterType((*GetHumidityRequest)(nil), "smartcore.api.device.traits.GetHumidityRequest")
	proto.RegisterType((*PullHumidityRequest)(nil), "smartcore.api.device.traits.PullHumidityRequest")
	proto.RegisterType((*PullHumidityResponse)(nil), "smartcore.api.device.traits.PullHumidityResponse")
	proto.RegisterType((*HumidityChange)(nil), "smartcore.api.device.traits.HumidityChange")
}

func init() {
	proto.RegisterFile("device/traits/humidity_sensor.proto", fileDescriptor_7ac04785c13fb12b)
}

var fileDescriptor_7ac04785c13fb12b = []byte{
	// 418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xd1, 0x8a, 0xd3, 0x40,
	0x14, 0x86, 0x99, 0x5d, 0xd1, 0xf5, 0x54, 0x44, 0x67, 0xbd, 0x28, 0xd9, 0x8b, 0x2d, 0x11, 0xa1,
	0xb2, 0x38, 0xb3, 0x5b, 0x2f, 0xbc, 0xf0, 0xaa, 0xab, 0xa2, 0x97, 0x25, 0xbb, 0x57, 0x52, 0x29,
	0xd3, 0xf4, 0x98, 0x1d, 0x6c, 0x32, 0x71, 0xe6, 0xa4, 0xe0, 0xfb, 0x08, 0x82, 0x8f, 0xe2, 0xc3,
	0xf8, 0x0c, 0xd2, 0x19, 0xa7, 0x24, 0xb8, 0x84, 0x7a, 0x97, 0xe4, 0x3f, 0xdf, 0x39, 0x3f, 0xff,
	0x4f, 0xe0, 0xe9, 0x0a, 0x37, 0x3a, 0x47, 0x49, 0x56, 0x69, 0x72, 0xf2, 0xa6, 0x29, 0xf5, 0x4a,
	0xd3, 0xb7, 0x85, 0xc3, 0xca, 0x19, 0x2b, 0x6a, 0x6b, 0xc8, 0xf0, 0x13, 0x57, 0x2a, 0x4b, 0xb9,
	0xb1, 0x28, 0x54, 0xad, 0x45, 0x40, 0x44, 0x40, 0x92, 0xd3, 0xc2, 0x98, 0x62, 0x8d, 0xd2, 0x8f,
	0x2e, 0x9b, 0xcf, 0x92, 0x74, 0x89, 0x8e, 0x54, 0x59, 0x07, 0x3a, 0x4d, 0x60, 0xf8, 0xe1, 0xef,
	0xda, 0x2b, 0xbf, 0x75, 0x4a, 0x64, 0xf5, 0xb2, 0x21, 0x74, 0xe9, 0x2b, 0x38, 0x8a, 0x1a, 0x3f,
	0x83, 0xc7, 0x16, 0xd7, 0x8a, 0xf4, 0x06, 0x17, 0xd1, 0xc7, 0x90, 0x8d, 0xd8, 0x98, 0x65, 0x8f,
	0xa2, 0x10, 0x87, 0xd3, 0x31, 0xf0, 0xf7, 0x48, 0xf1, 0x35, 0xc3, 0xaf, 0x0d, 0x3a, 0xe2, 0x1c,
	0xee, 0x54, 0xaa, 0x44, 0x4f, 0xdd, 0xcf, 0xfc, 0x73, 0xfa, 0x1c, 0x8e, 0x67, 0xcd, 0x7a, 0xbd,
	0xcf, 0xe8, 0x27, 0x78, 0xd2, 0x1d, 0x75, 0xb5, 0xa9, 0x1c, 0xf2, 0x77, 0x70, 0x2f, 0xbf, 0x51,
	0x55, 0x81, 0x6e, 0xc8, 0x46, 0x87, 0xe3, 0xc1, 0xe4, 0x4c, 0xf4, 0x24, 0x22, 0x22, 0xff, 0xc6,
	0x33, 0x59, 0x64, 0xd3, 0xef, 0x0c, 0x1e, 0x76, 0xb5, 0xdb, 0x5c, 0xf0, 0xd7, 0x30, 0xc8, 0x2d,
	0x2a, 0xc2, 0xc5, 0x36, 0xc9, 0xe1, 0xc1, 0x88, 0x8d, 0x07, 0x93, 0x44, 0x84, 0x98, 0x45, 0x8c,
	0x59, 0x5c, 0xc7, 0x98, 0x33, 0x08, 0xe3, 0xdb, 0x0f, 0x7c, 0x0a, 0x47, 0xbb, 0xec, 0x0e, 0x3d,
	0xf9, 0x6c, 0x2f, 0xaf, 0xd9, 0x0e, 0x9b, 0xfc, 0x6e, 0xd9, 0x0c, 0x85, 0x71, 0x84, 0x41, 0x2b,
	0x6d, 0x2e, 0x7b, 0x57, 0xfe, 0xdb, 0x4b, 0xb2, 0x9f, 0x07, 0xde, 0xc0, 0x83, 0x76, 0xfe, 0xfc,
	0xbc, 0x17, 0xbb, 0xa5, 0xd5, 0xe4, 0xe2, 0x3f, 0x88, 0x50, 0xee, 0x39, 0xbb, 0xfc, 0xc1, 0xe0,
	0x74, 0x85, 0x9b, 0x3e, 0xf4, 0xf2, 0xb8, 0x9b, 0xc8, 0x6c, 0xdb, 0xc2, 0x8c, 0x7d, 0xbc, 0x28,
	0x34, 0x89, 0x8d, 0xaa, 0x48, 0x8b, 0xdc, 0x88, 0xe6, 0x8b, 0xdc, 0xed, 0x90, 0x2e, 0x7f, 0xa1,
	0x6a, 0x2d, 0x0b, 0x23, 0x3b, 0xbf, 0xd8, 0xcf, 0x83, 0x93, 0xab, 0xdd, 0x9d, 0x69, 0xad, 0xc5,
	0xdb, 0x70, 0xe7, 0xda, 0xab, 0xbf, 0x5a, 0xea, 0x7c, 0x5a, 0xeb, 0x79, 0x50, 0xe7, 0x41, 0x5d,
	0xde, 0xf5, 0xed, 0xbf, 0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0x31, 0x58, 0x38, 0x21, 0xb6, 0x03,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HumiditySensorClient is the client API for HumiditySensor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HumiditySensorClient interface {
	// Get the current humidity state for the device.
	GetHumidity(ctx context.Context, in *GetHumidityRequest, opts ...grpc.CallOption) (*Humidity, error)
	// subscribe to changes in the humidity state for the device.
	PullHumidity(ctx context.Context, in *PullHumidityRequest, opts ...grpc.CallOption) (HumiditySensor_PullHumidityClient, error)
}

type humiditySensorClient struct {
	cc *grpc.ClientConn
}

func NewHumiditySensorClient(cc *grpc.ClientConn) HumiditySensorClient {
	return &humiditySensorClient{cc}
}

func (c *humiditySensorClient) GetHumidity(ctx context.Context, in *GetHumidityRequest, opts ...grpc.CallOption) (*Humidity, error) {
	out := new(Humidity)
	err := c.cc.Invoke(ctx, "/smartcore.api.device.traits.HumiditySensor/GetHumidity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *humiditySensorClient) PullHumidity(ctx context.Context, in *PullHumidityRequest, opts ...grpc.CallOption) (HumiditySensor_PullHumidityClient, error) {
	stream, err := c.cc.NewStream(ctx, &_HumiditySensor_serviceDesc.Streams[0], "/smartcore.api.device.traits.HumiditySensor/PullHumidity", opts...)
	if err != nil {
		return nil, err
	}
	x := &humiditySensorPullHumidityClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type HumiditySensor_PullHumidityClient interface {
	Recv() (*PullHumidityResponse, error)
	grpc.ClientStream
}

type humiditySensorPullHumidityClient struct {
	grpc.ClientStream
}

func (x *humiditySensorPullHumidityClient) Recv() (*PullHumidityResponse, error) {
	m := new(PullHumidityResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// HumiditySensorServer is the server API for HumiditySensor service.
type HumiditySensorServer interface {
	// Get the current humidity state for the device.
	GetHumidity(context.Context, *GetHumidityRequest) (*Humidity, error)
	// subscribe to changes in the humidity state for the device.
	PullHumidity(*PullHumidityRequest, HumiditySensor_PullHumidityServer) error
}

// UnimplementedHumiditySensorServer can be embedded to have forward compatible implementations.
type UnimplementedHumiditySensorServer struct {
}

func (*UnimplementedHumiditySensorServer) GetHumidity(ctx context.Context, req *GetHumidityRequest) (*Humidity, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHumidity not implemented")
}
func (*UnimplementedHumiditySensorServer) PullHumidity(req *PullHumidityRequest, srv HumiditySensor_PullHumidityServer) error {
	return status.Errorf(codes.Unimplemented, "method PullHumidity not implemented")
}

func RegisterHumiditySensorServer(s *grpc.Server, srv HumiditySensorServer) {
	s.RegisterService(&_HumiditySensor_serviceDesc, srv)
}

func _HumiditySensor_GetHumidity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHumidityRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HumiditySensorServer).GetHumidity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/smartcore.api.device.traits.HumiditySensor/GetHumidity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HumiditySensorServer).GetHumidity(ctx, req.(*GetHumidityRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HumiditySensor_PullHumidity_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PullHumidityRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(HumiditySensorServer).PullHumidity(m, &humiditySensorPullHumidityServer{stream})
}

type HumiditySensor_PullHumidityServer interface {
	Send(*PullHumidityResponse) error
	grpc.ServerStream
}

type humiditySensorPullHumidityServer struct {
	grpc.ServerStream
}

func (x *humiditySensorPullHumidityServer) Send(m *PullHumidityResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _HumiditySensor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "smartcore.api.device.traits.HumiditySensor",
	HandlerType: (*HumiditySensorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHumidity",
			Handler:    _HumiditySensor_GetHumidity_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PullHumidity",
			Handler:       _HumiditySensor_PullHumidity_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "device/traits/humidity_sensor.proto",
}
