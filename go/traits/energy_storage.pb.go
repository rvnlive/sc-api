// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: traits/energy_storage.proto

package traits

import (
	types "github.com/smart-core-os/sc-api/go/types"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Threshold defines preset descriptive quantities for the energy level of the device.
// Numeric values will be preferred if provided.
type EnergyLevel_Threshold int32

const (
	EnergyLevel_THRESHOLD_UNKNOWN EnergyLevel_Threshold = 0
	EnergyLevel_CRITICALLY_LOW    EnergyLevel_Threshold = 1
	EnergyLevel_LOW               EnergyLevel_Threshold = 2
	EnergyLevel_MEDIUM            EnergyLevel_Threshold = 3
	EnergyLevel_HIGH              EnergyLevel_Threshold = 4
	EnergyLevel_FULL              EnergyLevel_Threshold = 6
	EnergyLevel_CRITICALLY_HIGH   EnergyLevel_Threshold = 7
)

// Enum value maps for EnergyLevel_Threshold.
var (
	EnergyLevel_Threshold_name = map[int32]string{
		0: "THRESHOLD_UNKNOWN",
		1: "CRITICALLY_LOW",
		2: "LOW",
		3: "MEDIUM",
		4: "HIGH",
		6: "FULL",
		7: "CRITICALLY_HIGH",
	}
	EnergyLevel_Threshold_value = map[string]int32{
		"THRESHOLD_UNKNOWN": 0,
		"CRITICALLY_LOW":    1,
		"LOW":               2,
		"MEDIUM":            3,
		"HIGH":              4,
		"FULL":              6,
		"CRITICALLY_HIGH":   7,
	}
)

func (x EnergyLevel_Threshold) Enum() *EnergyLevel_Threshold {
	p := new(EnergyLevel_Threshold)
	*p = x
	return p
}

func (x EnergyLevel_Threshold) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnergyLevel_Threshold) Descriptor() protoreflect.EnumDescriptor {
	return file_traits_energy_storage_proto_enumTypes[0].Descriptor()
}

func (EnergyLevel_Threshold) Type() protoreflect.EnumType {
	return &file_traits_energy_storage_proto_enumTypes[0]
}

func (x EnergyLevel_Threshold) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnergyLevel_Threshold.Descriptor instead.
func (EnergyLevel_Threshold) EnumDescriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{2, 0}
}

// EnergyLevelSupport describes the capabilities of devices implementing this trait.
type EnergyLevelSupport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// How a named device supports read/write/pull apis
	ResourceSupport *types.ResourceSupport `protobuf:"bytes,1,opt,name=resource_support,json=resourceSupport,proto3" json:"resource_support,omitempty"`
}

func (x *EnergyLevelSupport) Reset() {
	*x = EnergyLevelSupport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyLevelSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyLevelSupport) ProtoMessage() {}

func (x *EnergyLevelSupport) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyLevelSupport.ProtoReflect.Descriptor instead.
func (*EnergyLevelSupport) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{0}
}

func (x *EnergyLevelSupport) GetResourceSupport() *types.ResourceSupport {
	if x != nil {
		return x.ResourceSupport
	}
	return nil
}

// ChargingStatusSupport describes the capabilities of devices implementing this trait.
type ChargingStatusSupport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// How a named device supports read/write/pull apis
	ResourceSupport *types.ResourceSupport `protobuf:"bytes,1,opt,name=resource_support,json=resourceSupport,proto3" json:"resource_support,omitempty"`
}

func (x *ChargingStatusSupport) Reset() {
	*x = ChargingStatusSupport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargingStatusSupport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargingStatusSupport) ProtoMessage() {}

func (x *ChargingStatusSupport) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargingStatusSupport.ProtoReflect.Descriptor instead.
func (*ChargingStatusSupport) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{1}
}

func (x *ChargingStatusSupport) GetResourceSupport() *types.ResourceSupport {
	if x != nil {
		return x.ResourceSupport
	}
	return nil
}

// EnergyLevel describes properties related to the current and potential charge levels of the device.
type EnergyLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Threshold defines preset descriptive quantities for the energy level of the device.
	// Numeric values will be preferred if provided.
	DescriptiveThreshold EnergyLevel_Threshold `protobuf:"varint,1,opt,name=descriptive_threshold,json=descriptiveThreshold,proto3,enum=smartcore.traits.EnergyLevel_Threshold" json:"descriptive_threshold,omitempty"`
	// Remaining describes different unit quantities for how much energy is stored or available.
	Remaining *EnergyLevel_Remaining `protobuf:"bytes,2,opt,name=remaining,proto3" json:"remaining,omitempty"`
	// UntilFull describes how much is needed until the device is full.
	UntilFull *EnergyLevel_UntilFull `protobuf:"bytes,3,opt,name=until_full,json=untilFull,proto3" json:"until_full,omitempty"`
}

func (x *EnergyLevel) Reset() {
	*x = EnergyLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyLevel) ProtoMessage() {}

func (x *EnergyLevel) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyLevel.ProtoReflect.Descriptor instead.
func (*EnergyLevel) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{2}
}

func (x *EnergyLevel) GetDescriptiveThreshold() EnergyLevel_Threshold {
	if x != nil {
		return x.DescriptiveThreshold
	}
	return EnergyLevel_THRESHOLD_UNKNOWN
}

func (x *EnergyLevel) GetRemaining() *EnergyLevel_Remaining {
	if x != nil {
		return x.Remaining
	}
	return nil
}

func (x *EnergyLevel) GetUntilFull() *EnergyLevel_UntilFull {
	if x != nil {
		return x.UntilFull
	}
	return nil
}

// ChargingStatus describes whether a device is being charged or not.
type ChargingStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Is the device actively charging.
	Charging bool `protobuf:"varint,1,opt,name=charging,proto3" json:"charging,omitempty"`
	// Is the device plugged in.
	PluggedIn bool `protobuf:"varint,2,opt,name=plugged_in,json=pluggedIn,proto3" json:"plugged_in,omitempty"`
}

func (x *ChargingStatus) Reset() {
	*x = ChargingStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargingStatus) ProtoMessage() {}

func (x *ChargingStatus) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargingStatus.ProtoReflect.Descriptor instead.
func (*ChargingStatus) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{3}
}

func (x *ChargingStatus) GetCharging() bool {
	if x != nil {
		return x.Charging
	}
	return false
}

func (x *ChargingStatus) GetPluggedIn() bool {
	if x != nil {
		return x.PluggedIn
	}
	return false
}

type GetEnergyLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the device to fetch the state for
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Fields to fetch relative to the EnergyLevel type
	Fields *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *GetEnergyLevelRequest) Reset() {
	*x = GetEnergyLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEnergyLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEnergyLevelRequest) ProtoMessage() {}

func (x *GetEnergyLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEnergyLevelRequest.ProtoReflect.Descriptor instead.
func (*GetEnergyLevelRequest) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{4}
}

func (x *GetEnergyLevelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetEnergyLevelRequest) GetFields() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Fields
	}
	return nil
}

type PullEnergyLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the device to fetch the state for
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Fields to fetch relative to the EnergyLevel type
	Fields *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *PullEnergyLevelRequest) Reset() {
	*x = PullEnergyLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullEnergyLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullEnergyLevelRequest) ProtoMessage() {}

func (x *PullEnergyLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullEnergyLevelRequest.ProtoReflect.Descriptor instead.
func (*PullEnergyLevelRequest) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{5}
}

func (x *PullEnergyLevelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullEnergyLevelRequest) GetFields() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Fields
	}
	return nil
}

type PullEnergyLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Changes since the last message
	Changes []*PullEnergyLevelResponse_Change `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *PullEnergyLevelResponse) Reset() {
	*x = PullEnergyLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullEnergyLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullEnergyLevelResponse) ProtoMessage() {}

func (x *PullEnergyLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullEnergyLevelResponse.ProtoReflect.Descriptor instead.
func (*PullEnergyLevelResponse) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{6}
}

func (x *PullEnergyLevelResponse) GetChanges() []*PullEnergyLevelResponse_Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type GetChargingStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the device to fetch the state for
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Fields to fetch relative to the ChargingStatus type
	Fields *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *GetChargingStatusRequest) Reset() {
	*x = GetChargingStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChargingStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChargingStatusRequest) ProtoMessage() {}

func (x *GetChargingStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChargingStatusRequest.ProtoReflect.Descriptor instead.
func (*GetChargingStatusRequest) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{7}
}

func (x *GetChargingStatusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetChargingStatusRequest) GetFields() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Fields
	}
	return nil
}

type UpdateChargingStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the device to update the state for
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The updated charging status
	ChargingStatus *ChargingStatus `protobuf:"bytes,2,opt,name=charging_status,json=chargingStatus,proto3" json:"charging_status,omitempty"`
	// The fields we intend to update relative to the ChargingStatus type.
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,3,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateChargingStatusRequest) Reset() {
	*x = UpdateChargingStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChargingStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChargingStatusRequest) ProtoMessage() {}

func (x *UpdateChargingStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChargingStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateChargingStatusRequest) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateChargingStatusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateChargingStatusRequest) GetChargingStatus() *ChargingStatus {
	if x != nil {
		return x.ChargingStatus
	}
	return nil
}

func (x *UpdateChargingStatusRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

type PullChargingStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the device to fetch the state for
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Fields to fetch relative to the ChargingStatus type
	Fields *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
}

func (x *PullChargingStatusRequest) Reset() {
	*x = PullChargingStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullChargingStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullChargingStatusRequest) ProtoMessage() {}

func (x *PullChargingStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullChargingStatusRequest.ProtoReflect.Descriptor instead.
func (*PullChargingStatusRequest) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{9}
}

func (x *PullChargingStatusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullChargingStatusRequest) GetFields() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.Fields
	}
	return nil
}

type PullChargingStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Changes since the last message
	Changes []*PullChargingStatusResponse_Change `protobuf:"bytes,1,rep,name=changes,proto3" json:"changes,omitempty"`
}

func (x *PullChargingStatusResponse) Reset() {
	*x = PullChargingStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullChargingStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullChargingStatusResponse) ProtoMessage() {}

func (x *PullChargingStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullChargingStatusResponse.ProtoReflect.Descriptor instead.
func (*PullChargingStatusResponse) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{10}
}

func (x *PullChargingStatusResponse) GetChanges() []*PullChargingStatusResponse_Change {
	if x != nil {
		return x.Changes
	}
	return nil
}

type DescribeEnergyLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the device
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DescribeEnergyLevelRequest) Reset() {
	*x = DescribeEnergyLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeEnergyLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeEnergyLevelRequest) ProtoMessage() {}

func (x *DescribeEnergyLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeEnergyLevelRequest.ProtoReflect.Descriptor instead.
func (*DescribeEnergyLevelRequest) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{11}
}

func (x *DescribeEnergyLevelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DescribeChargingStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the device
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DescribeChargingStatusRequest) Reset() {
	*x = DescribeChargingStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DescribeChargingStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DescribeChargingStatusRequest) ProtoMessage() {}

func (x *DescribeChargingStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DescribeChargingStatusRequest.ProtoReflect.Descriptor instead.
func (*DescribeChargingStatusRequest) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{12}
}

func (x *DescribeChargingStatusRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Remaining describes different unit quantities for how much energy is stored or available.
type EnergyLevel_Remaining struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       *durationpb.Duration `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	DistanceKm float32              `protobuf:"fixed32,2,opt,name=distance_km,json=distanceKm,proto3" json:"distance_km,omitempty"`
	Percentage float32              `protobuf:"fixed32,3,opt,name=percentage,proto3" json:"percentage,omitempty"` // [0, 100]
	EnergyKwh  float32              `protobuf:"fixed32,4,opt,name=energy_kwh,json=energyKwh,proto3" json:"energy_kwh,omitempty"`
}

func (x *EnergyLevel_Remaining) Reset() {
	*x = EnergyLevel_Remaining{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyLevel_Remaining) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyLevel_Remaining) ProtoMessage() {}

func (x *EnergyLevel_Remaining) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyLevel_Remaining.ProtoReflect.Descriptor instead.
func (*EnergyLevel_Remaining) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{2, 0}
}

func (x *EnergyLevel_Remaining) GetTime() *durationpb.Duration {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *EnergyLevel_Remaining) GetDistanceKm() float32 {
	if x != nil {
		return x.DistanceKm
	}
	return 0
}

func (x *EnergyLevel_Remaining) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *EnergyLevel_Remaining) GetEnergyKwh() float32 {
	if x != nil {
		return x.EnergyKwh
	}
	return 0
}

// UntilFull describes how much is needed until the device is full.
type EnergyLevel_UntilFull struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       *durationpb.Duration `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	DistanceKm float32              `protobuf:"fixed32,2,opt,name=distance_km,json=distanceKm,proto3" json:"distance_km,omitempty"` // you know, just in case
	Percentage float32              `protobuf:"fixed32,3,opt,name=percentage,proto3" json:"percentage,omitempty"`                   // [0, 100]
	EnergyKwh  float32              `protobuf:"fixed32,4,opt,name=energy_kwh,json=energyKwh,proto3" json:"energy_kwh,omitempty"`
}

func (x *EnergyLevel_UntilFull) Reset() {
	*x = EnergyLevel_UntilFull{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnergyLevel_UntilFull) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnergyLevel_UntilFull) ProtoMessage() {}

func (x *EnergyLevel_UntilFull) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnergyLevel_UntilFull.ProtoReflect.Descriptor instead.
func (*EnergyLevel_UntilFull) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{2, 1}
}

func (x *EnergyLevel_UntilFull) GetTime() *durationpb.Duration {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *EnergyLevel_UntilFull) GetDistanceKm() float32 {
	if x != nil {
		return x.DistanceKm
	}
	return 0
}

func (x *EnergyLevel_UntilFull) GetPercentage() float32 {
	if x != nil {
		return x.Percentage
	}
	return 0
}

func (x *EnergyLevel_UntilFull) GetEnergyKwh() float32 {
	if x != nil {
		return x.EnergyKwh
	}
	return 0
}

type PullEnergyLevelResponse_Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name for the device that issued the change
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// when the change occurred
	ChangeTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=change_time,json=changeTime,proto3" json:"change_time,omitempty"`
	// The new value for the energy level
	EnergyLevel *EnergyLevel `protobuf:"bytes,3,opt,name=energy_level,json=energyLevel,proto3" json:"energy_level,omitempty"`
}

func (x *PullEnergyLevelResponse_Change) Reset() {
	*x = PullEnergyLevelResponse_Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullEnergyLevelResponse_Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullEnergyLevelResponse_Change) ProtoMessage() {}

func (x *PullEnergyLevelResponse_Change) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullEnergyLevelResponse_Change.ProtoReflect.Descriptor instead.
func (*PullEnergyLevelResponse_Change) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{6, 0}
}

func (x *PullEnergyLevelResponse_Change) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullEnergyLevelResponse_Change) GetChangeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangeTime
	}
	return nil
}

func (x *PullEnergyLevelResponse_Change) GetEnergyLevel() *EnergyLevel {
	if x != nil {
		return x.EnergyLevel
	}
	return nil
}

type PullChargingStatusResponse_Change struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name for the device that issued the change
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// when the change occurred
	ChangeTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=change_time,json=changeTime,proto3" json:"change_time,omitempty"`
	// The new value for the charging status
	ChargingStatus *ChargingStatus `protobuf:"bytes,3,opt,name=charging_status,json=chargingStatus,proto3" json:"charging_status,omitempty"`
}

func (x *PullChargingStatusResponse_Change) Reset() {
	*x = PullChargingStatusResponse_Change{}
	if protoimpl.UnsafeEnabled {
		mi := &file_traits_energy_storage_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullChargingStatusResponse_Change) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullChargingStatusResponse_Change) ProtoMessage() {}

func (x *PullChargingStatusResponse_Change) ProtoReflect() protoreflect.Message {
	mi := &file_traits_energy_storage_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullChargingStatusResponse_Change.ProtoReflect.Descriptor instead.
func (*PullChargingStatusResponse_Change) Descriptor() ([]byte, []int) {
	return file_traits_energy_storage_proto_rawDescGZIP(), []int{10, 0}
}

func (x *PullChargingStatusResponse_Change) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PullChargingStatusResponse_Change) GetChangeTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ChangeTime
	}
	return nil
}

func (x *PullChargingStatusResponse_Change) GetChargingStatus() *ChargingStatus {
	if x != nil {
		return x.ChargingStatus
	}
	return nil
}

var File_traits_energy_storage_proto protoreflect.FileDescriptor

var file_traits_energy_storage_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x73,
	0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x10, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x61, 0x0a, 0x12, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x4b, 0x0a, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x64, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x72, 0x67,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x4b, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6d, 0x61,
	0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xaa, 0x05,
	0x0a, 0x0b, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x5c, 0x0a,
	0x15, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x73,
	0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x52, 0x14, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x76, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x45, 0x0a, 0x09, 0x72,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74,
	0x73, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x52, 0x65,
	0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69,
	0x6e, 0x67, 0x12, 0x46, 0x0a, 0x0a, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x5f, 0x66, 0x75, 0x6c, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x2e, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x46, 0x75, 0x6c, 0x6c, 0x52,
	0x09, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x46, 0x75, 0x6c, 0x6c, 0x1a, 0x9a, 0x01, 0x0a, 0x09, 0x52,
	0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x6b, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x64, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4b, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x70, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x65, 0x72,
	0x67, 0x79, 0x5f, 0x6b, 0x77, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x65, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x4b, 0x77, 0x68, 0x1a, 0x9a, 0x01, 0x0a, 0x09, 0x55, 0x6e, 0x74, 0x69,
	0x6c, 0x46, 0x75, 0x6c, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x6b, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x4b, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f,
	0x6b, 0x77, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x65, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x4b, 0x77, 0x68, 0x22, 0x74, 0x0a, 0x09, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x48, 0x52, 0x45, 0x53, 0x48, 0x4f, 0x4c, 0x44, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x52, 0x49, 0x54,
	0x49, 0x43, 0x41, 0x4c, 0x4c, 0x59, 0x5f, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x4c, 0x4f, 0x57, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x45, 0x44, 0x49, 0x55, 0x4d, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x49, 0x47, 0x48, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x46,
	0x55, 0x4c, 0x4c, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41,
	0x4c, 0x4c, 0x59, 0x5f, 0x48, 0x49, 0x47, 0x48, 0x10, 0x07, 0x22, 0x4b, 0x0a, 0x0e, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6c, 0x75, 0x67,
	0x67, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x70, 0x6c,
	0x75, 0x67, 0x67, 0x65, 0x64, 0x49, 0x6e, 0x22, 0x5f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b,
	0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x60, 0x0a, 0x16, 0x50, 0x75, 0x6c, 0x6c,
	0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61,
	0x73, 0x6b, 0x52, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x83, 0x02, 0x0a, 0x17, 0x50,
	0x75, 0x6c, 0x6c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x45,
	0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x1a, 0x9b, 0x01, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x0c, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x0b, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x22, 0x62, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x06, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b,
	0x22, 0x63, 0x0a, 0x19, 0x50, 0x75, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x32, 0x0a, 0x06, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x06, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x92, 0x02, 0x0a, 0x1a, 0x50, 0x75, 0x6c, 0x6c, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x43, 0x68, 0x61,
	0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x73, 0x1a, 0xa4, 0x01, 0x0a, 0x06, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x49, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x30, 0x0a, 0x1a, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x1d,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x32, 0x95, 0x04, 0x0a, 0x10, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x12, 0x58, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x27, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45,
	0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72,
	0x61, 0x69, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x68, 0x0a, 0x0f, 0x50, 0x75, 0x6c, 0x6c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x28, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x45, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73,
	0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x61, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2a, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x6d,
	0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x67, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x71, 0x0a, 0x12, 0x50, 0x75, 0x6c, 0x6c, 0x43, 0x68,
	0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2b, 0x2e, 0x73,
	0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e,
	0x50, 0x75, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x73, 0x6d, 0x61, 0x72,
	0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x50, 0x75, 0x6c,
	0x6c, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x32, 0xf2, 0x01, 0x0a, 0x11, 0x45, 0x6e,
	0x65, 0x72, 0x67, 0x79, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x69, 0x0a, 0x13, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x72, 0x0a, 0x16, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2f, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x69, 0x6e,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x7d,
	0x0a, 0x14, 0x64, 0x65, 0x76, 0x2e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0x42, 0x12, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x2d, 0x63,
	0x6f, 0x72, 0x65, 0x2d, 0x6f, 0x73, 0x2f, 0x73, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x6f,
	0x2f, 0x74, 0x72, 0x61, 0x69, 0x74, 0x73, 0xaa, 0x02, 0x10, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0xca, 0x02, 0x10, 0x53, 0x6d, 0x61,
	0x72, 0x74, 0x63, 0x6f, 0x72, 0x65, 0x5c, 0x54, 0x72, 0x61, 0x69, 0x74, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_traits_energy_storage_proto_rawDescOnce sync.Once
	file_traits_energy_storage_proto_rawDescData = file_traits_energy_storage_proto_rawDesc
)

func file_traits_energy_storage_proto_rawDescGZIP() []byte {
	file_traits_energy_storage_proto_rawDescOnce.Do(func() {
		file_traits_energy_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_traits_energy_storage_proto_rawDescData)
	})
	return file_traits_energy_storage_proto_rawDescData
}

var file_traits_energy_storage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_traits_energy_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_traits_energy_storage_proto_goTypes = []interface{}{
	(EnergyLevel_Threshold)(0),                // 0: smartcore.traits.EnergyLevel.Threshold
	(*EnergyLevelSupport)(nil),                // 1: smartcore.traits.EnergyLevelSupport
	(*ChargingStatusSupport)(nil),             // 2: smartcore.traits.ChargingStatusSupport
	(*EnergyLevel)(nil),                       // 3: smartcore.traits.EnergyLevel
	(*ChargingStatus)(nil),                    // 4: smartcore.traits.ChargingStatus
	(*GetEnergyLevelRequest)(nil),             // 5: smartcore.traits.GetEnergyLevelRequest
	(*PullEnergyLevelRequest)(nil),            // 6: smartcore.traits.PullEnergyLevelRequest
	(*PullEnergyLevelResponse)(nil),           // 7: smartcore.traits.PullEnergyLevelResponse
	(*GetChargingStatusRequest)(nil),          // 8: smartcore.traits.GetChargingStatusRequest
	(*UpdateChargingStatusRequest)(nil),       // 9: smartcore.traits.UpdateChargingStatusRequest
	(*PullChargingStatusRequest)(nil),         // 10: smartcore.traits.PullChargingStatusRequest
	(*PullChargingStatusResponse)(nil),        // 11: smartcore.traits.PullChargingStatusResponse
	(*DescribeEnergyLevelRequest)(nil),        // 12: smartcore.traits.DescribeEnergyLevelRequest
	(*DescribeChargingStatusRequest)(nil),     // 13: smartcore.traits.DescribeChargingStatusRequest
	(*EnergyLevel_Remaining)(nil),             // 14: smartcore.traits.EnergyLevel.Remaining
	(*EnergyLevel_UntilFull)(nil),             // 15: smartcore.traits.EnergyLevel.UntilFull
	(*PullEnergyLevelResponse_Change)(nil),    // 16: smartcore.traits.PullEnergyLevelResponse.Change
	(*PullChargingStatusResponse_Change)(nil), // 17: smartcore.traits.PullChargingStatusResponse.Change
	(*types.ResourceSupport)(nil),             // 18: smartcore.types.ResourceSupport
	(*fieldmaskpb.FieldMask)(nil),             // 19: google.protobuf.FieldMask
	(*durationpb.Duration)(nil),               // 20: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),             // 21: google.protobuf.Timestamp
}
var file_traits_energy_storage_proto_depIdxs = []int32{
	18, // 0: smartcore.traits.EnergyLevelSupport.resource_support:type_name -> smartcore.types.ResourceSupport
	18, // 1: smartcore.traits.ChargingStatusSupport.resource_support:type_name -> smartcore.types.ResourceSupport
	0,  // 2: smartcore.traits.EnergyLevel.descriptive_threshold:type_name -> smartcore.traits.EnergyLevel.Threshold
	14, // 3: smartcore.traits.EnergyLevel.remaining:type_name -> smartcore.traits.EnergyLevel.Remaining
	15, // 4: smartcore.traits.EnergyLevel.until_full:type_name -> smartcore.traits.EnergyLevel.UntilFull
	19, // 5: smartcore.traits.GetEnergyLevelRequest.fields:type_name -> google.protobuf.FieldMask
	19, // 6: smartcore.traits.PullEnergyLevelRequest.fields:type_name -> google.protobuf.FieldMask
	16, // 7: smartcore.traits.PullEnergyLevelResponse.changes:type_name -> smartcore.traits.PullEnergyLevelResponse.Change
	19, // 8: smartcore.traits.GetChargingStatusRequest.fields:type_name -> google.protobuf.FieldMask
	4,  // 9: smartcore.traits.UpdateChargingStatusRequest.charging_status:type_name -> smartcore.traits.ChargingStatus
	19, // 10: smartcore.traits.UpdateChargingStatusRequest.update_mask:type_name -> google.protobuf.FieldMask
	19, // 11: smartcore.traits.PullChargingStatusRequest.fields:type_name -> google.protobuf.FieldMask
	17, // 12: smartcore.traits.PullChargingStatusResponse.changes:type_name -> smartcore.traits.PullChargingStatusResponse.Change
	20, // 13: smartcore.traits.EnergyLevel.Remaining.time:type_name -> google.protobuf.Duration
	20, // 14: smartcore.traits.EnergyLevel.UntilFull.time:type_name -> google.protobuf.Duration
	21, // 15: smartcore.traits.PullEnergyLevelResponse.Change.change_time:type_name -> google.protobuf.Timestamp
	3,  // 16: smartcore.traits.PullEnergyLevelResponse.Change.energy_level:type_name -> smartcore.traits.EnergyLevel
	21, // 17: smartcore.traits.PullChargingStatusResponse.Change.change_time:type_name -> google.protobuf.Timestamp
	4,  // 18: smartcore.traits.PullChargingStatusResponse.Change.charging_status:type_name -> smartcore.traits.ChargingStatus
	5,  // 19: smartcore.traits.EnergyStorageApi.GetEnergyLevel:input_type -> smartcore.traits.GetEnergyLevelRequest
	6,  // 20: smartcore.traits.EnergyStorageApi.PullEnergyLevel:input_type -> smartcore.traits.PullEnergyLevelRequest
	8,  // 21: smartcore.traits.EnergyStorageApi.GetChargingStatus:input_type -> smartcore.traits.GetChargingStatusRequest
	9,  // 22: smartcore.traits.EnergyStorageApi.UpdateChargingStatus:input_type -> smartcore.traits.UpdateChargingStatusRequest
	10, // 23: smartcore.traits.EnergyStorageApi.PullChargingStatus:input_type -> smartcore.traits.PullChargingStatusRequest
	12, // 24: smartcore.traits.EnergyStorageInfo.DescribeEnergyLevel:input_type -> smartcore.traits.DescribeEnergyLevelRequest
	13, // 25: smartcore.traits.EnergyStorageInfo.DescribeChargingStatus:input_type -> smartcore.traits.DescribeChargingStatusRequest
	3,  // 26: smartcore.traits.EnergyStorageApi.GetEnergyLevel:output_type -> smartcore.traits.EnergyLevel
	7,  // 27: smartcore.traits.EnergyStorageApi.PullEnergyLevel:output_type -> smartcore.traits.PullEnergyLevelResponse
	4,  // 28: smartcore.traits.EnergyStorageApi.GetChargingStatus:output_type -> smartcore.traits.ChargingStatus
	4,  // 29: smartcore.traits.EnergyStorageApi.UpdateChargingStatus:output_type -> smartcore.traits.ChargingStatus
	11, // 30: smartcore.traits.EnergyStorageApi.PullChargingStatus:output_type -> smartcore.traits.PullChargingStatusResponse
	1,  // 31: smartcore.traits.EnergyStorageInfo.DescribeEnergyLevel:output_type -> smartcore.traits.EnergyLevelSupport
	2,  // 32: smartcore.traits.EnergyStorageInfo.DescribeChargingStatus:output_type -> smartcore.traits.ChargingStatusSupport
	26, // [26:33] is the sub-list for method output_type
	19, // [19:26] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_traits_energy_storage_proto_init() }
func file_traits_energy_storage_proto_init() {
	if File_traits_energy_storage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_traits_energy_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergyLevelSupport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargingStatusSupport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergyLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargingStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEnergyLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullEnergyLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullEnergyLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChargingStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChargingStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullChargingStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullChargingStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeEnergyLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DescribeChargingStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergyLevel_Remaining); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnergyLevel_UntilFull); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullEnergyLevelResponse_Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_traits_energy_storage_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullChargingStatusResponse_Change); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_traits_energy_storage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_traits_energy_storage_proto_goTypes,
		DependencyIndexes: file_traits_energy_storage_proto_depIdxs,
		EnumInfos:         file_traits_energy_storage_proto_enumTypes,
		MessageInfos:      file_traits_energy_storage_proto_msgTypes,
	}.Build()
	File_traits_energy_storage_proto = out.File
	file_traits_energy_storage_proto_rawDesc = nil
	file_traits_energy_storage_proto_goTypes = nil
	file_traits_energy_storage_proto_depIdxs = nil
}
