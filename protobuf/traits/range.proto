syntax = "proto3";

package smartcore.traits;

option csharp_namespace = "Smartcore.Traits";
option go_package = "git.vanti.co.uk/smartcore/sc-api/go/traits";
option java_multiple_files = true;
option java_outer_classname = "RangeProto";
option java_package = "dev.smartcore.traits";
option php_namespace = "Smartcore\\Traits";

import "google/protobuf/timestamp.proto";
import "types/info.proto";
import "types/number.proto";
import "types/tween.proto";

// A trait for values that can have a minimum or maximum
service RangeApi {
  // request that the range value be changes
  rpc UpdateRangeValue (UpdateRangeValueRequest) returns (RangeValue);

  // get the current value of the range
  rpc GetRangeValue (GetRangeValueRequest) returns (RangeValue);

  // request updates to changes in the range value
  rpc PullRangeValue (PullRangeValueRequest) returns (stream PullRangeValueResponse);
}

// Describes the capabilities of a specific named device with respect to this trait.
service RangeInfo {
  // Get information about how a named device implements RangeValue features
  rpc DescribeRangeValue (DescribeRangeValueRequest) returns (RangeValueSupport);
}

message RangeValue {
  // The current value.
  int32 value = 1;
  // How the value changes or should change over time
  smartcore.api.types.Tween value_tween = 2;
  // Read-only, the target value after a transition
  int32 target_value = 3;
}

// RangeValueSupport describes the capabilities of devices implementing this trait
message RangeValueSupport {
  // How a named device supports read/write/pull apis
  smartcore.types.ResourceSupport resource_support = 1;
  // Describes details of the range value
  smartcore.api.types.Int32Attributes value_attributes = 2;
}

// A request to update the value of a range
message UpdateRangeValueRequest {
  // The name of the device to update
  string name = 1;
  // The new value for the range. Supply ramp to transition
  RangeValue range_value = 2;
  // if true, then the values in the range_value represent deltas from the current value and not absolute values
  bool delta = 3;
}

// A request to get the current value of a range
message GetRangeValueRequest {
  // The name of the device to get the value for
  string name = 1;
}

// Request to begin a subscription for range values
message PullRangeValueRequest {
  // The name of the device we want events from
  string name = 1;
  // Indicate whether we want to be notified of values while ramping or not. The device may ignore this depending on
  // capabilities
  bool exclude_ramping = 2;
}

// A response as part of the stream of changes to the range value
message PullRangeValueResponse {
  // The list of changes
  repeated Change changes = 1;

  // A change to a single devices range value
  message Change {
    // name for the device that issued the change
    string name = 1;
    // when the change occurred
    google.protobuf.Timestamp change_time = 2;
    // The new value for the range
    RangeValue range_value = 3;
  }
}

message DescribeRangeValueRequest {
  // The name of the device
  string name = 1;
}
