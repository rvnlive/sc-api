syntax = "proto3";

package smartcore.traits;

option csharp_namespace = "Smartcore.Traits";
option go_package = "github.com/smart-core-os/sc-api/go/traits";
option java_multiple_files = true;
option java_outer_classname = "ChannelProto";
option java_package = "dev.smartcore.traits";
option php_namespace = "Smartcore\\Traits";

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "types/info.proto";

// ChannelApi allows for querying and updating the chosen channel on a device like a TV.
service ChannelApi {
  // GetChosenChannel returns the currently chosen channel for the device.
  rpc GetChosenChannel (GetChosenChannelRequest) returns (Channel);

  // ChooseChannel will set the currently chosen channel to the one specified. Returns the chosen channel
  rpc ChooseChannel (ChooseChannelRequest) returns (Channel);
  // AdjustChannel will choose a channel based on the current channel, i.e. 'next channel'. Returns the chosen channel
  rpc AdjustChannel (AdjustChannelRequest) returns (Channel);
  // ReturnChannel will choose the previously chosen channel. Returns the chosen channel
  rpc ReturnChannel (ReturnChannelRequest) returns (Channel);

  // PullChosenChannel subscribes to chosen channel changes
  rpc PullChosenChannel (PullChosenChannelRequest) returns (stream PullChosenChannelResponse);
}

// Describes the capabilities of a specific named device with respect to this trait.
service ChannelInfo {
  // Get information about how a named device implements channel choosing and adjustment
  rpc DescribeChosenChannel (DescribeChosenChannelRequest) returns (ChosenChannelSupport);

  // todo: define how channel lists are reported
}

// Channel describes a single channel that can be chosen on the device.
//
// During read all known properties will be populated, id and title will always be present. On write either id or
// number must be present.
message Channel {
  // Id uniquely identifies the channel and can be used to select it explicitly.
  string id = 1;
  // A numeric identifier for the channel, such as 17 or 712.11-14. Not always parsable as a number.
  string channel_number = 2;
  // A human readable name for the channel.
  string title = 3;
}

// ChosenChannelSupport describes the capabilities of devices implementing this trait
message ChosenChannelSupport {
  // How a named device supports read/write/pull apis
  smartcore.types.ResourceSupport resource_support = 1;
  // The max number of channels away from the current that are supported when adjusting channels. Defaults to 1.
  int32 adjust_max = 2;
  // todo: support for [choose,adjust,return], not sure what the defaults should be
}

message GetChosenChannelRequest {
  // The name of the device
  string name = 1;
  // The state fields to fetch
  google.protobuf.FieldMask read_mask = 2;
}

// ChooseChannelRequest describes which channel to select.
message ChooseChannelRequest {
  // The name of the device
  string name = 1;
  // The channel to select. Must contain either id or number.
  Channel channel = 2;
}

// AdjustChannelRequest describes how to change the channel relative to the current channel.
message AdjustChannelRequest {
  // The name of the device
  string name = 1;
  // How many channels to skip, use negative numbers to select previous channels. See ChannelApiAttributes.adjust_max.
  int32 amount = 2;
}

// Select the last channel to be selected before the current one.
message ReturnChannelRequest {
  // The name of the device
  string name = 1;
}

message PullChosenChannelRequest {
  // The name of the device
  string name = 1;
  // The state fields to fetch
  google.protobuf.FieldMask read_mask = 2;
}

message PullChosenChannelResponse {
  repeated Change changes = 1;

  message Change {
    // name for the device that issued the change
    string name = 1;
    // when the change occurred
    google.protobuf.Timestamp change_time = 2;
    // The new chosen channel
    Channel channel = 3;
  }
}

message DescribeChosenChannelRequest {
  // The name of the device
  string name = 1;
}
