syntax = "proto3";

package smartcore.api.device.traits.v1.inputselect;

option csharp_namespace = "Smartcore.Api.Device.Traits";
option go_package = "smartcore.dev/api/device/traits";
option java_multiple_files = true;
option java_outer_classname = "InputSelectProto";
option java_package = "dev.smartcore.api.device.traits";
option php_namespace = "Smartcore\\Api\\Device\\Traits";

import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

// A trait to control the input for a device. Typically related to AV devices like displays or presentation switchers.
// A more complicated device might have multiple outputs, this trait also supports this.
service InputSelect {
    // request that the input be selected
    rpc UpdateInput (UpdateInputRequest) returns (Input);

    // get the current value of the selected input
    rpc GetInput (GetInputRequest) returns (Input);

    // request updates to changes in the selected input
    rpc PullInput (PullInputRequest) returns (stream PullInputResponse);

    // todo: support ListInput to query for 'outputs that show input A' or 'the state of all outputs'
}

// possible modes an input select device can
enum InputSelectFeature {
    // both audio and video are treated as one. independent_av should be considered false in this mode
    AV = 0;
    // Only audio inputs are supported
    AUDIO_ONLY = 1;
    // Only video inputs are supported
    VIDEO_ONLY = 2;
    // Audio and video are both supported and can be selected independently if desired. The independent_av property can
    // be true in this mode only
    INDEPENDENT = 3;
}

// Trait.attributes relating to the input select device
message InputSelectAttributes {
    // the list of inputs that can be selected on this device
    repeated AvPort inputs = 1;
    // indicate the possible mode of input selection that are supported by this device. This is not the current mode, just
    // the supported mode the device allows
    InputSelectFeature supported_feature = 2;
    // The list of outputs that can have inputs on this device
    repeated AvPort outputs = 3;
}

// represents a source (or destination) for the AV signal
message AvPort {
    // Unique name for the port, used as the value for input or output properties
    string name = 1;
    // Official human readable name for this port
    string title = 2;
    string description = 3;
    // If this port supports different features from the device as a whole, specify them here. For example some ports
    // might be audio only or not support audio breakout
    InputSelectFeature supported_feature = 4;
}

// The currently selected input
message Input {
    // The current choice for the video input. Will be absent if there is no video input chosen.
    string video_input = 1;
    // The current choice for the audio input. Absent means no audio input is chosen unless independent_av is false which
    // implies the audio_input is the same as the video_input
    string audio_input = 2;
    // If true then audio and video changes will not affect the other. False implies that changes to audio or video will
    // change the input selection for the other to keep them consistent
    bool independent_av = 3;

    // Which output the input is sent to. Optional when the device only has one output, required otherwise
    string output = 4;

    // todo: potentially support video / audio muting
}

// A request to update the current input
message UpdateInputRequest {
    // The name of the device to update
    string name = 1;
    // The new input value
    Input input = 2;
    // the fields we are intending to update. Paths are relative to the input not this request
    google.protobuf.FieldMask update_mask = 3;
}

// A request to get the currently selected input
message GetInputRequest {
    // The name of the device to get the value for
    string name = 1;
    // Required if the device has multiple outputs. The name of the output to get the input for.
    string output = 2;
}

// Request to begin a subscription for selected input changes
message PullInputRequest {
    // The name of the device we want events from
    string name = 1;
}

// A response as part of the stream of changes to the selected input
message PullInputResponse {
    // The list of changes
    repeated InputChange changes = 1;
}

// A change to a single devices range value
message InputChange {
    // name for the device that issued the change
    string name = 1;
    // when the change occurred
    google.protobuf.Timestamp create_time = 2;
    // The new value for the selected input
    Input input = 3;
}
