syntax = "proto3";

package smartcore.api.device.traits.temperaturesensor;

option csharp_namespace = "Smartcore.Api.Device.Traits";
option go_package = "smartcore.dev/api/device/traits";
option java_multiple_files = true;
option java_outer_classname = "TemperatureSensorProto";
option java_package = "dev.smartcore.api.device.traits";
option php_namespace = "Smartcore\\Api\\Device\\Traits";

import "google/protobuf/timestamp.proto";
import "types/unit.proto";

// Represents a sensor that detects temperature. If the device also controls the temperature (or otherwise triggers
// based on temperature changes) then prefer the Thermostat trait
service TemperatureSensor {
    // Get the current temperature state for the device.
    rpc GetTemperature (GetTemperatureRequest) returns (smartcore.api.types.Temperature);

    // subscribe to changes in the temperature state for the device.
    rpc PullTemperature (PullTemperatureRequest) returns (stream PullTemperatureResponse) {
    }
}

// Trait.attribute for temperature sensors
message TemperatureSensorAttributes {
    // How the device thinks, all communications will be in celsius but the device's native unit is this.
    smartcore.api.types.TemperatureUnit native_unit = 1;
}

message GetTemperatureRequest {
    // the name of the device to get the state for
    string name = 1;
}

message PullTemperatureRequest {
    // the name of the device to get the state for
    string name = 1;
}

// response containing temperature changes
message PullTemperatureResponse {
    // the list of changes that have occurred since the last event
    repeated TemperatureChange changes = 1;
}

// A change to the temperature reading of the device
message TemperatureChange {
    // name for the device that issued the change
    string name = 1;
    // when the change occurred
    google.protobuf.Timestamp create_time = 2;
    // the new state for the device
    smartcore.api.types.Temperature temperature = 3;
}


