// source: types/unit.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var types_number_pb = require('../types/number_pb.js');
goog.object.extend(proto, types_number_pb);
var types_tween_pb = require('../types/tween_pb.js');
goog.object.extend(proto, types_tween_pb);
goog.exportSymbol('proto.smartcore.api.types.AudioLevel', null, global);
goog.exportSymbol('proto.smartcore.api.types.AudioLevelChange', null, global);
goog.exportSymbol('proto.smartcore.api.types.Temperature', null, global);
goog.exportSymbol('proto.smartcore.api.types.TemperatureUnit', null, global);
goog.exportSymbol('proto.smartcore.api.types.Volume', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.api.types.Temperature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.api.types.Temperature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.api.types.Temperature.displayName = 'proto.smartcore.api.types.Temperature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.api.types.Volume = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.api.types.Volume, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.api.types.Volume.displayName = 'proto.smartcore.api.types.Volume';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.api.types.AudioLevel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.api.types.AudioLevel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.api.types.AudioLevel.displayName = 'proto.smartcore.api.types.AudioLevel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.api.types.AudioLevelChange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.api.types.AudioLevelChange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.api.types.AudioLevelChange.displayName = 'proto.smartcore.api.types.AudioLevelChange';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.api.types.Temperature.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.api.types.Temperature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.api.types.Temperature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.types.Temperature.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueCelsius: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.api.types.Temperature}
 */
proto.smartcore.api.types.Temperature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.api.types.Temperature;
  return proto.smartcore.api.types.Temperature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.api.types.Temperature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.api.types.Temperature}
 */
proto.smartcore.api.types.Temperature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValueCelsius(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.api.types.Temperature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.api.types.Temperature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.api.types.Temperature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.types.Temperature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueCelsius();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double value_celsius = 1;
 * @return {number}
 */
proto.smartcore.api.types.Temperature.prototype.getValueCelsius = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.api.types.Temperature} returns this
 */
proto.smartcore.api.types.Temperature.prototype.setValueCelsius = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.api.types.Volume.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.api.types.Volume.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.api.types.Volume} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.types.Volume.toObject = function(includeInstance, msg) {
  var f, obj = {
    gain: (f = msg.getGain()) && types_number_pb.FloatVar.toObject(includeInstance, f),
    mute: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.api.types.Volume}
 */
proto.smartcore.api.types.Volume.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.api.types.Volume;
  return proto.smartcore.api.types.Volume.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.api.types.Volume} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.api.types.Volume}
 */
proto.smartcore.api.types.Volume.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new types_number_pb.FloatVar;
      reader.readMessage(value,types_number_pb.FloatVar.deserializeBinaryFromReader);
      msg.setGain(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMute(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.api.types.Volume.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.api.types.Volume.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.api.types.Volume} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.types.Volume.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGain();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      types_number_pb.FloatVar.serializeBinaryToWriter
    );
  }
  f = message.getMute();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional FloatVar gain = 1;
 * @return {?proto.smartcore.api.types.FloatVar}
 */
proto.smartcore.api.types.Volume.prototype.getGain = function() {
  return /** @type{?proto.smartcore.api.types.FloatVar} */ (
    jspb.Message.getWrapperField(this, types_number_pb.FloatVar, 1));
};


/**
 * @param {?proto.smartcore.api.types.FloatVar|undefined} value
 * @return {!proto.smartcore.api.types.Volume} returns this
*/
proto.smartcore.api.types.Volume.prototype.setGain = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.api.types.Volume} returns this
 */
proto.smartcore.api.types.Volume.prototype.clearGain = function() {
  return this.setGain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.api.types.Volume.prototype.hasGain = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool mute = 2;
 * @return {boolean}
 */
proto.smartcore.api.types.Volume.prototype.getMute = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.api.types.Volume} returns this
 */
proto.smartcore.api.types.Volume.prototype.setMute = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.api.types.AudioLevel.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.api.types.AudioLevel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.api.types.AudioLevel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.types.AudioLevel.toObject = function(includeInstance, msg) {
  var f, obj = {
    gain: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    gainTween: (f = msg.getGainTween()) && types_tween_pb.Tween.toObject(includeInstance, f),
    targetGain: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    muted: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.api.types.AudioLevel}
 */
proto.smartcore.api.types.AudioLevel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.api.types.AudioLevel;
  return proto.smartcore.api.types.AudioLevel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.api.types.AudioLevel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.api.types.AudioLevel}
 */
proto.smartcore.api.types.AudioLevel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setGain(value);
      break;
    case 2:
      var value = new types_tween_pb.Tween;
      reader.readMessage(value,types_tween_pb.Tween.deserializeBinaryFromReader);
      msg.setGainTween(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTargetGain(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMuted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.api.types.AudioLevel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.api.types.AudioLevel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.api.types.AudioLevel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.types.AudioLevel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGain();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getGainTween();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_tween_pb.Tween.serializeBinaryToWriter
    );
  }
  f = message.getTargetGain();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getMuted();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional float gain = 1;
 * @return {number}
 */
proto.smartcore.api.types.AudioLevel.prototype.getGain = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.api.types.AudioLevel} returns this
 */
proto.smartcore.api.types.AudioLevel.prototype.setGain = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional Tween gain_tween = 2;
 * @return {?proto.smartcore.api.types.Tween}
 */
proto.smartcore.api.types.AudioLevel.prototype.getGainTween = function() {
  return /** @type{?proto.smartcore.api.types.Tween} */ (
    jspb.Message.getWrapperField(this, types_tween_pb.Tween, 2));
};


/**
 * @param {?proto.smartcore.api.types.Tween|undefined} value
 * @return {!proto.smartcore.api.types.AudioLevel} returns this
*/
proto.smartcore.api.types.AudioLevel.prototype.setGainTween = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.api.types.AudioLevel} returns this
 */
proto.smartcore.api.types.AudioLevel.prototype.clearGainTween = function() {
  return this.setGainTween(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.api.types.AudioLevel.prototype.hasGainTween = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float target_gain = 3;
 * @return {number}
 */
proto.smartcore.api.types.AudioLevel.prototype.getTargetGain = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.api.types.AudioLevel} returns this
 */
proto.smartcore.api.types.AudioLevel.prototype.setTargetGain = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional bool muted = 4;
 * @return {boolean}
 */
proto.smartcore.api.types.AudioLevel.prototype.getMuted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.api.types.AudioLevel} returns this
 */
proto.smartcore.api.types.AudioLevel.prototype.setMuted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.api.types.AudioLevelChange.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.api.types.AudioLevelChange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.api.types.AudioLevelChange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.types.AudioLevelChange.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    changeTime: (f = msg.getChangeTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    level: (f = msg.getLevel()) && proto.smartcore.api.types.AudioLevel.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.api.types.AudioLevelChange}
 */
proto.smartcore.api.types.AudioLevelChange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.api.types.AudioLevelChange;
  return proto.smartcore.api.types.AudioLevelChange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.api.types.AudioLevelChange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.api.types.AudioLevelChange}
 */
proto.smartcore.api.types.AudioLevelChange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeTime(value);
      break;
    case 3:
      var value = new proto.smartcore.api.types.AudioLevel;
      reader.readMessage(value,proto.smartcore.api.types.AudioLevel.deserializeBinaryFromReader);
      msg.setLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.api.types.AudioLevelChange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.api.types.AudioLevelChange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.api.types.AudioLevelChange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.types.AudioLevelChange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getChangeTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLevel();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.smartcore.api.types.AudioLevel.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.api.types.AudioLevelChange.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.api.types.AudioLevelChange} returns this
 */
proto.smartcore.api.types.AudioLevelChange.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp change_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.smartcore.api.types.AudioLevelChange.prototype.getChangeTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.smartcore.api.types.AudioLevelChange} returns this
*/
proto.smartcore.api.types.AudioLevelChange.prototype.setChangeTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.api.types.AudioLevelChange} returns this
 */
proto.smartcore.api.types.AudioLevelChange.prototype.clearChangeTime = function() {
  return this.setChangeTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.api.types.AudioLevelChange.prototype.hasChangeTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional AudioLevel level = 3;
 * @return {?proto.smartcore.api.types.AudioLevel}
 */
proto.smartcore.api.types.AudioLevelChange.prototype.getLevel = function() {
  return /** @type{?proto.smartcore.api.types.AudioLevel} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.api.types.AudioLevel, 3));
};


/**
 * @param {?proto.smartcore.api.types.AudioLevel|undefined} value
 * @return {!proto.smartcore.api.types.AudioLevelChange} returns this
*/
proto.smartcore.api.types.AudioLevelChange.prototype.setLevel = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.api.types.AudioLevelChange} returns this
 */
proto.smartcore.api.types.AudioLevelChange.prototype.clearLevel = function() {
  return this.setLevel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.api.types.AudioLevelChange.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.smartcore.api.types.TemperatureUnit = {
  CELSIUS: 0,
  FAHRENHEIT: 1,
  KELVIN: 2
};

goog.object.extend(exports, proto.smartcore.api.types);
