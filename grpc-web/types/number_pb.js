// source: types/number.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var types_tween_pb = require('../types/tween_pb.js');
goog.object.extend(proto, types_tween_pb);
goog.exportSymbol('proto.smartcore.types.FloatAttributes', null, global);
goog.exportSymbol('proto.smartcore.types.FloatBounds', null, global);
goog.exportSymbol('proto.smartcore.types.FloatVar', null, global);
goog.exportSymbol('proto.smartcore.types.Int32Attributes', null, global);
goog.exportSymbol('proto.smartcore.types.Int32Bounds', null, global);
goog.exportSymbol('proto.smartcore.types.Int32Var', null, global);
goog.exportSymbol('proto.smartcore.types.InvalidNumberBehaviour', null, global);
goog.exportSymbol('proto.smartcore.types.NumberCapping', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.types.NumberCapping = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.types.NumberCapping, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.types.NumberCapping.displayName = 'proto.smartcore.types.NumberCapping';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.types.Int32Bounds = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.types.Int32Bounds, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.types.Int32Bounds.displayName = 'proto.smartcore.types.Int32Bounds';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.types.Int32Var = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.types.Int32Var, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.types.Int32Var.displayName = 'proto.smartcore.types.Int32Var';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.types.Int32Attributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.types.Int32Attributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.types.Int32Attributes.displayName = 'proto.smartcore.types.Int32Attributes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.types.FloatBounds = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.types.FloatBounds, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.types.FloatBounds.displayName = 'proto.smartcore.types.FloatBounds';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.types.FloatVar = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.types.FloatVar, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.types.FloatVar.displayName = 'proto.smartcore.types.FloatVar';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.types.FloatAttributes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.types.FloatAttributes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.types.FloatAttributes.displayName = 'proto.smartcore.types.FloatAttributes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.types.NumberCapping.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.types.NumberCapping.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.types.NumberCapping} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.NumberCapping.toObject = function(includeInstance, msg) {
  var f, obj = {
    min: jspb.Message.getFieldWithDefault(msg, 1, 0),
    step: jspb.Message.getFieldWithDefault(msg, 2, 0),
    max: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.types.NumberCapping}
 */
proto.smartcore.types.NumberCapping.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.types.NumberCapping;
  return proto.smartcore.types.NumberCapping.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.types.NumberCapping} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.types.NumberCapping}
 */
proto.smartcore.types.NumberCapping.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.smartcore.types.InvalidNumberBehaviour} */ (reader.readEnum());
      msg.setMin(value);
      break;
    case 2:
      var value = /** @type {!proto.smartcore.types.InvalidNumberBehaviour} */ (reader.readEnum());
      msg.setStep(value);
      break;
    case 3:
      var value = /** @type {!proto.smartcore.types.InvalidNumberBehaviour} */ (reader.readEnum());
      msg.setMax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.types.NumberCapping.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.types.NumberCapping.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.types.NumberCapping} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.NumberCapping.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMin();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getStep();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMax();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional InvalidNumberBehaviour min = 1;
 * @return {!proto.smartcore.types.InvalidNumberBehaviour}
 */
proto.smartcore.types.NumberCapping.prototype.getMin = function() {
  return /** @type {!proto.smartcore.types.InvalidNumberBehaviour} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.smartcore.types.InvalidNumberBehaviour} value
 * @return {!proto.smartcore.types.NumberCapping} returns this
 */
proto.smartcore.types.NumberCapping.prototype.setMin = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional InvalidNumberBehaviour step = 2;
 * @return {!proto.smartcore.types.InvalidNumberBehaviour}
 */
proto.smartcore.types.NumberCapping.prototype.getStep = function() {
  return /** @type {!proto.smartcore.types.InvalidNumberBehaviour} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.smartcore.types.InvalidNumberBehaviour} value
 * @return {!proto.smartcore.types.NumberCapping} returns this
 */
proto.smartcore.types.NumberCapping.prototype.setStep = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional InvalidNumberBehaviour max = 3;
 * @return {!proto.smartcore.types.InvalidNumberBehaviour}
 */
proto.smartcore.types.NumberCapping.prototype.getMax = function() {
  return /** @type {!proto.smartcore.types.InvalidNumberBehaviour} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.smartcore.types.InvalidNumberBehaviour} value
 * @return {!proto.smartcore.types.NumberCapping} returns this
 */
proto.smartcore.types.NumberCapping.prototype.setMax = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.types.Int32Bounds.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.types.Int32Bounds.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.types.Int32Bounds} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.Int32Bounds.toObject = function(includeInstance, msg) {
  var f, obj = {
    min: (f = msg.getMin()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    max: (f = msg.getMax()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.types.Int32Bounds}
 */
proto.smartcore.types.Int32Bounds.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.types.Int32Bounds;
  return proto.smartcore.types.Int32Bounds.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.types.Int32Bounds} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.types.Int32Bounds}
 */
proto.smartcore.types.Int32Bounds.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setMin(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setMax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.types.Int32Bounds.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.types.Int32Bounds.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.types.Int32Bounds} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.Int32Bounds.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMin();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getMax();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Int32Value min = 1;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.smartcore.types.Int32Bounds.prototype.getMin = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 1));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.smartcore.types.Int32Bounds} returns this
*/
proto.smartcore.types.Int32Bounds.prototype.setMin = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.Int32Bounds} returns this
 */
proto.smartcore.types.Int32Bounds.prototype.clearMin = function() {
  return this.setMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.Int32Bounds.prototype.hasMin = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Int32Value max = 2;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.smartcore.types.Int32Bounds.prototype.getMax = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 2));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.smartcore.types.Int32Bounds} returns this
*/
proto.smartcore.types.Int32Bounds.prototype.setMax = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.Int32Bounds} returns this
 */
proto.smartcore.types.Int32Bounds.prototype.clearMax = function() {
  return this.setMax(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.Int32Bounds.prototype.hasMax = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.types.Int32Var.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.types.Int32Var.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.types.Int32Var} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.Int32Var.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    ramp: (f = msg.getRamp()) && types_tween_pb.Tween.toObject(includeInstance, f),
    targetValue: (f = msg.getTargetValue()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.types.Int32Var}
 */
proto.smartcore.types.Int32Var.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.types.Int32Var;
  return proto.smartcore.types.Int32Var.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.types.Int32Var} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.types.Int32Var}
 */
proto.smartcore.types.Int32Var.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = new types_tween_pb.Tween;
      reader.readMessage(value,types_tween_pb.Tween.deserializeBinaryFromReader);
      msg.setRamp(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setTargetValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.types.Int32Var.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.types.Int32Var.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.types.Int32Var} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.Int32Var.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getRamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_tween_pb.Tween.serializeBinaryToWriter
    );
  }
  f = message.getTargetValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Int32Value value = 1;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.smartcore.types.Int32Var.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 1));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.smartcore.types.Int32Var} returns this
*/
proto.smartcore.types.Int32Var.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.Int32Var} returns this
 */
proto.smartcore.types.Int32Var.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.Int32Var.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Tween ramp = 2;
 * @return {?proto.smartcore.types.Tween}
 */
proto.smartcore.types.Int32Var.prototype.getRamp = function() {
  return /** @type{?proto.smartcore.types.Tween} */ (
    jspb.Message.getWrapperField(this, types_tween_pb.Tween, 2));
};


/**
 * @param {?proto.smartcore.types.Tween|undefined} value
 * @return {!proto.smartcore.types.Int32Var} returns this
*/
proto.smartcore.types.Int32Var.prototype.setRamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.Int32Var} returns this
 */
proto.smartcore.types.Int32Var.prototype.clearRamp = function() {
  return this.setRamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.Int32Var.prototype.hasRamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Int32Value target_value = 3;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.smartcore.types.Int32Var.prototype.getTargetValue = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 3));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.smartcore.types.Int32Var} returns this
*/
proto.smartcore.types.Int32Var.prototype.setTargetValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.Int32Var} returns this
 */
proto.smartcore.types.Int32Var.prototype.clearTargetValue = function() {
  return this.setTargetValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.Int32Var.prototype.hasTargetValue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.types.Int32Attributes.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.types.Int32Attributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.types.Int32Attributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.Int32Attributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    bounds: (f = msg.getBounds()) && proto.smartcore.types.Int32Bounds.toObject(includeInstance, f),
    step: jspb.Message.getFieldWithDefault(msg, 3, 0),
    supportsDelta: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    rampSupport: jspb.Message.getFieldWithDefault(msg, 5, 0),
    defaultCapping: (f = msg.getDefaultCapping()) && proto.smartcore.types.NumberCapping.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.types.Int32Attributes}
 */
proto.smartcore.types.Int32Attributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.types.Int32Attributes;
  return proto.smartcore.types.Int32Attributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.types.Int32Attributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.types.Int32Attributes}
 */
proto.smartcore.types.Int32Attributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.types.Int32Bounds;
      reader.readMessage(value,proto.smartcore.types.Int32Bounds.deserializeBinaryFromReader);
      msg.setBounds(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStep(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportsDelta(value);
      break;
    case 5:
      var value = /** @type {!proto.smartcore.types.TweenSupport} */ (reader.readEnum());
      msg.setRampSupport(value);
      break;
    case 6:
      var value = new proto.smartcore.types.NumberCapping;
      reader.readMessage(value,proto.smartcore.types.NumberCapping.deserializeBinaryFromReader);
      msg.setDefaultCapping(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.types.Int32Attributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.types.Int32Attributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.types.Int32Attributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.Int32Attributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBounds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.smartcore.types.Int32Bounds.serializeBinaryToWriter
    );
  }
  f = message.getStep();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getSupportsDelta();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getRampSupport();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getDefaultCapping();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.smartcore.types.NumberCapping.serializeBinaryToWriter
    );
  }
};


/**
 * optional Int32Bounds bounds = 1;
 * @return {?proto.smartcore.types.Int32Bounds}
 */
proto.smartcore.types.Int32Attributes.prototype.getBounds = function() {
  return /** @type{?proto.smartcore.types.Int32Bounds} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.types.Int32Bounds, 1));
};


/**
 * @param {?proto.smartcore.types.Int32Bounds|undefined} value
 * @return {!proto.smartcore.types.Int32Attributes} returns this
*/
proto.smartcore.types.Int32Attributes.prototype.setBounds = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.Int32Attributes} returns this
 */
proto.smartcore.types.Int32Attributes.prototype.clearBounds = function() {
  return this.setBounds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.Int32Attributes.prototype.hasBounds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 step = 3;
 * @return {number}
 */
proto.smartcore.types.Int32Attributes.prototype.getStep = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.types.Int32Attributes} returns this
 */
proto.smartcore.types.Int32Attributes.prototype.setStep = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool supports_delta = 4;
 * @return {boolean}
 */
proto.smartcore.types.Int32Attributes.prototype.getSupportsDelta = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.types.Int32Attributes} returns this
 */
proto.smartcore.types.Int32Attributes.prototype.setSupportsDelta = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional TweenSupport ramp_support = 5;
 * @return {!proto.smartcore.types.TweenSupport}
 */
proto.smartcore.types.Int32Attributes.prototype.getRampSupport = function() {
  return /** @type {!proto.smartcore.types.TweenSupport} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.smartcore.types.TweenSupport} value
 * @return {!proto.smartcore.types.Int32Attributes} returns this
 */
proto.smartcore.types.Int32Attributes.prototype.setRampSupport = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional NumberCapping default_capping = 6;
 * @return {?proto.smartcore.types.NumberCapping}
 */
proto.smartcore.types.Int32Attributes.prototype.getDefaultCapping = function() {
  return /** @type{?proto.smartcore.types.NumberCapping} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.types.NumberCapping, 6));
};


/**
 * @param {?proto.smartcore.types.NumberCapping|undefined} value
 * @return {!proto.smartcore.types.Int32Attributes} returns this
*/
proto.smartcore.types.Int32Attributes.prototype.setDefaultCapping = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.Int32Attributes} returns this
 */
proto.smartcore.types.Int32Attributes.prototype.clearDefaultCapping = function() {
  return this.setDefaultCapping(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.Int32Attributes.prototype.hasDefaultCapping = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.types.FloatBounds.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.types.FloatBounds.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.types.FloatBounds} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.FloatBounds.toObject = function(includeInstance, msg) {
  var f, obj = {
    min: (f = msg.getMin()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    max: (f = msg.getMax()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.types.FloatBounds}
 */
proto.smartcore.types.FloatBounds.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.types.FloatBounds;
  return proto.smartcore.types.FloatBounds.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.types.FloatBounds} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.types.FloatBounds}
 */
proto.smartcore.types.FloatBounds.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setMin(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setMax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.types.FloatBounds.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.types.FloatBounds.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.types.FloatBounds} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.FloatBounds.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMin();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getMax();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.FloatValue min = 1;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.smartcore.types.FloatBounds.prototype.getMin = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 1));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.smartcore.types.FloatBounds} returns this
*/
proto.smartcore.types.FloatBounds.prototype.setMin = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.FloatBounds} returns this
 */
proto.smartcore.types.FloatBounds.prototype.clearMin = function() {
  return this.setMin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.FloatBounds.prototype.hasMin = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.FloatValue max = 2;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.smartcore.types.FloatBounds.prototype.getMax = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 2));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.smartcore.types.FloatBounds} returns this
*/
proto.smartcore.types.FloatBounds.prototype.setMax = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.FloatBounds} returns this
 */
proto.smartcore.types.FloatBounds.prototype.clearMax = function() {
  return this.setMax(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.FloatBounds.prototype.hasMax = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.types.FloatVar.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.types.FloatVar.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.types.FloatVar} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.FloatVar.toObject = function(includeInstance, msg) {
  var f, obj = {
    value: (f = msg.getValue()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f),
    ramp: (f = msg.getRamp()) && types_tween_pb.Tween.toObject(includeInstance, f),
    targetValue: (f = msg.getTargetValue()) && google_protobuf_wrappers_pb.FloatValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.types.FloatVar}
 */
proto.smartcore.types.FloatVar.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.types.FloatVar;
  return proto.smartcore.types.FloatVar.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.types.FloatVar} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.types.FloatVar}
 */
proto.smartcore.types.FloatVar.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setValue(value);
      break;
    case 2:
      var value = new types_tween_pb.Tween;
      reader.readMessage(value,types_tween_pb.Tween.deserializeBinaryFromReader);
      msg.setRamp(value);
      break;
    case 3:
      var value = new google_protobuf_wrappers_pb.FloatValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.FloatValue.deserializeBinaryFromReader);
      msg.setTargetValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.types.FloatVar.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.types.FloatVar.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.types.FloatVar} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.FloatVar.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValue();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
  f = message.getRamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      types_tween_pb.Tween.serializeBinaryToWriter
    );
  }
  f = message.getTargetValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_wrappers_pb.FloatValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.FloatValue value = 1;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.smartcore.types.FloatVar.prototype.getValue = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 1));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.smartcore.types.FloatVar} returns this
*/
proto.smartcore.types.FloatVar.prototype.setValue = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.FloatVar} returns this
 */
proto.smartcore.types.FloatVar.prototype.clearValue = function() {
  return this.setValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.FloatVar.prototype.hasValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Tween ramp = 2;
 * @return {?proto.smartcore.types.Tween}
 */
proto.smartcore.types.FloatVar.prototype.getRamp = function() {
  return /** @type{?proto.smartcore.types.Tween} */ (
    jspb.Message.getWrapperField(this, types_tween_pb.Tween, 2));
};


/**
 * @param {?proto.smartcore.types.Tween|undefined} value
 * @return {!proto.smartcore.types.FloatVar} returns this
*/
proto.smartcore.types.FloatVar.prototype.setRamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.FloatVar} returns this
 */
proto.smartcore.types.FloatVar.prototype.clearRamp = function() {
  return this.setRamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.FloatVar.prototype.hasRamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.FloatValue target_value = 3;
 * @return {?proto.google.protobuf.FloatValue}
 */
proto.smartcore.types.FloatVar.prototype.getTargetValue = function() {
  return /** @type{?proto.google.protobuf.FloatValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.FloatValue, 3));
};


/**
 * @param {?proto.google.protobuf.FloatValue|undefined} value
 * @return {!proto.smartcore.types.FloatVar} returns this
*/
proto.smartcore.types.FloatVar.prototype.setTargetValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.FloatVar} returns this
 */
proto.smartcore.types.FloatVar.prototype.clearTargetValue = function() {
  return this.setTargetValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.FloatVar.prototype.hasTargetValue = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.types.FloatAttributes.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.types.FloatAttributes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.types.FloatAttributes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.FloatAttributes.toObject = function(includeInstance, msg) {
  var f, obj = {
    bounds: (f = msg.getBounds()) && proto.smartcore.types.FloatBounds.toObject(includeInstance, f),
    step: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    supportsDelta: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    rampSupport: jspb.Message.getFieldWithDefault(msg, 5, 0),
    defaultCapping: (f = msg.getDefaultCapping()) && proto.smartcore.types.NumberCapping.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.types.FloatAttributes}
 */
proto.smartcore.types.FloatAttributes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.types.FloatAttributes;
  return proto.smartcore.types.FloatAttributes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.types.FloatAttributes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.types.FloatAttributes}
 */
proto.smartcore.types.FloatAttributes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.types.FloatBounds;
      reader.readMessage(value,proto.smartcore.types.FloatBounds.deserializeBinaryFromReader);
      msg.setBounds(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStep(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSupportsDelta(value);
      break;
    case 5:
      var value = /** @type {!proto.smartcore.types.TweenSupport} */ (reader.readEnum());
      msg.setRampSupport(value);
      break;
    case 6:
      var value = new proto.smartcore.types.NumberCapping;
      reader.readMessage(value,proto.smartcore.types.NumberCapping.deserializeBinaryFromReader);
      msg.setDefaultCapping(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.types.FloatAttributes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.types.FloatAttributes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.types.FloatAttributes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.types.FloatAttributes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBounds();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.smartcore.types.FloatBounds.serializeBinaryToWriter
    );
  }
  f = message.getStep();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getSupportsDelta();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getRampSupport();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getDefaultCapping();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.smartcore.types.NumberCapping.serializeBinaryToWriter
    );
  }
};


/**
 * optional FloatBounds bounds = 1;
 * @return {?proto.smartcore.types.FloatBounds}
 */
proto.smartcore.types.FloatAttributes.prototype.getBounds = function() {
  return /** @type{?proto.smartcore.types.FloatBounds} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.types.FloatBounds, 1));
};


/**
 * @param {?proto.smartcore.types.FloatBounds|undefined} value
 * @return {!proto.smartcore.types.FloatAttributes} returns this
*/
proto.smartcore.types.FloatAttributes.prototype.setBounds = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.FloatAttributes} returns this
 */
proto.smartcore.types.FloatAttributes.prototype.clearBounds = function() {
  return this.setBounds(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.FloatAttributes.prototype.hasBounds = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float step = 3;
 * @return {number}
 */
proto.smartcore.types.FloatAttributes.prototype.getStep = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.types.FloatAttributes} returns this
 */
proto.smartcore.types.FloatAttributes.prototype.setStep = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional bool supports_delta = 4;
 * @return {boolean}
 */
proto.smartcore.types.FloatAttributes.prototype.getSupportsDelta = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.types.FloatAttributes} returns this
 */
proto.smartcore.types.FloatAttributes.prototype.setSupportsDelta = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional TweenSupport ramp_support = 5;
 * @return {!proto.smartcore.types.TweenSupport}
 */
proto.smartcore.types.FloatAttributes.prototype.getRampSupport = function() {
  return /** @type {!proto.smartcore.types.TweenSupport} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.smartcore.types.TweenSupport} value
 * @return {!proto.smartcore.types.FloatAttributes} returns this
 */
proto.smartcore.types.FloatAttributes.prototype.setRampSupport = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional NumberCapping default_capping = 6;
 * @return {?proto.smartcore.types.NumberCapping}
 */
proto.smartcore.types.FloatAttributes.prototype.getDefaultCapping = function() {
  return /** @type{?proto.smartcore.types.NumberCapping} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.types.NumberCapping, 6));
};


/**
 * @param {?proto.smartcore.types.NumberCapping|undefined} value
 * @return {!proto.smartcore.types.FloatAttributes} returns this
*/
proto.smartcore.types.FloatAttributes.prototype.setDefaultCapping = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.types.FloatAttributes} returns this
 */
proto.smartcore.types.FloatAttributes.prototype.clearDefaultCapping = function() {
  return this.setDefaultCapping(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.types.FloatAttributes.prototype.hasDefaultCapping = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.smartcore.types.InvalidNumberBehaviour = {
  UNSPECIFIED: 0,
  RESTRICT: 1,
  ERROR: 2,
  ALLOW: 3
};

goog.object.extend(exports, proto.smartcore.types);
