// source: device/info/info.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');
goog.object.extend(proto, google_protobuf_any_pb);
var types_change_pb = require('../../types/change_pb.js');
goog.object.extend(proto, types_change_pb);
goog.exportSymbol('proto.smartcore.api.device.info.Device', null, global);
goog.exportSymbol('proto.smartcore.api.device.info.GrpcClientOptions', null, global);
goog.exportSymbol('proto.smartcore.api.device.info.ListDevicesRequest', null, global);
goog.exportSymbol('proto.smartcore.api.device.info.ListDevicesResponse', null, global);
goog.exportSymbol('proto.smartcore.api.device.info.PullDevicesRequest', null, global);
goog.exportSymbol('proto.smartcore.api.device.info.PullDevicesResponse', null, global);
goog.exportSymbol('proto.smartcore.api.device.info.PullDevicesResponse.Change', null, global);
goog.exportSymbol('proto.smartcore.api.device.info.Trait', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.api.device.info.ListDevicesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.api.device.info.ListDevicesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.api.device.info.ListDevicesRequest.displayName = 'proto.smartcore.api.device.info.ListDevicesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.api.device.info.ListDevicesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.api.device.info.ListDevicesResponse.repeatedFields_, null);
};
goog.inherits(proto.smartcore.api.device.info.ListDevicesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.api.device.info.ListDevicesResponse.displayName = 'proto.smartcore.api.device.info.ListDevicesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.api.device.info.PullDevicesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.api.device.info.PullDevicesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.api.device.info.PullDevicesRequest.displayName = 'proto.smartcore.api.device.info.PullDevicesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.api.device.info.PullDevicesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.api.device.info.PullDevicesResponse.repeatedFields_, null);
};
goog.inherits(proto.smartcore.api.device.info.PullDevicesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.api.device.info.PullDevicesResponse.displayName = 'proto.smartcore.api.device.info.PullDevicesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.api.device.info.PullDevicesResponse.Change, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.api.device.info.PullDevicesResponse.Change.displayName = 'proto.smartcore.api.device.info.PullDevicesResponse.Change';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.api.device.info.Device = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.smartcore.api.device.info.Device.repeatedFields_, null);
};
goog.inherits(proto.smartcore.api.device.info.Device, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.api.device.info.Device.displayName = 'proto.smartcore.api.device.info.Device';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.api.device.info.Trait = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.api.device.info.Trait, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.api.device.info.Trait.displayName = 'proto.smartcore.api.device.info.Trait';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.smartcore.api.device.info.GrpcClientOptions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.smartcore.api.device.info.GrpcClientOptions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.smartcore.api.device.info.GrpcClientOptions.displayName = 'proto.smartcore.api.device.info.GrpcClientOptions';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.api.device.info.ListDevicesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.api.device.info.ListDevicesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.api.device.info.ListDevicesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.ListDevicesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    depth: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pageToken: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.api.device.info.ListDevicesRequest}
 */
proto.smartcore.api.device.info.ListDevicesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.api.device.info.ListDevicesRequest;
  return proto.smartcore.api.device.info.ListDevicesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.api.device.info.ListDevicesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.api.device.info.ListDevicesRequest}
 */
proto.smartcore.api.device.info.ListDevicesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.api.device.info.ListDevicesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.api.device.info.ListDevicesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.api.device.info.ListDevicesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.ListDevicesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDepth();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional int32 depth = 1;
 * @return {number}
 */
proto.smartcore.api.device.info.ListDevicesRequest.prototype.getDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.api.device.info.ListDevicesRequest} returns this
 */
proto.smartcore.api.device.info.ListDevicesRequest.prototype.setDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.smartcore.api.device.info.ListDevicesRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.api.device.info.ListDevicesRequest} returns this
 */
proto.smartcore.api.device.info.ListDevicesRequest.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string page_token = 3;
 * @return {string}
 */
proto.smartcore.api.device.info.ListDevicesRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.api.device.info.ListDevicesRequest} returns this
 */
proto.smartcore.api.device.info.ListDevicesRequest.prototype.setPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.api.device.info.ListDevicesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.api.device.info.ListDevicesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.api.device.info.ListDevicesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.api.device.info.ListDevicesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.ListDevicesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    devicesList: jspb.Message.toObjectList(msg.getDevicesList(),
    proto.smartcore.api.device.info.Device.toObject, includeInstance),
    nextPageToken: jspb.Message.getFieldWithDefault(msg, 2, ""),
    totalSize: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.api.device.info.ListDevicesResponse}
 */
proto.smartcore.api.device.info.ListDevicesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.api.device.info.ListDevicesResponse;
  return proto.smartcore.api.device.info.ListDevicesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.api.device.info.ListDevicesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.api.device.info.ListDevicesResponse}
 */
proto.smartcore.api.device.info.ListDevicesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.api.device.info.Device;
      reader.readMessage(value,proto.smartcore.api.device.info.Device.deserializeBinaryFromReader);
      msg.addDevices(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.api.device.info.ListDevicesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.api.device.info.ListDevicesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.api.device.info.ListDevicesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.ListDevicesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDevicesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartcore.api.device.info.Device.serializeBinaryToWriter
    );
  }
  f = message.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * repeated Device devices = 1;
 * @return {!Array<!proto.smartcore.api.device.info.Device>}
 */
proto.smartcore.api.device.info.ListDevicesResponse.prototype.getDevicesList = function() {
  return /** @type{!Array<!proto.smartcore.api.device.info.Device>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.api.device.info.Device, 1));
};


/**
 * @param {!Array<!proto.smartcore.api.device.info.Device>} value
 * @return {!proto.smartcore.api.device.info.ListDevicesResponse} returns this
*/
proto.smartcore.api.device.info.ListDevicesResponse.prototype.setDevicesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartcore.api.device.info.Device=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.api.device.info.Device}
 */
proto.smartcore.api.device.info.ListDevicesResponse.prototype.addDevices = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartcore.api.device.info.Device, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.api.device.info.ListDevicesResponse} returns this
 */
proto.smartcore.api.device.info.ListDevicesResponse.prototype.clearDevicesList = function() {
  return this.setDevicesList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.smartcore.api.device.info.ListDevicesResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.api.device.info.ListDevicesResponse} returns this
 */
proto.smartcore.api.device.info.ListDevicesResponse.prototype.setNextPageToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 total_size = 3;
 * @return {number}
 */
proto.smartcore.api.device.info.ListDevicesResponse.prototype.getTotalSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.api.device.info.ListDevicesResponse} returns this
 */
proto.smartcore.api.device.info.ListDevicesResponse.prototype.setTotalSize = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.api.device.info.PullDevicesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.api.device.info.PullDevicesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.api.device.info.PullDevicesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.PullDevicesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    depth: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sync: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.api.device.info.PullDevicesRequest}
 */
proto.smartcore.api.device.info.PullDevicesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.api.device.info.PullDevicesRequest;
  return proto.smartcore.api.device.info.PullDevicesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.api.device.info.PullDevicesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.api.device.info.PullDevicesRequest}
 */
proto.smartcore.api.device.info.PullDevicesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepth(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSync(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.api.device.info.PullDevicesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.api.device.info.PullDevicesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.api.device.info.PullDevicesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.PullDevicesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDepth();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSync();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int32 depth = 1;
 * @return {number}
 */
proto.smartcore.api.device.info.PullDevicesRequest.prototype.getDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.smartcore.api.device.info.PullDevicesRequest} returns this
 */
proto.smartcore.api.device.info.PullDevicesRequest.prototype.setDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool sync = 2;
 * @return {boolean}
 */
proto.smartcore.api.device.info.PullDevicesRequest.prototype.getSync = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.api.device.info.PullDevicesRequest} returns this
 */
proto.smartcore.api.device.info.PullDevicesRequest.prototype.setSync = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.api.device.info.PullDevicesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.api.device.info.PullDevicesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.api.device.info.PullDevicesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.api.device.info.PullDevicesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.PullDevicesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    changesList: jspb.Message.toObjectList(msg.getChangesList(),
    proto.smartcore.api.device.info.PullDevicesResponse.Change.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.api.device.info.PullDevicesResponse}
 */
proto.smartcore.api.device.info.PullDevicesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.api.device.info.PullDevicesResponse;
  return proto.smartcore.api.device.info.PullDevicesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.api.device.info.PullDevicesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.api.device.info.PullDevicesResponse}
 */
proto.smartcore.api.device.info.PullDevicesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.smartcore.api.device.info.PullDevicesResponse.Change;
      reader.readMessage(value,proto.smartcore.api.device.info.PullDevicesResponse.Change.deserializeBinaryFromReader);
      msg.addChanges(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.api.device.info.PullDevicesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.api.device.info.PullDevicesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.api.device.info.PullDevicesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.PullDevicesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.smartcore.api.device.info.PullDevicesResponse.Change.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.api.device.info.PullDevicesResponse.Change.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.api.device.info.PullDevicesResponse.Change} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    newValue: (f = msg.getNewValue()) && proto.smartcore.api.device.info.Device.toObject(includeInstance, f),
    oldValue: (f = msg.getOldValue()) && proto.smartcore.api.device.info.Device.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.api.device.info.PullDevicesResponse.Change}
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.api.device.info.PullDevicesResponse.Change;
  return proto.smartcore.api.device.info.PullDevicesResponse.Change.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.api.device.info.PullDevicesResponse.Change} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.api.device.info.PullDevicesResponse.Change}
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.smartcore.api.types.ChangeType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.smartcore.api.device.info.Device;
      reader.readMessage(value,proto.smartcore.api.device.info.Device.deserializeBinaryFromReader);
      msg.setNewValue(value);
      break;
    case 3:
      var value = new proto.smartcore.api.device.info.Device;
      reader.readMessage(value,proto.smartcore.api.device.info.Device.deserializeBinaryFromReader);
      msg.setOldValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.api.device.info.PullDevicesResponse.Change.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.api.device.info.PullDevicesResponse.Change} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getNewValue();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.smartcore.api.device.info.Device.serializeBinaryToWriter
    );
  }
  f = message.getOldValue();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.smartcore.api.device.info.Device.serializeBinaryToWriter
    );
  }
};


/**
 * optional smartcore.api.types.ChangeType type = 1;
 * @return {!proto.smartcore.api.types.ChangeType}
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.prototype.getType = function() {
  return /** @type {!proto.smartcore.api.types.ChangeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.smartcore.api.types.ChangeType} value
 * @return {!proto.smartcore.api.device.info.PullDevicesResponse.Change} returns this
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Device new_value = 2;
 * @return {?proto.smartcore.api.device.info.Device}
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.prototype.getNewValue = function() {
  return /** @type{?proto.smartcore.api.device.info.Device} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.api.device.info.Device, 2));
};


/**
 * @param {?proto.smartcore.api.device.info.Device|undefined} value
 * @return {!proto.smartcore.api.device.info.PullDevicesResponse.Change} returns this
*/
proto.smartcore.api.device.info.PullDevicesResponse.Change.prototype.setNewValue = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.api.device.info.PullDevicesResponse.Change} returns this
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.prototype.clearNewValue = function() {
  return this.setNewValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.prototype.hasNewValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Device old_value = 3;
 * @return {?proto.smartcore.api.device.info.Device}
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.prototype.getOldValue = function() {
  return /** @type{?proto.smartcore.api.device.info.Device} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.api.device.info.Device, 3));
};


/**
 * @param {?proto.smartcore.api.device.info.Device|undefined} value
 * @return {!proto.smartcore.api.device.info.PullDevicesResponse.Change} returns this
*/
proto.smartcore.api.device.info.PullDevicesResponse.Change.prototype.setOldValue = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.api.device.info.PullDevicesResponse.Change} returns this
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.prototype.clearOldValue = function() {
  return this.setOldValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.api.device.info.PullDevicesResponse.Change.prototype.hasOldValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Change changes = 1;
 * @return {!Array<!proto.smartcore.api.device.info.PullDevicesResponse.Change>}
 */
proto.smartcore.api.device.info.PullDevicesResponse.prototype.getChangesList = function() {
  return /** @type{!Array<!proto.smartcore.api.device.info.PullDevicesResponse.Change>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.api.device.info.PullDevicesResponse.Change, 1));
};


/**
 * @param {!Array<!proto.smartcore.api.device.info.PullDevicesResponse.Change>} value
 * @return {!proto.smartcore.api.device.info.PullDevicesResponse} returns this
*/
proto.smartcore.api.device.info.PullDevicesResponse.prototype.setChangesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.smartcore.api.device.info.PullDevicesResponse.Change=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.api.device.info.PullDevicesResponse.Change}
 */
proto.smartcore.api.device.info.PullDevicesResponse.prototype.addChanges = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.smartcore.api.device.info.PullDevicesResponse.Change, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.api.device.info.PullDevicesResponse} returns this
 */
proto.smartcore.api.device.info.PullDevicesResponse.prototype.clearChangesList = function() {
  return this.setChangesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.smartcore.api.device.info.Device.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.api.device.info.Device.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.api.device.info.Device.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.api.device.info.Device} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.Device.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    traitsList: jspb.Message.toObjectList(msg.getTraitsList(),
    proto.smartcore.api.device.info.Trait.toObject, includeInstance),
    owner: (f = msg.getOwner()) && proto.smartcore.api.device.info.Device.toObject(includeInstance, f),
    client: (f = msg.getClient()) && proto.smartcore.api.device.info.GrpcClientOptions.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.api.device.info.Device}
 */
proto.smartcore.api.device.info.Device.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.api.device.info.Device;
  return proto.smartcore.api.device.info.Device.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.api.device.info.Device} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.api.device.info.Device}
 */
proto.smartcore.api.device.info.Device.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.smartcore.api.device.info.Trait;
      reader.readMessage(value,proto.smartcore.api.device.info.Trait.deserializeBinaryFromReader);
      msg.addTraits(value);
      break;
    case 3:
      var value = new proto.smartcore.api.device.info.Device;
      reader.readMessage(value,proto.smartcore.api.device.info.Device.deserializeBinaryFromReader);
      msg.setOwner(value);
      break;
    case 4:
      var value = new proto.smartcore.api.device.info.GrpcClientOptions;
      reader.readMessage(value,proto.smartcore.api.device.info.GrpcClientOptions.deserializeBinaryFromReader);
      msg.setClient(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.api.device.info.Device.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.api.device.info.Device.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.api.device.info.Device} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.Device.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTraitsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.smartcore.api.device.info.Trait.serializeBinaryToWriter
    );
  }
  f = message.getOwner();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.smartcore.api.device.info.Device.serializeBinaryToWriter
    );
  }
  f = message.getClient();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.smartcore.api.device.info.GrpcClientOptions.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.api.device.info.Device.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.api.device.info.Device} returns this
 */
proto.smartcore.api.device.info.Device.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Trait traits = 2;
 * @return {!Array<!proto.smartcore.api.device.info.Trait>}
 */
proto.smartcore.api.device.info.Device.prototype.getTraitsList = function() {
  return /** @type{!Array<!proto.smartcore.api.device.info.Trait>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.smartcore.api.device.info.Trait, 2));
};


/**
 * @param {!Array<!proto.smartcore.api.device.info.Trait>} value
 * @return {!proto.smartcore.api.device.info.Device} returns this
*/
proto.smartcore.api.device.info.Device.prototype.setTraitsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.smartcore.api.device.info.Trait=} opt_value
 * @param {number=} opt_index
 * @return {!proto.smartcore.api.device.info.Trait}
 */
proto.smartcore.api.device.info.Device.prototype.addTraits = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.smartcore.api.device.info.Trait, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.smartcore.api.device.info.Device} returns this
 */
proto.smartcore.api.device.info.Device.prototype.clearTraitsList = function() {
  return this.setTraitsList([]);
};


/**
 * optional Device owner = 3;
 * @return {?proto.smartcore.api.device.info.Device}
 */
proto.smartcore.api.device.info.Device.prototype.getOwner = function() {
  return /** @type{?proto.smartcore.api.device.info.Device} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.api.device.info.Device, 3));
};


/**
 * @param {?proto.smartcore.api.device.info.Device|undefined} value
 * @return {!proto.smartcore.api.device.info.Device} returns this
*/
proto.smartcore.api.device.info.Device.prototype.setOwner = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.api.device.info.Device} returns this
 */
proto.smartcore.api.device.info.Device.prototype.clearOwner = function() {
  return this.setOwner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.api.device.info.Device.prototype.hasOwner = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional GrpcClientOptions client = 4;
 * @return {?proto.smartcore.api.device.info.GrpcClientOptions}
 */
proto.smartcore.api.device.info.Device.prototype.getClient = function() {
  return /** @type{?proto.smartcore.api.device.info.GrpcClientOptions} */ (
    jspb.Message.getWrapperField(this, proto.smartcore.api.device.info.GrpcClientOptions, 4));
};


/**
 * @param {?proto.smartcore.api.device.info.GrpcClientOptions|undefined} value
 * @return {!proto.smartcore.api.device.info.Device} returns this
*/
proto.smartcore.api.device.info.Device.prototype.setClient = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.api.device.info.Device} returns this
 */
proto.smartcore.api.device.info.Device.prototype.clearClient = function() {
  return this.setClient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.api.device.info.Device.prototype.hasClient = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.smartcore.api.device.info.Device.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.api.device.info.Device} returns this
 */
proto.smartcore.api.device.info.Device.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string display_name = 6;
 * @return {string}
 */
proto.smartcore.api.device.info.Device.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.api.device.info.Device} returns this
 */
proto.smartcore.api.device.info.Device.prototype.setDisplayName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.smartcore.api.device.info.Device.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.api.device.info.Device} returns this
 */
proto.smartcore.api.device.info.Device.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * map<string, string> labels = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.smartcore.api.device.info.Device.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.smartcore.api.device.info.Device} returns this
 */
proto.smartcore.api.device.info.Device.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.api.device.info.Trait.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.api.device.info.Trait.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.api.device.info.Trait} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.Trait.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    readable: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    writable: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    observable: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    attributes: (f = msg.getAttributes()) && google_protobuf_any_pb.Any.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.api.device.info.Trait}
 */
proto.smartcore.api.device.info.Trait.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.api.device.info.Trait;
  return proto.smartcore.api.device.info.Trait.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.api.device.info.Trait} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.api.device.info.Trait}
 */
proto.smartcore.api.device.info.Trait.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReadable(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWritable(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setObservable(value);
      break;
    case 5:
      var value = new google_protobuf_any_pb.Any;
      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);
      msg.setAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.api.device.info.Trait.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.api.device.info.Trait.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.api.device.info.Trait} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.Trait.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReadable();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getWritable();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getObservable();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getAttributes();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_any_pb.Any.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.smartcore.api.device.info.Trait.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.api.device.info.Trait} returns this
 */
proto.smartcore.api.device.info.Trait.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool readable = 2;
 * @return {boolean}
 */
proto.smartcore.api.device.info.Trait.prototype.getReadable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.api.device.info.Trait} returns this
 */
proto.smartcore.api.device.info.Trait.prototype.setReadable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool writable = 3;
 * @return {boolean}
 */
proto.smartcore.api.device.info.Trait.prototype.getWritable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.api.device.info.Trait} returns this
 */
proto.smartcore.api.device.info.Trait.prototype.setWritable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool observable = 4;
 * @return {boolean}
 */
proto.smartcore.api.device.info.Trait.prototype.getObservable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.smartcore.api.device.info.Trait} returns this
 */
proto.smartcore.api.device.info.Trait.prototype.setObservable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional google.protobuf.Any attributes = 5;
 * @return {?proto.google.protobuf.Any}
 */
proto.smartcore.api.device.info.Trait.prototype.getAttributes = function() {
  return /** @type{?proto.google.protobuf.Any} */ (
    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 5));
};


/**
 * @param {?proto.google.protobuf.Any|undefined} value
 * @return {!proto.smartcore.api.device.info.Trait} returns this
*/
proto.smartcore.api.device.info.Trait.prototype.setAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.smartcore.api.device.info.Trait} returns this
 */
proto.smartcore.api.device.info.Trait.prototype.clearAttributes = function() {
  return this.setAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.smartcore.api.device.info.Trait.prototype.hasAttributes = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.toObject = function(opt_includeInstance) {
  return proto.smartcore.api.device.info.GrpcClientOptions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.smartcore.api.device.info.GrpcClientOptions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.GrpcClientOptions.toObject = function(includeInstance, msg) {
  var f, obj = {
    authority: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientcert: msg.getClientcert_asB64(),
    clientkey: msg.getClientkey_asB64(),
    clientca: msg.getClientca_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.smartcore.api.device.info.GrpcClientOptions}
 */
proto.smartcore.api.device.info.GrpcClientOptions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.smartcore.api.device.info.GrpcClientOptions;
  return proto.smartcore.api.device.info.GrpcClientOptions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.smartcore.api.device.info.GrpcClientOptions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.smartcore.api.device.info.GrpcClientOptions}
 */
proto.smartcore.api.device.info.GrpcClientOptions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthority(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientcert(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientkey(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setClientca(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.smartcore.api.device.info.GrpcClientOptions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.smartcore.api.device.info.GrpcClientOptions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.smartcore.api.device.info.GrpcClientOptions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthority();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientcert_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getClientkey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getClientca_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string authority = 1;
 * @return {string}
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.getAuthority = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.smartcore.api.device.info.GrpcClientOptions} returns this
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.setAuthority = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bytes clientCert = 2;
 * @return {!(string|Uint8Array)}
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.getClientcert = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes clientCert = 2;
 * This is a type-conversion wrapper around `getClientcert()`
 * @return {string}
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.getClientcert_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientcert()));
};


/**
 * optional bytes clientCert = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientcert()`
 * @return {!Uint8Array}
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.getClientcert_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientcert()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.smartcore.api.device.info.GrpcClientOptions} returns this
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.setClientcert = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes clientKey = 3;
 * @return {!(string|Uint8Array)}
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.getClientkey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes clientKey = 3;
 * This is a type-conversion wrapper around `getClientkey()`
 * @return {string}
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.getClientkey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientkey()));
};


/**
 * optional bytes clientKey = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientkey()`
 * @return {!Uint8Array}
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.getClientkey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientkey()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.smartcore.api.device.info.GrpcClientOptions} returns this
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.setClientkey = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional bytes clientCa = 4;
 * @return {!(string|Uint8Array)}
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.getClientca = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes clientCa = 4;
 * This is a type-conversion wrapper around `getClientca()`
 * @return {string}
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.getClientca_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getClientca()));
};


/**
 * optional bytes clientCa = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getClientca()`
 * @return {!Uint8Array}
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.getClientca_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getClientca()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.smartcore.api.device.info.GrpcClientOptions} returns this
 */
proto.smartcore.api.device.info.GrpcClientOptions.prototype.setClientca = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


goog.object.extend(exports, proto.smartcore.api.device.info);
